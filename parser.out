Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NUMBER
    OBRACKET
    HASTA
    PRINCIPAL
    LEE
    ENTONCES
    INT
    PROGRAMA
    IGNORE
    MIENTRAS
    REGRESA
    ASSIGN
    SEMICOLON
    FUNCION
    NEWLINE
    SINO
    SI
    COMENTARIO
    FLOAT
    VOID
    DESDE
    ESCRIBE
    VAR
    CBRACKET
    HAZ

Grammar

Rule 0     S' -> expresion
Rule 1     expresion -> expresion OPMATRIZ LOGIC expresion
Rule 2     expresion -> expresion LOGIC expresion
Rule 3     expresion -> expresion RELOP expresion
Rule 4     expresion -> termino OPMATRIZ
Rule 5     expresion -> termino
Rule 6     termino -> termino PLUS termino
Rule 7     termino -> termino MINUS termino
Rule 8     termino -> termino MULTIPLY termino
Rule 9     termino -> termino DIVIDE termino
Rule 10    termino -> termino1
Rule 11    termino1 -> ID
Rule 12    termino1 -> ENTERO
Rule 13    termino1 -> FLOTANTE
Rule 14    termino1 -> CARACTER
Rule 15    termino1 -> LPAREN expresion RPAREN

Terminals, with rules where they appear

ASSIGN               : 
CARACTER             : 14
CBRACKET             : 
COMENTARIO           : 
DESDE                : 
DIVIDE               : 9
ENTERO               : 12
ENTONCES             : 
ESCRIBE              : 
FLOAT                : 
FLOTANTE             : 13
FUNCION              : 
HASTA                : 
HAZ                  : 
ID                   : 11
IGNORE               : 
INT                  : 
LEE                  : 
LOGIC                : 1 2
LPAREN               : 15
MIENTRAS             : 
MINUS                : 7
MULTIPLY             : 8
NEWLINE              : 
NUMBER               : 
OBRACKET             : 
OPMATRIZ             : 1 4
PLUS                 : 6
PRINCIPAL            : 
PROGRAMA             : 
REGRESA              : 
RELOP                : 3
RPAREN               : 15
SEMICOLON            : 
SI                   : 
SINO                 : 
VAR                  : 
VOID                 : 
error                : 

Nonterminals, with rules where they appear

expresion            : 1 1 2 2 3 3 15 0
termino              : 4 5 6 6 7 7 8 8 9 9
termino1             : 10

Parsing method: LALR

state 0

    (0) S' -> . expresion
    (1) expresion -> . expresion OPMATRIZ LOGIC expresion
    (2) expresion -> . expresion LOGIC expresion
    (3) expresion -> . expresion RELOP expresion
    (4) expresion -> . termino OPMATRIZ
    (5) expresion -> . termino
    (6) termino -> . termino PLUS termino
    (7) termino -> . termino MINUS termino
    (8) termino -> . termino MULTIPLY termino
    (9) termino -> . termino DIVIDE termino
    (10) termino -> . termino1
    (11) termino1 -> . ID
    (12) termino1 -> . ENTERO
    (13) termino1 -> . FLOTANTE
    (14) termino1 -> . CARACTER
    (15) termino1 -> . LPAREN expresion RPAREN

    ID              shift and go to state 1
    ENTERO          shift and go to state 2
    FLOTANTE        shift and go to state 3
    CARACTER        shift and go to state 6
    LPAREN          shift and go to state 7

    termino                        shift and go to state 4
    termino1                       shift and go to state 5
    expresion                      shift and go to state 8

state 1

    (11) termino1 -> ID .

    PLUS            reduce using rule 11 (termino1 -> ID .)
    MINUS           reduce using rule 11 (termino1 -> ID .)
    MULTIPLY        reduce using rule 11 (termino1 -> ID .)
    DIVIDE          reduce using rule 11 (termino1 -> ID .)
    OPMATRIZ        reduce using rule 11 (termino1 -> ID .)
    LOGIC           reduce using rule 11 (termino1 -> ID .)
    RELOP           reduce using rule 11 (termino1 -> ID .)
    $end            reduce using rule 11 (termino1 -> ID .)
    RPAREN          reduce using rule 11 (termino1 -> ID .)


state 2

    (12) termino1 -> ENTERO .

    PLUS            reduce using rule 12 (termino1 -> ENTERO .)
    MINUS           reduce using rule 12 (termino1 -> ENTERO .)
    MULTIPLY        reduce using rule 12 (termino1 -> ENTERO .)
    DIVIDE          reduce using rule 12 (termino1 -> ENTERO .)
    OPMATRIZ        reduce using rule 12 (termino1 -> ENTERO .)
    LOGIC           reduce using rule 12 (termino1 -> ENTERO .)
    RELOP           reduce using rule 12 (termino1 -> ENTERO .)
    $end            reduce using rule 12 (termino1 -> ENTERO .)
    RPAREN          reduce using rule 12 (termino1 -> ENTERO .)


state 3

    (13) termino1 -> FLOTANTE .

    PLUS            reduce using rule 13 (termino1 -> FLOTANTE .)
    MINUS           reduce using rule 13 (termino1 -> FLOTANTE .)
    MULTIPLY        reduce using rule 13 (termino1 -> FLOTANTE .)
    DIVIDE          reduce using rule 13 (termino1 -> FLOTANTE .)
    OPMATRIZ        reduce using rule 13 (termino1 -> FLOTANTE .)
    LOGIC           reduce using rule 13 (termino1 -> FLOTANTE .)
    RELOP           reduce using rule 13 (termino1 -> FLOTANTE .)
    $end            reduce using rule 13 (termino1 -> FLOTANTE .)
    RPAREN          reduce using rule 13 (termino1 -> FLOTANTE .)


state 4

    (4) expresion -> termino . OPMATRIZ
    (5) expresion -> termino .
    (6) termino -> termino . PLUS termino
    (7) termino -> termino . MINUS termino
    (8) termino -> termino . MULTIPLY termino
    (9) termino -> termino . DIVIDE termino

  ! shift/reduce conflict for OPMATRIZ resolved as shift
    OPMATRIZ        shift and go to state 9
    LOGIC           reduce using rule 5 (expresion -> termino .)
    RELOP           reduce using rule 5 (expresion -> termino .)
    $end            reduce using rule 5 (expresion -> termino .)
    RPAREN          reduce using rule 5 (expresion -> termino .)
    PLUS            shift and go to state 11
    MINUS           shift and go to state 10
    MULTIPLY        shift and go to state 13
    DIVIDE          shift and go to state 12

  ! OPMATRIZ        [ reduce using rule 5 (expresion -> termino .) ]


state 5

    (10) termino -> termino1 .

    OPMATRIZ        reduce using rule 10 (termino -> termino1 .)
    PLUS            reduce using rule 10 (termino -> termino1 .)
    MINUS           reduce using rule 10 (termino -> termino1 .)
    MULTIPLY        reduce using rule 10 (termino -> termino1 .)
    DIVIDE          reduce using rule 10 (termino -> termino1 .)
    LOGIC           reduce using rule 10 (termino -> termino1 .)
    RELOP           reduce using rule 10 (termino -> termino1 .)
    $end            reduce using rule 10 (termino -> termino1 .)
    RPAREN          reduce using rule 10 (termino -> termino1 .)


state 6

    (14) termino1 -> CARACTER .

    PLUS            reduce using rule 14 (termino1 -> CARACTER .)
    MINUS           reduce using rule 14 (termino1 -> CARACTER .)
    MULTIPLY        reduce using rule 14 (termino1 -> CARACTER .)
    DIVIDE          reduce using rule 14 (termino1 -> CARACTER .)
    OPMATRIZ        reduce using rule 14 (termino1 -> CARACTER .)
    LOGIC           reduce using rule 14 (termino1 -> CARACTER .)
    RELOP           reduce using rule 14 (termino1 -> CARACTER .)
    $end            reduce using rule 14 (termino1 -> CARACTER .)
    RPAREN          reduce using rule 14 (termino1 -> CARACTER .)


state 7

    (15) termino1 -> LPAREN . expresion RPAREN
    (1) expresion -> . expresion OPMATRIZ LOGIC expresion
    (2) expresion -> . expresion LOGIC expresion
    (3) expresion -> . expresion RELOP expresion
    (4) expresion -> . termino OPMATRIZ
    (5) expresion -> . termino
    (6) termino -> . termino PLUS termino
    (7) termino -> . termino MINUS termino
    (8) termino -> . termino MULTIPLY termino
    (9) termino -> . termino DIVIDE termino
    (10) termino -> . termino1
    (11) termino1 -> . ID
    (12) termino1 -> . ENTERO
    (13) termino1 -> . FLOTANTE
    (14) termino1 -> . CARACTER
    (15) termino1 -> . LPAREN expresion RPAREN

    ID              shift and go to state 1
    ENTERO          shift and go to state 2
    FLOTANTE        shift and go to state 3
    CARACTER        shift and go to state 6
    LPAREN          shift and go to state 7

    termino                        shift and go to state 4
    termino1                       shift and go to state 5
    expresion                      shift and go to state 14

state 8

    (0) S' -> expresion .
    (1) expresion -> expresion . OPMATRIZ LOGIC expresion
    (2) expresion -> expresion . LOGIC expresion
    (3) expresion -> expresion . RELOP expresion

    OPMATRIZ        shift and go to state 15
    LOGIC           shift and go to state 16
    RELOP           shift and go to state 17


state 9

    (4) expresion -> termino OPMATRIZ .

    OPMATRIZ        reduce using rule 4 (expresion -> termino OPMATRIZ .)
    LOGIC           reduce using rule 4 (expresion -> termino OPMATRIZ .)
    RELOP           reduce using rule 4 (expresion -> termino OPMATRIZ .)
    $end            reduce using rule 4 (expresion -> termino OPMATRIZ .)
    RPAREN          reduce using rule 4 (expresion -> termino OPMATRIZ .)


state 10

    (7) termino -> termino MINUS . termino
    (6) termino -> . termino PLUS termino
    (7) termino -> . termino MINUS termino
    (8) termino -> . termino MULTIPLY termino
    (9) termino -> . termino DIVIDE termino
    (10) termino -> . termino1
    (11) termino1 -> . ID
    (12) termino1 -> . ENTERO
    (13) termino1 -> . FLOTANTE
    (14) termino1 -> . CARACTER
    (15) termino1 -> . LPAREN expresion RPAREN

    ID              shift and go to state 1
    ENTERO          shift and go to state 2
    FLOTANTE        shift and go to state 3
    CARACTER        shift and go to state 6
    LPAREN          shift and go to state 7

    termino                        shift and go to state 18
    termino1                       shift and go to state 5

state 11

    (6) termino -> termino PLUS . termino
    (6) termino -> . termino PLUS termino
    (7) termino -> . termino MINUS termino
    (8) termino -> . termino MULTIPLY termino
    (9) termino -> . termino DIVIDE termino
    (10) termino -> . termino1
    (11) termino1 -> . ID
    (12) termino1 -> . ENTERO
    (13) termino1 -> . FLOTANTE
    (14) termino1 -> . CARACTER
    (15) termino1 -> . LPAREN expresion RPAREN

    ID              shift and go to state 1
    ENTERO          shift and go to state 2
    FLOTANTE        shift and go to state 3
    CARACTER        shift and go to state 6
    LPAREN          shift and go to state 7

    termino                        shift and go to state 19
    termino1                       shift and go to state 5

state 12

    (9) termino -> termino DIVIDE . termino
    (6) termino -> . termino PLUS termino
    (7) termino -> . termino MINUS termino
    (8) termino -> . termino MULTIPLY termino
    (9) termino -> . termino DIVIDE termino
    (10) termino -> . termino1
    (11) termino1 -> . ID
    (12) termino1 -> . ENTERO
    (13) termino1 -> . FLOTANTE
    (14) termino1 -> . CARACTER
    (15) termino1 -> . LPAREN expresion RPAREN

    ID              shift and go to state 1
    ENTERO          shift and go to state 2
    FLOTANTE        shift and go to state 3
    CARACTER        shift and go to state 6
    LPAREN          shift and go to state 7

    termino                        shift and go to state 20
    termino1                       shift and go to state 5

state 13

    (8) termino -> termino MULTIPLY . termino
    (6) termino -> . termino PLUS termino
    (7) termino -> . termino MINUS termino
    (8) termino -> . termino MULTIPLY termino
    (9) termino -> . termino DIVIDE termino
    (10) termino -> . termino1
    (11) termino1 -> . ID
    (12) termino1 -> . ENTERO
    (13) termino1 -> . FLOTANTE
    (14) termino1 -> . CARACTER
    (15) termino1 -> . LPAREN expresion RPAREN

    ID              shift and go to state 1
    ENTERO          shift and go to state 2
    FLOTANTE        shift and go to state 3
    CARACTER        shift and go to state 6
    LPAREN          shift and go to state 7

    termino                        shift and go to state 21
    termino1                       shift and go to state 5

state 14

    (15) termino1 -> LPAREN expresion . RPAREN
    (1) expresion -> expresion . OPMATRIZ LOGIC expresion
    (2) expresion -> expresion . LOGIC expresion
    (3) expresion -> expresion . RELOP expresion

    RPAREN          shift and go to state 22
    OPMATRIZ        shift and go to state 15
    LOGIC           shift and go to state 16
    RELOP           shift and go to state 17


state 15

    (1) expresion -> expresion OPMATRIZ . LOGIC expresion

    LOGIC           shift and go to state 23


state 16

    (2) expresion -> expresion LOGIC . expresion
    (1) expresion -> . expresion OPMATRIZ LOGIC expresion
    (2) expresion -> . expresion LOGIC expresion
    (3) expresion -> . expresion RELOP expresion
    (4) expresion -> . termino OPMATRIZ
    (5) expresion -> . termino
    (6) termino -> . termino PLUS termino
    (7) termino -> . termino MINUS termino
    (8) termino -> . termino MULTIPLY termino
    (9) termino -> . termino DIVIDE termino
    (10) termino -> . termino1
    (11) termino1 -> . ID
    (12) termino1 -> . ENTERO
    (13) termino1 -> . FLOTANTE
    (14) termino1 -> . CARACTER
    (15) termino1 -> . LPAREN expresion RPAREN

    ID              shift and go to state 1
    ENTERO          shift and go to state 2
    FLOTANTE        shift and go to state 3
    CARACTER        shift and go to state 6
    LPAREN          shift and go to state 7

    termino                        shift and go to state 4
    termino1                       shift and go to state 5
    expresion                      shift and go to state 24

state 17

    (3) expresion -> expresion RELOP . expresion
    (1) expresion -> . expresion OPMATRIZ LOGIC expresion
    (2) expresion -> . expresion LOGIC expresion
    (3) expresion -> . expresion RELOP expresion
    (4) expresion -> . termino OPMATRIZ
    (5) expresion -> . termino
    (6) termino -> . termino PLUS termino
    (7) termino -> . termino MINUS termino
    (8) termino -> . termino MULTIPLY termino
    (9) termino -> . termino DIVIDE termino
    (10) termino -> . termino1
    (11) termino1 -> . ID
    (12) termino1 -> . ENTERO
    (13) termino1 -> . FLOTANTE
    (14) termino1 -> . CARACTER
    (15) termino1 -> . LPAREN expresion RPAREN

    ID              shift and go to state 1
    ENTERO          shift and go to state 2
    FLOTANTE        shift and go to state 3
    CARACTER        shift and go to state 6
    LPAREN          shift and go to state 7

    termino                        shift and go to state 4
    termino1                       shift and go to state 5
    expresion                      shift and go to state 25

state 18

    (7) termino -> termino MINUS termino .
    (6) termino -> termino . PLUS termino
    (7) termino -> termino . MINUS termino
    (8) termino -> termino . MULTIPLY termino
    (9) termino -> termino . DIVIDE termino

    OPMATRIZ        reduce using rule 7 (termino -> termino MINUS termino .)
    PLUS            reduce using rule 7 (termino -> termino MINUS termino .)
    MINUS           reduce using rule 7 (termino -> termino MINUS termino .)
    LOGIC           reduce using rule 7 (termino -> termino MINUS termino .)
    RELOP           reduce using rule 7 (termino -> termino MINUS termino .)
    $end            reduce using rule 7 (termino -> termino MINUS termino .)
    RPAREN          reduce using rule 7 (termino -> termino MINUS termino .)
    MULTIPLY        shift and go to state 13
    DIVIDE          shift and go to state 12

  ! MULTIPLY        [ reduce using rule 7 (termino -> termino MINUS termino .) ]
  ! DIVIDE          [ reduce using rule 7 (termino -> termino MINUS termino .) ]
  ! PLUS            [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 10 ]


state 19

    (6) termino -> termino PLUS termino .
    (6) termino -> termino . PLUS termino
    (7) termino -> termino . MINUS termino
    (8) termino -> termino . MULTIPLY termino
    (9) termino -> termino . DIVIDE termino

    OPMATRIZ        reduce using rule 6 (termino -> termino PLUS termino .)
    PLUS            reduce using rule 6 (termino -> termino PLUS termino .)
    MINUS           reduce using rule 6 (termino -> termino PLUS termino .)
    LOGIC           reduce using rule 6 (termino -> termino PLUS termino .)
    RELOP           reduce using rule 6 (termino -> termino PLUS termino .)
    $end            reduce using rule 6 (termino -> termino PLUS termino .)
    RPAREN          reduce using rule 6 (termino -> termino PLUS termino .)
    MULTIPLY        shift and go to state 13
    DIVIDE          shift and go to state 12

  ! MULTIPLY        [ reduce using rule 6 (termino -> termino PLUS termino .) ]
  ! DIVIDE          [ reduce using rule 6 (termino -> termino PLUS termino .) ]
  ! PLUS            [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 10 ]


state 20

    (9) termino -> termino DIVIDE termino .
    (6) termino -> termino . PLUS termino
    (7) termino -> termino . MINUS termino
    (8) termino -> termino . MULTIPLY termino
    (9) termino -> termino . DIVIDE termino

    OPMATRIZ        reduce using rule 9 (termino -> termino DIVIDE termino .)
    PLUS            reduce using rule 9 (termino -> termino DIVIDE termino .)
    MINUS           reduce using rule 9 (termino -> termino DIVIDE termino .)
    MULTIPLY        reduce using rule 9 (termino -> termino DIVIDE termino .)
    DIVIDE          reduce using rule 9 (termino -> termino DIVIDE termino .)
    LOGIC           reduce using rule 9 (termino -> termino DIVIDE termino .)
    RELOP           reduce using rule 9 (termino -> termino DIVIDE termino .)
    $end            reduce using rule 9 (termino -> termino DIVIDE termino .)
    RPAREN          reduce using rule 9 (termino -> termino DIVIDE termino .)

  ! PLUS            [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 10 ]
  ! MULTIPLY        [ shift and go to state 13 ]
  ! DIVIDE          [ shift and go to state 12 ]


state 21

    (8) termino -> termino MULTIPLY termino .
    (6) termino -> termino . PLUS termino
    (7) termino -> termino . MINUS termino
    (8) termino -> termino . MULTIPLY termino
    (9) termino -> termino . DIVIDE termino

    OPMATRIZ        reduce using rule 8 (termino -> termino MULTIPLY termino .)
    PLUS            reduce using rule 8 (termino -> termino MULTIPLY termino .)
    MINUS           reduce using rule 8 (termino -> termino MULTIPLY termino .)
    MULTIPLY        reduce using rule 8 (termino -> termino MULTIPLY termino .)
    DIVIDE          reduce using rule 8 (termino -> termino MULTIPLY termino .)
    LOGIC           reduce using rule 8 (termino -> termino MULTIPLY termino .)
    RELOP           reduce using rule 8 (termino -> termino MULTIPLY termino .)
    $end            reduce using rule 8 (termino -> termino MULTIPLY termino .)
    RPAREN          reduce using rule 8 (termino -> termino MULTIPLY termino .)

  ! PLUS            [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 10 ]
  ! MULTIPLY        [ shift and go to state 13 ]
  ! DIVIDE          [ shift and go to state 12 ]


state 22

    (15) termino1 -> LPAREN expresion RPAREN .

    PLUS            reduce using rule 15 (termino1 -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 15 (termino1 -> LPAREN expresion RPAREN .)
    MULTIPLY        reduce using rule 15 (termino1 -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 15 (termino1 -> LPAREN expresion RPAREN .)
    OPMATRIZ        reduce using rule 15 (termino1 -> LPAREN expresion RPAREN .)
    LOGIC           reduce using rule 15 (termino1 -> LPAREN expresion RPAREN .)
    RELOP           reduce using rule 15 (termino1 -> LPAREN expresion RPAREN .)
    $end            reduce using rule 15 (termino1 -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 15 (termino1 -> LPAREN expresion RPAREN .)


state 23

    (1) expresion -> expresion OPMATRIZ LOGIC . expresion
    (1) expresion -> . expresion OPMATRIZ LOGIC expresion
    (2) expresion -> . expresion LOGIC expresion
    (3) expresion -> . expresion RELOP expresion
    (4) expresion -> . termino OPMATRIZ
    (5) expresion -> . termino
    (6) termino -> . termino PLUS termino
    (7) termino -> . termino MINUS termino
    (8) termino -> . termino MULTIPLY termino
    (9) termino -> . termino DIVIDE termino
    (10) termino -> . termino1
    (11) termino1 -> . ID
    (12) termino1 -> . ENTERO
    (13) termino1 -> . FLOTANTE
    (14) termino1 -> . CARACTER
    (15) termino1 -> . LPAREN expresion RPAREN

    ID              shift and go to state 1
    ENTERO          shift and go to state 2
    FLOTANTE        shift and go to state 3
    CARACTER        shift and go to state 6
    LPAREN          shift and go to state 7

    termino                        shift and go to state 4
    termino1                       shift and go to state 5
    expresion                      shift and go to state 26

state 24

    (2) expresion -> expresion LOGIC expresion .
    (1) expresion -> expresion . OPMATRIZ LOGIC expresion
    (2) expresion -> expresion . LOGIC expresion
    (3) expresion -> expresion . RELOP expresion

  ! shift/reduce conflict for OPMATRIZ resolved as shift
  ! shift/reduce conflict for LOGIC resolved as shift
  ! shift/reduce conflict for RELOP resolved as shift
    $end            reduce using rule 2 (expresion -> expresion LOGIC expresion .)
    RPAREN          reduce using rule 2 (expresion -> expresion LOGIC expresion .)
    OPMATRIZ        shift and go to state 15
    LOGIC           shift and go to state 16
    RELOP           shift and go to state 17

  ! OPMATRIZ        [ reduce using rule 2 (expresion -> expresion LOGIC expresion .) ]
  ! LOGIC           [ reduce using rule 2 (expresion -> expresion LOGIC expresion .) ]
  ! RELOP           [ reduce using rule 2 (expresion -> expresion LOGIC expresion .) ]


state 25

    (3) expresion -> expresion RELOP expresion .
    (1) expresion -> expresion . OPMATRIZ LOGIC expresion
    (2) expresion -> expresion . LOGIC expresion
    (3) expresion -> expresion . RELOP expresion

  ! shift/reduce conflict for OPMATRIZ resolved as shift
  ! shift/reduce conflict for LOGIC resolved as shift
  ! shift/reduce conflict for RELOP resolved as shift
    $end            reduce using rule 3 (expresion -> expresion RELOP expresion .)
    RPAREN          reduce using rule 3 (expresion -> expresion RELOP expresion .)
    OPMATRIZ        shift and go to state 15
    LOGIC           shift and go to state 16
    RELOP           shift and go to state 17

  ! OPMATRIZ        [ reduce using rule 3 (expresion -> expresion RELOP expresion .) ]
  ! LOGIC           [ reduce using rule 3 (expresion -> expresion RELOP expresion .) ]
  ! RELOP           [ reduce using rule 3 (expresion -> expresion RELOP expresion .) ]


state 26

    (1) expresion -> expresion OPMATRIZ LOGIC expresion .
    (1) expresion -> expresion . OPMATRIZ LOGIC expresion
    (2) expresion -> expresion . LOGIC expresion
    (3) expresion -> expresion . RELOP expresion

  ! shift/reduce conflict for OPMATRIZ resolved as shift
  ! shift/reduce conflict for LOGIC resolved as shift
  ! shift/reduce conflict for RELOP resolved as shift
    $end            reduce using rule 1 (expresion -> expresion OPMATRIZ LOGIC expresion .)
    RPAREN          reduce using rule 1 (expresion -> expresion OPMATRIZ LOGIC expresion .)
    OPMATRIZ        shift and go to state 15
    LOGIC           shift and go to state 16
    RELOP           shift and go to state 17

  ! OPMATRIZ        [ reduce using rule 1 (expresion -> expresion OPMATRIZ LOGIC expresion .) ]
  ! LOGIC           [ reduce using rule 1 (expresion -> expresion OPMATRIZ LOGIC expresion .) ]
  ! RELOP           [ reduce using rule 1 (expresion -> expresion OPMATRIZ LOGIC expresion .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OPMATRIZ in state 4 resolved as shift
WARNING: shift/reduce conflict for OPMATRIZ in state 24 resolved as shift
WARNING: shift/reduce conflict for LOGIC in state 24 resolved as shift
WARNING: shift/reduce conflict for RELOP in state 24 resolved as shift
WARNING: shift/reduce conflict for OPMATRIZ in state 25 resolved as shift
WARNING: shift/reduce conflict for LOGIC in state 25 resolved as shift
WARNING: shift/reduce conflict for RELOP in state 25 resolved as shift
WARNING: shift/reduce conflict for OPMATRIZ in state 26 resolved as shift
WARNING: shift/reduce conflict for LOGIC in state 26 resolved as shift
WARNING: shift/reduce conflict for RELOP in state 26 resolved as shift
