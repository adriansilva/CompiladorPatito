Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMENTARIO
    IGNORE
    NEWLINE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMICOLON programa2
Rule 2     programa2 -> declaracion programa2
Rule 3     programa2 -> np_gotoMain programa3
Rule 4     np_gotoMain -> <empty>
Rule 5     programa3 -> declaracionFuncion programa3
Rule 6     programa3 -> principal
Rule 7     principal -> PRINCIPAL np_updateMain OPAREN CPAREN OBRACKET estatutos CBRACKET np_end np_printCuadruplos np_printTablas
Rule 8     np_updateMain -> <empty>
Rule 9     np_end -> <empty>
Rule 10    np_printTablas -> <empty>
Rule 11    declaracion -> VAR INT np_defineTipo COLON declaracion2
Rule 12    declaracion -> VAR FLOAT np_defineTipo COLON declaracion2
Rule 13    declaracion -> VAR CHAR np_defineTipo COLON declaracion2
Rule 14    np_defineTipo -> <empty>
Rule 15    declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3
Rule 16    declaracion3 -> np_quitarFondo SEMICOLON
Rule 17    declaracion3 -> np_quitarFondo COMA declaracion2
Rule 18    declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON
Rule 19    declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2
Rule 20    declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
Rule 21    declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
Rule 22    declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
Rule 23    declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
Rule 24    np_esParametro -> <empty>
Rule 25    np_yaNoEsParametro -> <empty>
Rule 26    np_endFunc -> <empty>
Rule 27    np_termino -> <empty>
Rule 28    declaracionFuncionParametros -> empty
Rule 29    declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 30    declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 31    declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 32    declaracionFuncionParametros2 -> empty
Rule 33    declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 34    declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 35    declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 36    declaracionFuncionVariables -> empty
Rule 37    declaracionFuncionVariables -> declaracion
Rule 38    np_declfunc -> <empty>
Rule 39    estatutos -> return estatutos
Rule 40    estatutos -> empty
Rule 41    estatutos -> declaracion estatutos
Rule 42    estatutos -> estatutoRepeticionIncondicional estatutos
Rule 43    estatutos -> estatutoRepeticionCondicional estatutos
Rule 44    estatutos -> lectura estatutos
Rule 45    estatutos -> asignacion estatutos
Rule 46    estatutos -> escritura estatutos
Rule 47    estatutos -> decision estatutos
Rule 48    estatutos -> llamadaFuncion SEMICOLON estatutos
Rule 49    escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
Rule 50    escritura2 -> empty
Rule 51    escritura2 -> posibleID escritura3
Rule 52    escritura2 -> STRING escritura3
Rule 53    escritura3 -> empty
Rule 54    escritura3 -> COMA expresion escritura3
Rule 55    escritura3 -> COMA STRING escritura3
Rule 56    decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
Rule 57    decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
Rule 58    np_iniciaIf -> <empty>
Rule 59    np_terminaIf -> <empty>
Rule 60    np_iniciaElse -> <empty>
Rule 61    np_terminaElse -> <empty>
Rule 62    llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
Rule 63    np_existeFuncion -> <empty>
Rule 64    np_llamadaFuncion -> <empty>
Rule 65    np_agregarFondoParam -> <empty>
Rule 66    np_quitarFondoParam -> <empty>
Rule 67    paramsLlamada1 -> empty
Rule 68    paramsLlamada1 -> paramsLlamada2
Rule 69    paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo np_resolverParam
Rule 70    paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo np_resolverParam COMA paramsLlamada2
Rule 71    np_resolverParam -> <empty>
Rule 72    np_goSUB -> <empty>
Rule 73    lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
Rule 74    lectura2 -> empty
Rule 75    lectura2 -> COMA posibleID lectura2
Rule 76    asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
Rule 77    expresion -> expresion LOGIC np_insertarOperador expresion
Rule 78    expresion -> expresion RELOP np_insertarOperador expresion
Rule 79    expresion -> termino
Rule 80    termino -> termino PLUS np_insertarOperador termino
Rule 81    termino -> termino MINUS np_insertarOperador termino
Rule 82    termino -> termino MULTIPLY np_insertarOperador termino
Rule 83    termino -> termino DIVIDE np_insertarOperador termino
Rule 84    np_insertarOperador -> <empty>
Rule 85    termino -> termino1 OPMATRIZ np_insertarOperador
Rule 86    termino -> termino1
Rule 87    termino1 -> posibleID
Rule 88    termino1 -> ENTERO np_addConstanteINT np_enviarACuadruplosC
Rule 89    termino1 -> FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC
Rule 90    termino1 -> llamadaFuncion
Rule 91    termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
Rule 92    termino1 -> QUOT CARACTER QUOT
Rule 93    posibleID -> ID np_contieneID np_enviarACuadruplos
Rule 94    posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
Rule 95    posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
Rule 96    posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
Rule 97    posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
Rule 98    posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
Rule 99    np_updateCurrentDimension0 -> <empty>
Rule 100   np_updateCurrentDimension1 -> <empty>
Rule 101   np_updateCurrentDimension2 -> <empty>
Rule 102   estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
Rule 103   np_iniciaFor -> <empty>
Rule 104   np_forFalso -> <empty>
Rule 105   np_terminaFor -> <empty>
Rule 106   estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
Rule 107   npWhileStExp -> <empty>
Rule 108   npWhileInicia -> <empty>
Rule 109   npWhileTermina -> <empty>
Rule 110   return -> REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
Rule 111   return -> REGRESA SEMICOLON np_returnVOID
Rule 112   np_return -> <empty>
Rule 113   np_returnVOID -> <empty>
Rule 114   np_contieneID -> <empty>
Rule 115   np_addConstanteINT -> <empty>
Rule 116   np_addConstanteFLOAT -> <empty>
Rule 117   np_addVariableParametro -> <empty>
Rule 118   np_addVariable -> <empty>
Rule 119   np_enviarACuadruplos -> <empty>
Rule 120   np_enviarACuadruplosC -> <empty>
Rule 121   np_actualizarDimensiones -> <empty>
Rule 122   np_agregarFondo -> <empty>
Rule 123   np_quitarFondo -> <empty>
Rule 124   np_printCuadruplos -> <empty>
Rule 125   empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 18 19 76
CARACTER             : 92
CBRACKET             : 7 20 21 22 23 56 56 57 102 106
CCORCH               : 94 95 97 98
CHAR                 : 13 23 30 35
COLON                : 11 12 13
COMA                 : 17 19 33 34 35 54 55 70 75 95 98
COMENTARIO           : 
CPAREN               : 7 20 21 22 23 49 56 57 62 73 91 106
DESDE                : 102
DIVIDE               : 83
ENTERO               : 88
ENTONCES             : 56 57
ESCRIBE              : 49
FLOAT                : 12 22 31 34
FLOTANTE             : 89
FUNCION              : 20 21 22 23
HASTA                : 102
HAZ                  : 102 106
ID                   : 1 20 21 22 23 62 93 94 95 96 97 98 102
IGNORE               : 
INT                  : 11 21 29 33
LEE                  : 73
LOGIC                : 77
MIENTRAS             : 106
MINUS                : 81
MULTIPLY             : 82
NEWLINE              : 
OBRACKET             : 7 20 21 22 23 56 56 57 102 106
OCORCH               : 94 95 97 98
OPAREN               : 7 20 21 22 23 49 56 57 62 73 91 106
OPMATRIZ             : 85
PLUS                 : 80
PRINCIPAL            : 7
PROGRAMA             : 1
QUOT                 : 92 92
REGRESA              : 110 111
RELOP                : 78
SEMICOLON            : 1 16 18 48 49 73 76 110 111
SI                   : 56 57
SINO                 : 56
STRING               : 52 55
VAR                  : 11 12 13
VOID                 : 20
error                : 

Nonterminals, with rules where they appear

asignacion           : 45
decision             : 47
declaracion          : 2 37 41
declaracion2         : 11 12 13 17 19
declaracion3         : 15
declaracionFuncion   : 5
declaracionFuncionParametros : 20 21 22 23
declaracionFuncionParametros2 : 29 30 31 33 34 35
declaracionFuncionVariables : 20 21 22 23
empty                : 28 32 36 40 50 53 67 74
escritura            : 46
escritura2           : 49
escritura3           : 51 52 54 55
estatutoRepeticionCondicional : 43
estatutoRepeticionIncondicional : 42
estatutos            : 7 20 21 22 23 39 41 42 43 44 45 46 47 48 56 56 57 102 106
expresion            : 18 19 54 56 57 69 70 76 77 77 78 78 91 94 95 95 97 98 98 102 106 110
lectura              : 44
lectura2             : 73 75
llamadaFuncion       : 48 90
npWhileInicia        : 106
npWhileStExp         : 106
npWhileTermina       : 106
np_actualizarDimensiones : 96 97 98
np_addConstanteFLOAT : 89
np_addConstanteINT   : 88
np_addVariable       : 96 97 98
np_addVariableParametro : 
np_agregarFondo      : 15 29 30 31 33 34 35 56 56 57 69 70 76 76 94 95 95 102 106 110
np_agregarFondoParam : 62
np_contieneID        : 93 94 95 102
np_declfunc          : 20 21 22 23
np_defineTipo        : 11 12 13 29 30 31 33 34 35
np_end               : 7
np_endFunc           : 20 21 22 23
np_enviarACuadruplos : 93 94 95 96 97 98
np_enviarACuadruplosC : 88 89
np_esParametro       : 20 21 22 23
np_existeFuncion     : 62
np_forFalso          : 102
np_goSUB             : 62
np_gotoMain          : 3
np_iniciaElse        : 56
np_iniciaFor         : 102
np_iniciaIf          : 56 57
np_insertarOperador  : 18 19 76 77 78 80 81 82 83 85 91 91
np_llamadaFuncion    : 62
np_printCuadruplos   : 7
np_printTablas       : 7
np_quitarFondo       : 16 17 18 19 29 30 31 33 34 35 56 56 57 69 70 76 76 94 95 95 102 106 110
np_quitarFondoParam  : 62
np_resolverParam     : 69 70
np_return            : 110
np_returnVOID        : 111
np_terminaElse       : 56
np_terminaFor        : 102
np_terminaIf         : 57
np_termino           : 
np_updateCurrentDimension0 : 96
np_updateCurrentDimension1 : 97
np_updateCurrentDimension2 : 98
np_updateMain        : 7
np_yaNoEsParametro   : 20 21 22 23
paramsLlamada1       : 62
paramsLlamada2       : 68 70
posibleID            : 51 73 75 76 87
posibleIDDeclaracion : 15 29 30 31 33 34 35
principal            : 6
programa             : 0
programa2            : 1 2
programa3            : 3 5
return               : 39
termino              : 79 80 80 81 81 82 82 83 83
termino1             : 85 86

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMICOLON programa2

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMICOLON programa2

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMICOLON programa2

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMICOLON . programa2
    (2) programa2 -> . declaracion programa2
    (3) programa2 -> . np_gotoMain programa3
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (4) np_gotoMain -> .

    VAR             shift and go to state 8
    FUNCION         reduce using rule 4 (np_gotoMain -> .)
    PRINCIPAL       reduce using rule 4 (np_gotoMain -> .)

    programa2                      shift and go to state 5
    declaracion                    shift and go to state 6
    np_gotoMain                    shift and go to state 7

state 5

    (1) programa -> PROGRAMA ID SEMICOLON programa2 .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMICOLON programa2 .)


state 6

    (2) programa2 -> declaracion . programa2
    (2) programa2 -> . declaracion programa2
    (3) programa2 -> . np_gotoMain programa3
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (4) np_gotoMain -> .

    VAR             shift and go to state 8
    FUNCION         reduce using rule 4 (np_gotoMain -> .)
    PRINCIPAL       reduce using rule 4 (np_gotoMain -> .)

    declaracion                    shift and go to state 6
    programa2                      shift and go to state 9
    np_gotoMain                    shift and go to state 7

state 7

    (3) programa2 -> np_gotoMain . programa3
    (5) programa3 -> . declaracionFuncion programa3
    (6) programa3 -> . principal
    (20) declaracionFuncion -> . FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (21) declaracionFuncion -> . FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (22) declaracionFuncion -> . FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (23) declaracionFuncion -> . FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (7) principal -> . PRINCIPAL np_updateMain OPAREN CPAREN OBRACKET estatutos CBRACKET np_end np_printCuadruplos np_printTablas

    FUNCION         shift and go to state 13
    PRINCIPAL       shift and go to state 14

    programa3                      shift and go to state 10
    declaracionFuncion             shift and go to state 11
    principal                      shift and go to state 12

state 8

    (11) declaracion -> VAR . INT np_defineTipo COLON declaracion2
    (12) declaracion -> VAR . FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> VAR . CHAR np_defineTipo COLON declaracion2

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17


state 9

    (2) programa2 -> declaracion programa2 .

    $end            reduce using rule 2 (programa2 -> declaracion programa2 .)


state 10

    (3) programa2 -> np_gotoMain programa3 .

    $end            reduce using rule 3 (programa2 -> np_gotoMain programa3 .)


state 11

    (5) programa3 -> declaracionFuncion . programa3
    (5) programa3 -> . declaracionFuncion programa3
    (6) programa3 -> . principal
    (20) declaracionFuncion -> . FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (21) declaracionFuncion -> . FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (22) declaracionFuncion -> . FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (23) declaracionFuncion -> . FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (7) principal -> . PRINCIPAL np_updateMain OPAREN CPAREN OBRACKET estatutos CBRACKET np_end np_printCuadruplos np_printTablas

    FUNCION         shift and go to state 13
    PRINCIPAL       shift and go to state 14

    declaracionFuncion             shift and go to state 11
    programa3                      shift and go to state 18
    principal                      shift and go to state 12

state 12

    (6) programa3 -> principal .

    $end            reduce using rule 6 (programa3 -> principal .)


state 13

    (20) declaracionFuncion -> FUNCION . VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (21) declaracionFuncion -> FUNCION . INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (22) declaracionFuncion -> FUNCION . FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (23) declaracionFuncion -> FUNCION . CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    VOID            shift and go to state 19
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22


state 14

    (7) principal -> PRINCIPAL . np_updateMain OPAREN CPAREN OBRACKET estatutos CBRACKET np_end np_printCuadruplos np_printTablas
    (8) np_updateMain -> .

    OPAREN          reduce using rule 8 (np_updateMain -> .)

    np_updateMain                  shift and go to state 23

state 15

    (11) declaracion -> VAR INT . np_defineTipo COLON declaracion2
    (14) np_defineTipo -> .

    COLON           reduce using rule 14 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 24

state 16

    (12) declaracion -> VAR FLOAT . np_defineTipo COLON declaracion2
    (14) np_defineTipo -> .

    COLON           reduce using rule 14 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 25

state 17

    (13) declaracion -> VAR CHAR . np_defineTipo COLON declaracion2
    (14) np_defineTipo -> .

    COLON           reduce using rule 14 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 26

state 18

    (5) programa3 -> declaracionFuncion programa3 .

    $end            reduce using rule 5 (programa3 -> declaracionFuncion programa3 .)


state 19

    (20) declaracionFuncion -> FUNCION VOID . ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    ID              shift and go to state 27


state 20

    (21) declaracionFuncion -> FUNCION INT . ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    ID              shift and go to state 28


state 21

    (22) declaracionFuncion -> FUNCION FLOAT . ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    ID              shift and go to state 29


state 22

    (23) declaracionFuncion -> FUNCION CHAR . ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    ID              shift and go to state 30


state 23

    (7) principal -> PRINCIPAL np_updateMain . OPAREN CPAREN OBRACKET estatutos CBRACKET np_end np_printCuadruplos np_printTablas

    OPAREN          shift and go to state 31


state 24

    (11) declaracion -> VAR INT np_defineTipo . COLON declaracion2

    COLON           shift and go to state 32


state 25

    (12) declaracion -> VAR FLOAT np_defineTipo . COLON declaracion2

    COLON           shift and go to state 33


state 26

    (13) declaracion -> VAR CHAR np_defineTipo . COLON declaracion2

    COLON           shift and go to state 34


state 27

    (20) declaracionFuncion -> FUNCION VOID ID . np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (38) np_declfunc -> .

    OPAREN          reduce using rule 38 (np_declfunc -> .)

    np_declfunc                    shift and go to state 35

state 28

    (21) declaracionFuncion -> FUNCION INT ID . np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (38) np_declfunc -> .

    OPAREN          reduce using rule 38 (np_declfunc -> .)

    np_declfunc                    shift and go to state 36

state 29

    (22) declaracionFuncion -> FUNCION FLOAT ID . np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (38) np_declfunc -> .

    OPAREN          reduce using rule 38 (np_declfunc -> .)

    np_declfunc                    shift and go to state 37

state 30

    (23) declaracionFuncion -> FUNCION CHAR ID . np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (38) np_declfunc -> .

    OPAREN          reduce using rule 38 (np_declfunc -> .)

    np_declfunc                    shift and go to state 38

state 31

    (7) principal -> PRINCIPAL np_updateMain OPAREN . CPAREN OBRACKET estatutos CBRACKET np_end np_printCuadruplos np_printTablas

    CPAREN          shift and go to state 39


state 32

    (11) declaracion -> VAR INT np_defineTipo COLON . declaracion2
    (15) declaracion2 -> . np_agregarFondo posibleIDDeclaracion declaracion3
    (122) np_agregarFondo -> .

    ID              reduce using rule 122 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 40
    np_agregarFondo                shift and go to state 41

state 33

    (12) declaracion -> VAR FLOAT np_defineTipo COLON . declaracion2
    (15) declaracion2 -> . np_agregarFondo posibleIDDeclaracion declaracion3
    (122) np_agregarFondo -> .

    ID              reduce using rule 122 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 42
    np_agregarFondo                shift and go to state 41

state 34

    (13) declaracion -> VAR CHAR np_defineTipo COLON . declaracion2
    (15) declaracion2 -> . np_agregarFondo posibleIDDeclaracion declaracion3
    (122) np_agregarFondo -> .

    ID              reduce using rule 122 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 43
    np_agregarFondo                shift and go to state 41

state 35

    (20) declaracionFuncion -> FUNCION VOID ID np_declfunc . OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    OPAREN          shift and go to state 44


state 36

    (21) declaracionFuncion -> FUNCION INT ID np_declfunc . OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    OPAREN          shift and go to state 45


state 37

    (22) declaracionFuncion -> FUNCION FLOAT ID np_declfunc . OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    OPAREN          shift and go to state 46


state 38

    (23) declaracionFuncion -> FUNCION CHAR ID np_declfunc . OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    OPAREN          shift and go to state 47


state 39

    (7) principal -> PRINCIPAL np_updateMain OPAREN CPAREN . OBRACKET estatutos CBRACKET np_end np_printCuadruplos np_printTablas

    OBRACKET        shift and go to state 48


state 40

    (11) declaracion -> VAR INT np_defineTipo COLON declaracion2 .

    VAR             reduce using rule 11 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    FUNCION         reduce using rule 11 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    PRINCIPAL       reduce using rule 11 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    REGRESA         reduce using rule 11 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    DESDE           reduce using rule 11 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    MIENTRAS        reduce using rule 11 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    LEE             reduce using rule 11 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    ESCRIBE         reduce using rule 11 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    SI              reduce using rule 11 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    ID              reduce using rule 11 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    CBRACKET        reduce using rule 11 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    OBRACKET        reduce using rule 11 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)


state 41

    (15) declaracion2 -> np_agregarFondo . posibleIDDeclaracion declaracion3
    (96) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (97) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (98) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (99) np_updateCurrentDimension0 -> .
    (100) np_updateCurrentDimension1 -> .
    (101) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 99 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 99 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 99 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 100 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 101 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 49
    np_updateCurrentDimension0     shift and go to state 50
    np_updateCurrentDimension1     shift and go to state 51
    np_updateCurrentDimension2     shift and go to state 52

state 42

    (12) declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .

    VAR             reduce using rule 12 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    FUNCION         reduce using rule 12 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    PRINCIPAL       reduce using rule 12 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    REGRESA         reduce using rule 12 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    DESDE           reduce using rule 12 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    MIENTRAS        reduce using rule 12 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    LEE             reduce using rule 12 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    ESCRIBE         reduce using rule 12 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    SI              reduce using rule 12 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    ID              reduce using rule 12 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    CBRACKET        reduce using rule 12 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    OBRACKET        reduce using rule 12 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)


state 43

    (13) declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .

    VAR             reduce using rule 13 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    FUNCION         reduce using rule 13 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    PRINCIPAL       reduce using rule 13 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    REGRESA         reduce using rule 13 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    DESDE           reduce using rule 13 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    MIENTRAS        reduce using rule 13 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    LEE             reduce using rule 13 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    ESCRIBE         reduce using rule 13 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    SI              reduce using rule 13 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    ID              reduce using rule 13 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    CBRACKET        reduce using rule 13 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    OBRACKET        reduce using rule 13 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)


state 44

    (20) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN . np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (24) np_esParametro -> .

    INT             reduce using rule 24 (np_esParametro -> .)
    CHAR            reduce using rule 24 (np_esParametro -> .)
    FLOAT           reduce using rule 24 (np_esParametro -> .)
    CPAREN          reduce using rule 24 (np_esParametro -> .)

    np_esParametro                 shift and go to state 53

state 45

    (21) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN . np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (24) np_esParametro -> .

    INT             reduce using rule 24 (np_esParametro -> .)
    CHAR            reduce using rule 24 (np_esParametro -> .)
    FLOAT           reduce using rule 24 (np_esParametro -> .)
    CPAREN          reduce using rule 24 (np_esParametro -> .)

    np_esParametro                 shift and go to state 54

state 46

    (22) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN . np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (24) np_esParametro -> .

    INT             reduce using rule 24 (np_esParametro -> .)
    CHAR            reduce using rule 24 (np_esParametro -> .)
    FLOAT           reduce using rule 24 (np_esParametro -> .)
    CPAREN          reduce using rule 24 (np_esParametro -> .)

    np_esParametro                 shift and go to state 55

state 47

    (23) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN . np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (24) np_esParametro -> .

    INT             reduce using rule 24 (np_esParametro -> .)
    CHAR            reduce using rule 24 (np_esParametro -> .)
    FLOAT           reduce using rule 24 (np_esParametro -> .)
    CPAREN          reduce using rule 24 (np_esParametro -> .)

    np_esParametro                 shift and go to state 56

state 48

    (7) principal -> PRINCIPAL np_updateMain OPAREN CPAREN OBRACKET . estatutos CBRACKET np_end np_printCuadruplos np_printTablas
    (39) estatutos -> . return estatutos
    (40) estatutos -> . empty
    (41) estatutos -> . declaracion estatutos
    (42) estatutos -> . estatutoRepeticionIncondicional estatutos
    (43) estatutos -> . estatutoRepeticionCondicional estatutos
    (44) estatutos -> . lectura estatutos
    (45) estatutos -> . asignacion estatutos
    (46) estatutos -> . escritura estatutos
    (47) estatutos -> . decision estatutos
    (48) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (110) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (111) return -> . REGRESA SEMICOLON np_returnVOID
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (102) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (106) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (73) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (76) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (49) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (56) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 68
    CBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 69
    MIENTRAS        shift and go to state 71
    LEE             shift and go to state 72
    ESCRIBE         shift and go to state 74
    SI              shift and go to state 75
    ID              shift and go to state 70

    estatutos                      shift and go to state 57
    return                         shift and go to state 58
    empty                          shift and go to state 59
    declaracion                    shift and go to state 60
    estatutoRepeticionIncondicional shift and go to state 61
    estatutoRepeticionCondicional  shift and go to state 62
    lectura                        shift and go to state 63
    asignacion                     shift and go to state 64
    escritura                      shift and go to state 65
    decision                       shift and go to state 66
    llamadaFuncion                 shift and go to state 67
    posibleID                      shift and go to state 73

state 49

    (15) declaracion2 -> np_agregarFondo posibleIDDeclaracion . declaracion3
    (16) declaracion3 -> . np_quitarFondo SEMICOLON
    (17) declaracion3 -> . np_quitarFondo COMA declaracion2
    (18) declaracion3 -> . ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON
    (19) declaracion3 -> . ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2
    (123) np_quitarFondo -> .

    ASSIGN          shift and go to state 78
    SEMICOLON       reduce using rule 123 (np_quitarFondo -> .)
    COMA            reduce using rule 123 (np_quitarFondo -> .)

    declaracion3                   shift and go to state 76
    np_quitarFondo                 shift and go to state 77

state 50

    (96) posibleIDDeclaracion -> np_updateCurrentDimension0 . ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones

    ID              shift and go to state 79


state 51

    (97) posibleIDDeclaracion -> np_updateCurrentDimension1 . ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH

    ID              shift and go to state 80


state 52

    (98) posibleIDDeclaracion -> np_updateCurrentDimension2 . ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH

    ID              shift and go to state 81


state 53

    (20) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro . declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (28) declaracionFuncionParametros -> . empty
    (29) declaracionFuncionParametros -> . INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (30) declaracionFuncionParametros -> . CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (31) declaracionFuncionParametros -> . FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (125) empty -> .

    INT             shift and go to state 84
    CHAR            shift and go to state 85
    FLOAT           shift and go to state 86
    CPAREN          reduce using rule 125 (empty -> .)

    declaracionFuncionParametros   shift and go to state 82
    empty                          shift and go to state 83

state 54

    (21) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro . declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (28) declaracionFuncionParametros -> . empty
    (29) declaracionFuncionParametros -> . INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (30) declaracionFuncionParametros -> . CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (31) declaracionFuncionParametros -> . FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (125) empty -> .

    INT             shift and go to state 84
    CHAR            shift and go to state 85
    FLOAT           shift and go to state 86
    CPAREN          reduce using rule 125 (empty -> .)

    declaracionFuncionParametros   shift and go to state 87
    empty                          shift and go to state 83

state 55

    (22) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro . declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (28) declaracionFuncionParametros -> . empty
    (29) declaracionFuncionParametros -> . INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (30) declaracionFuncionParametros -> . CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (31) declaracionFuncionParametros -> . FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (125) empty -> .

    INT             shift and go to state 84
    CHAR            shift and go to state 85
    FLOAT           shift and go to state 86
    CPAREN          reduce using rule 125 (empty -> .)

    declaracionFuncionParametros   shift and go to state 88
    empty                          shift and go to state 83

state 56

    (23) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro . declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (28) declaracionFuncionParametros -> . empty
    (29) declaracionFuncionParametros -> . INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (30) declaracionFuncionParametros -> . CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (31) declaracionFuncionParametros -> . FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (125) empty -> .

    INT             shift and go to state 84
    CHAR            shift and go to state 85
    FLOAT           shift and go to state 86
    CPAREN          reduce using rule 125 (empty -> .)

    declaracionFuncionParametros   shift and go to state 89
    empty                          shift and go to state 83

state 57

    (7) principal -> PRINCIPAL np_updateMain OPAREN CPAREN OBRACKET estatutos . CBRACKET np_end np_printCuadruplos np_printTablas

    CBRACKET        shift and go to state 90


state 58

    (39) estatutos -> return . estatutos
    (39) estatutos -> . return estatutos
    (40) estatutos -> . empty
    (41) estatutos -> . declaracion estatutos
    (42) estatutos -> . estatutoRepeticionIncondicional estatutos
    (43) estatutos -> . estatutoRepeticionCondicional estatutos
    (44) estatutos -> . lectura estatutos
    (45) estatutos -> . asignacion estatutos
    (46) estatutos -> . escritura estatutos
    (47) estatutos -> . decision estatutos
    (48) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (110) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (111) return -> . REGRESA SEMICOLON np_returnVOID
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (102) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (106) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (73) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (76) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (49) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (56) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 68
    CBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 69
    MIENTRAS        shift and go to state 71
    LEE             shift and go to state 72
    ESCRIBE         shift and go to state 74
    SI              shift and go to state 75
    ID              shift and go to state 70

    return                         shift and go to state 58
    estatutos                      shift and go to state 91
    empty                          shift and go to state 59
    declaracion                    shift and go to state 60
    estatutoRepeticionIncondicional shift and go to state 61
    estatutoRepeticionCondicional  shift and go to state 62
    lectura                        shift and go to state 63
    asignacion                     shift and go to state 64
    escritura                      shift and go to state 65
    decision                       shift and go to state 66
    llamadaFuncion                 shift and go to state 67
    posibleID                      shift and go to state 73

state 59

    (40) estatutos -> empty .

    CBRACKET        reduce using rule 40 (estatutos -> empty .)


state 60

    (41) estatutos -> declaracion . estatutos
    (39) estatutos -> . return estatutos
    (40) estatutos -> . empty
    (41) estatutos -> . declaracion estatutos
    (42) estatutos -> . estatutoRepeticionIncondicional estatutos
    (43) estatutos -> . estatutoRepeticionCondicional estatutos
    (44) estatutos -> . lectura estatutos
    (45) estatutos -> . asignacion estatutos
    (46) estatutos -> . escritura estatutos
    (47) estatutos -> . decision estatutos
    (48) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (110) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (111) return -> . REGRESA SEMICOLON np_returnVOID
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (102) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (106) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (73) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (76) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (49) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (56) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 68
    CBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 69
    MIENTRAS        shift and go to state 71
    LEE             shift and go to state 72
    ESCRIBE         shift and go to state 74
    SI              shift and go to state 75
    ID              shift and go to state 70

    declaracion                    shift and go to state 60
    estatutos                      shift and go to state 92
    return                         shift and go to state 58
    empty                          shift and go to state 59
    estatutoRepeticionIncondicional shift and go to state 61
    estatutoRepeticionCondicional  shift and go to state 62
    lectura                        shift and go to state 63
    asignacion                     shift and go to state 64
    escritura                      shift and go to state 65
    decision                       shift and go to state 66
    llamadaFuncion                 shift and go to state 67
    posibleID                      shift and go to state 73

state 61

    (42) estatutos -> estatutoRepeticionIncondicional . estatutos
    (39) estatutos -> . return estatutos
    (40) estatutos -> . empty
    (41) estatutos -> . declaracion estatutos
    (42) estatutos -> . estatutoRepeticionIncondicional estatutos
    (43) estatutos -> . estatutoRepeticionCondicional estatutos
    (44) estatutos -> . lectura estatutos
    (45) estatutos -> . asignacion estatutos
    (46) estatutos -> . escritura estatutos
    (47) estatutos -> . decision estatutos
    (48) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (110) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (111) return -> . REGRESA SEMICOLON np_returnVOID
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (102) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (106) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (73) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (76) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (49) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (56) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 68
    CBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 69
    MIENTRAS        shift and go to state 71
    LEE             shift and go to state 72
    ESCRIBE         shift and go to state 74
    SI              shift and go to state 75
    ID              shift and go to state 70

    estatutoRepeticionIncondicional shift and go to state 61
    estatutos                      shift and go to state 93
    return                         shift and go to state 58
    empty                          shift and go to state 59
    declaracion                    shift and go to state 60
    estatutoRepeticionCondicional  shift and go to state 62
    lectura                        shift and go to state 63
    asignacion                     shift and go to state 64
    escritura                      shift and go to state 65
    decision                       shift and go to state 66
    llamadaFuncion                 shift and go to state 67
    posibleID                      shift and go to state 73

state 62

    (43) estatutos -> estatutoRepeticionCondicional . estatutos
    (39) estatutos -> . return estatutos
    (40) estatutos -> . empty
    (41) estatutos -> . declaracion estatutos
    (42) estatutos -> . estatutoRepeticionIncondicional estatutos
    (43) estatutos -> . estatutoRepeticionCondicional estatutos
    (44) estatutos -> . lectura estatutos
    (45) estatutos -> . asignacion estatutos
    (46) estatutos -> . escritura estatutos
    (47) estatutos -> . decision estatutos
    (48) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (110) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (111) return -> . REGRESA SEMICOLON np_returnVOID
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (102) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (106) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (73) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (76) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (49) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (56) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 68
    CBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 69
    MIENTRAS        shift and go to state 71
    LEE             shift and go to state 72
    ESCRIBE         shift and go to state 74
    SI              shift and go to state 75
    ID              shift and go to state 70

    estatutoRepeticionCondicional  shift and go to state 62
    estatutos                      shift and go to state 94
    return                         shift and go to state 58
    empty                          shift and go to state 59
    declaracion                    shift and go to state 60
    estatutoRepeticionIncondicional shift and go to state 61
    lectura                        shift and go to state 63
    asignacion                     shift and go to state 64
    escritura                      shift and go to state 65
    decision                       shift and go to state 66
    llamadaFuncion                 shift and go to state 67
    posibleID                      shift and go to state 73

state 63

    (44) estatutos -> lectura . estatutos
    (39) estatutos -> . return estatutos
    (40) estatutos -> . empty
    (41) estatutos -> . declaracion estatutos
    (42) estatutos -> . estatutoRepeticionIncondicional estatutos
    (43) estatutos -> . estatutoRepeticionCondicional estatutos
    (44) estatutos -> . lectura estatutos
    (45) estatutos -> . asignacion estatutos
    (46) estatutos -> . escritura estatutos
    (47) estatutos -> . decision estatutos
    (48) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (110) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (111) return -> . REGRESA SEMICOLON np_returnVOID
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (102) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (106) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (73) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (76) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (49) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (56) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 68
    CBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 69
    MIENTRAS        shift and go to state 71
    LEE             shift and go to state 72
    ESCRIBE         shift and go to state 74
    SI              shift and go to state 75
    ID              shift and go to state 70

    lectura                        shift and go to state 63
    estatutos                      shift and go to state 95
    return                         shift and go to state 58
    empty                          shift and go to state 59
    declaracion                    shift and go to state 60
    estatutoRepeticionIncondicional shift and go to state 61
    estatutoRepeticionCondicional  shift and go to state 62
    asignacion                     shift and go to state 64
    escritura                      shift and go to state 65
    decision                       shift and go to state 66
    llamadaFuncion                 shift and go to state 67
    posibleID                      shift and go to state 73

state 64

    (45) estatutos -> asignacion . estatutos
    (39) estatutos -> . return estatutos
    (40) estatutos -> . empty
    (41) estatutos -> . declaracion estatutos
    (42) estatutos -> . estatutoRepeticionIncondicional estatutos
    (43) estatutos -> . estatutoRepeticionCondicional estatutos
    (44) estatutos -> . lectura estatutos
    (45) estatutos -> . asignacion estatutos
    (46) estatutos -> . escritura estatutos
    (47) estatutos -> . decision estatutos
    (48) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (110) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (111) return -> . REGRESA SEMICOLON np_returnVOID
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (102) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (106) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (73) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (76) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (49) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (56) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 68
    CBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 69
    MIENTRAS        shift and go to state 71
    LEE             shift and go to state 72
    ESCRIBE         shift and go to state 74
    SI              shift and go to state 75
    ID              shift and go to state 70

    asignacion                     shift and go to state 64
    estatutos                      shift and go to state 96
    return                         shift and go to state 58
    empty                          shift and go to state 59
    declaracion                    shift and go to state 60
    estatutoRepeticionIncondicional shift and go to state 61
    estatutoRepeticionCondicional  shift and go to state 62
    lectura                        shift and go to state 63
    escritura                      shift and go to state 65
    decision                       shift and go to state 66
    llamadaFuncion                 shift and go to state 67
    posibleID                      shift and go to state 73

state 65

    (46) estatutos -> escritura . estatutos
    (39) estatutos -> . return estatutos
    (40) estatutos -> . empty
    (41) estatutos -> . declaracion estatutos
    (42) estatutos -> . estatutoRepeticionIncondicional estatutos
    (43) estatutos -> . estatutoRepeticionCondicional estatutos
    (44) estatutos -> . lectura estatutos
    (45) estatutos -> . asignacion estatutos
    (46) estatutos -> . escritura estatutos
    (47) estatutos -> . decision estatutos
    (48) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (110) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (111) return -> . REGRESA SEMICOLON np_returnVOID
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (102) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (106) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (73) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (76) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (49) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (56) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 68
    CBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 69
    MIENTRAS        shift and go to state 71
    LEE             shift and go to state 72
    ESCRIBE         shift and go to state 74
    SI              shift and go to state 75
    ID              shift and go to state 70

    escritura                      shift and go to state 65
    estatutos                      shift and go to state 97
    return                         shift and go to state 58
    empty                          shift and go to state 59
    declaracion                    shift and go to state 60
    estatutoRepeticionIncondicional shift and go to state 61
    estatutoRepeticionCondicional  shift and go to state 62
    lectura                        shift and go to state 63
    asignacion                     shift and go to state 64
    decision                       shift and go to state 66
    llamadaFuncion                 shift and go to state 67
    posibleID                      shift and go to state 73

state 66

    (47) estatutos -> decision . estatutos
    (39) estatutos -> . return estatutos
    (40) estatutos -> . empty
    (41) estatutos -> . declaracion estatutos
    (42) estatutos -> . estatutoRepeticionIncondicional estatutos
    (43) estatutos -> . estatutoRepeticionCondicional estatutos
    (44) estatutos -> . lectura estatutos
    (45) estatutos -> . asignacion estatutos
    (46) estatutos -> . escritura estatutos
    (47) estatutos -> . decision estatutos
    (48) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (110) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (111) return -> . REGRESA SEMICOLON np_returnVOID
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (102) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (106) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (73) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (76) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (49) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (56) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 68
    CBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 69
    MIENTRAS        shift and go to state 71
    LEE             shift and go to state 72
    ESCRIBE         shift and go to state 74
    SI              shift and go to state 75
    ID              shift and go to state 70

    decision                       shift and go to state 66
    estatutos                      shift and go to state 98
    return                         shift and go to state 58
    empty                          shift and go to state 59
    declaracion                    shift and go to state 60
    estatutoRepeticionIncondicional shift and go to state 61
    estatutoRepeticionCondicional  shift and go to state 62
    lectura                        shift and go to state 63
    asignacion                     shift and go to state 64
    escritura                      shift and go to state 65
    llamadaFuncion                 shift and go to state 67
    posibleID                      shift and go to state 73

state 67

    (48) estatutos -> llamadaFuncion . SEMICOLON estatutos

    SEMICOLON       shift and go to state 99


state 68

    (110) return -> REGRESA . np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (111) return -> REGRESA . SEMICOLON np_returnVOID
    (122) np_agregarFondo -> .

    SEMICOLON       shift and go to state 101
    ENTERO          reduce using rule 122 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 122 (np_agregarFondo -> .)
    OPAREN          reduce using rule 122 (np_agregarFondo -> .)
    QUOT            reduce using rule 122 (np_agregarFondo -> .)
    ID              reduce using rule 122 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 100

state 69

    (102) estatutoRepeticionIncondicional -> DESDE . ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor

    ID              shift and go to state 102


state 70

    (62) llamadaFuncion -> ID . np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (93) posibleID -> ID . np_contieneID np_enviarACuadruplos
    (94) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (63) np_existeFuncion -> .
    (114) np_contieneID -> .

    OPAREN          reduce using rule 63 (np_existeFuncion -> .)
    OCORCH          reduce using rule 114 (np_contieneID -> .)
    ASSIGN          reduce using rule 114 (np_contieneID -> .)

    np_existeFuncion               shift and go to state 103
    np_contieneID                  shift and go to state 104

state 71

    (106) estatutoRepeticionCondicional -> MIENTRAS . OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina

    OPAREN          shift and go to state 105


state 72

    (73) lectura -> LEE . OPAREN posibleID lectura2 CPAREN SEMICOLON

    OPAREN          shift and go to state 106


state 73

    (76) asignacion -> posibleID . np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (122) np_agregarFondo -> .

    ASSIGN          reduce using rule 122 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 107

state 74

    (49) escritura -> ESCRIBE . OPAREN escritura2 CPAREN SEMICOLON

    OPAREN          shift and go to state 108


state 75

    (56) decision -> SI . OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> SI . OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf

    OPAREN          shift and go to state 109


state 76

    (15) declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .

    VAR             reduce using rule 15 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    FUNCION         reduce using rule 15 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    PRINCIPAL       reduce using rule 15 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    REGRESA         reduce using rule 15 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    DESDE           reduce using rule 15 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    MIENTRAS        reduce using rule 15 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    LEE             reduce using rule 15 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    ESCRIBE         reduce using rule 15 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    SI              reduce using rule 15 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    ID              reduce using rule 15 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    CBRACKET        reduce using rule 15 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    OBRACKET        reduce using rule 15 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)


state 77

    (16) declaracion3 -> np_quitarFondo . SEMICOLON
    (17) declaracion3 -> np_quitarFondo . COMA declaracion2

    SEMICOLON       shift and go to state 110
    COMA            shift and go to state 111


state 78

    (18) declaracion3 -> ASSIGN . np_insertarOperador expresion np_quitarFondo SEMICOLON
    (19) declaracion3 -> ASSIGN . np_insertarOperador expresion np_quitarFondo COMA declaracion2
    (84) np_insertarOperador -> .

    ENTERO          reduce using rule 84 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 84 (np_insertarOperador -> .)
    OPAREN          reduce using rule 84 (np_insertarOperador -> .)
    QUOT            reduce using rule 84 (np_insertarOperador -> .)
    ID              reduce using rule 84 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 112

state 79

    (96) posibleIDDeclaracion -> np_updateCurrentDimension0 ID . np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (118) np_addVariable -> .

    ASSIGN          reduce using rule 118 (np_addVariable -> .)
    SEMICOLON       reduce using rule 118 (np_addVariable -> .)
    COMA            reduce using rule 118 (np_addVariable -> .)
    CPAREN          reduce using rule 118 (np_addVariable -> .)

    np_addVariable                 shift and go to state 113

state 80

    (97) posibleIDDeclaracion -> np_updateCurrentDimension1 ID . np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (118) np_addVariable -> .

    OCORCH          reduce using rule 118 (np_addVariable -> .)

    np_addVariable                 shift and go to state 114

state 81

    (98) posibleIDDeclaracion -> np_updateCurrentDimension2 ID . np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (118) np_addVariable -> .

    OCORCH          reduce using rule 118 (np_addVariable -> .)

    np_addVariable                 shift and go to state 115

state 82

    (20) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros . np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (25) np_yaNoEsParametro -> .

    CPAREN          reduce using rule 25 (np_yaNoEsParametro -> .)

    np_yaNoEsParametro             shift and go to state 116

state 83

    (28) declaracionFuncionParametros -> empty .

    CPAREN          reduce using rule 28 (declaracionFuncionParametros -> empty .)


state 84

    (29) declaracionFuncionParametros -> INT . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (14) np_defineTipo -> .

    ID              reduce using rule 14 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 117

state 85

    (30) declaracionFuncionParametros -> CHAR . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (14) np_defineTipo -> .

    ID              reduce using rule 14 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 118

state 86

    (31) declaracionFuncionParametros -> FLOAT . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (14) np_defineTipo -> .

    ID              reduce using rule 14 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 119

state 87

    (21) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros . np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (25) np_yaNoEsParametro -> .

    CPAREN          reduce using rule 25 (np_yaNoEsParametro -> .)

    np_yaNoEsParametro             shift and go to state 120

state 88

    (22) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros . CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    CPAREN          shift and go to state 121


state 89

    (23) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros . CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    CPAREN          shift and go to state 122


state 90

    (7) principal -> PRINCIPAL np_updateMain OPAREN CPAREN OBRACKET estatutos CBRACKET . np_end np_printCuadruplos np_printTablas
    (9) np_end -> .

    $end            reduce using rule 9 (np_end -> .)

    np_end                         shift and go to state 123

state 91

    (39) estatutos -> return estatutos .

    CBRACKET        reduce using rule 39 (estatutos -> return estatutos .)


state 92

    (41) estatutos -> declaracion estatutos .

    CBRACKET        reduce using rule 41 (estatutos -> declaracion estatutos .)


state 93

    (42) estatutos -> estatutoRepeticionIncondicional estatutos .

    CBRACKET        reduce using rule 42 (estatutos -> estatutoRepeticionIncondicional estatutos .)


state 94

    (43) estatutos -> estatutoRepeticionCondicional estatutos .

    CBRACKET        reduce using rule 43 (estatutos -> estatutoRepeticionCondicional estatutos .)


state 95

    (44) estatutos -> lectura estatutos .

    CBRACKET        reduce using rule 44 (estatutos -> lectura estatutos .)


state 96

    (45) estatutos -> asignacion estatutos .

    CBRACKET        reduce using rule 45 (estatutos -> asignacion estatutos .)


state 97

    (46) estatutos -> escritura estatutos .

    CBRACKET        reduce using rule 46 (estatutos -> escritura estatutos .)


state 98

    (47) estatutos -> decision estatutos .

    CBRACKET        reduce using rule 47 (estatutos -> decision estatutos .)


state 99

    (48) estatutos -> llamadaFuncion SEMICOLON . estatutos
    (39) estatutos -> . return estatutos
    (40) estatutos -> . empty
    (41) estatutos -> . declaracion estatutos
    (42) estatutos -> . estatutoRepeticionIncondicional estatutos
    (43) estatutos -> . estatutoRepeticionCondicional estatutos
    (44) estatutos -> . lectura estatutos
    (45) estatutos -> . asignacion estatutos
    (46) estatutos -> . escritura estatutos
    (47) estatutos -> . decision estatutos
    (48) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (110) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (111) return -> . REGRESA SEMICOLON np_returnVOID
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (102) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (106) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (73) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (76) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (49) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (56) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 68
    CBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 69
    MIENTRAS        shift and go to state 71
    LEE             shift and go to state 72
    ESCRIBE         shift and go to state 74
    SI              shift and go to state 75
    ID              shift and go to state 70

    llamadaFuncion                 shift and go to state 67
    estatutos                      shift and go to state 124
    return                         shift and go to state 58
    empty                          shift and go to state 59
    declaracion                    shift and go to state 60
    estatutoRepeticionIncondicional shift and go to state 61
    estatutoRepeticionCondicional  shift and go to state 62
    lectura                        shift and go to state 63
    asignacion                     shift and go to state 64
    escritura                      shift and go to state 65
    decision                       shift and go to state 66
    posibleID                      shift and go to state 73

state 100

    (110) return -> REGRESA np_agregarFondo . expresion np_quitarFondo SEMICOLON np_return
    (77) expresion -> . expresion LOGIC np_insertarOperador expresion
    (78) expresion -> . expresion RELOP np_insertarOperador expresion
    (79) expresion -> . termino
    (80) termino -> . termino PLUS np_insertarOperador termino
    (81) termino -> . termino MINUS np_insertarOperador termino
    (82) termino -> . termino MULTIPLY np_insertarOperador termino
    (83) termino -> . termino DIVIDE np_insertarOperador termino
    (85) termino -> . termino1 OPMATRIZ np_insertarOperador
    (86) termino -> . termino1
    (87) termino1 -> . posibleID
    (88) termino1 -> . ENTERO np_addConstanteINT np_enviarACuadruplosC
    (89) termino1 -> . FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC
    (90) termino1 -> . llamadaFuncion
    (91) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (92) termino1 -> . QUOT CARACTER QUOT
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB

    ENTERO          shift and go to state 129
    FLOTANTE        shift and go to state 130
    OPAREN          shift and go to state 132
    QUOT            shift and go to state 133
    ID              shift and go to state 134

    expresion                      shift and go to state 125
    termino                        shift and go to state 126
    termino1                       shift and go to state 127
    posibleID                      shift and go to state 128
    llamadaFuncion                 shift and go to state 131

state 101

    (111) return -> REGRESA SEMICOLON . np_returnVOID
    (113) np_returnVOID -> .

    REGRESA         reduce using rule 113 (np_returnVOID -> .)
    VAR             reduce using rule 113 (np_returnVOID -> .)
    DESDE           reduce using rule 113 (np_returnVOID -> .)
    MIENTRAS        reduce using rule 113 (np_returnVOID -> .)
    LEE             reduce using rule 113 (np_returnVOID -> .)
    ESCRIBE         reduce using rule 113 (np_returnVOID -> .)
    SI              reduce using rule 113 (np_returnVOID -> .)
    ID              reduce using rule 113 (np_returnVOID -> .)
    CBRACKET        reduce using rule 113 (np_returnVOID -> .)

    np_returnVOID                  shift and go to state 135

state 102

    (102) estatutoRepeticionIncondicional -> DESDE ID . np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (114) np_contieneID -> .

    HASTA           reduce using rule 114 (np_contieneID -> .)

    np_contieneID                  shift and go to state 136

state 103

    (62) llamadaFuncion -> ID np_existeFuncion . np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (64) np_llamadaFuncion -> .

    OPAREN          reduce using rule 64 (np_llamadaFuncion -> .)

    np_llamadaFuncion              shift and go to state 137

state 104

    (93) posibleID -> ID np_contieneID . np_enviarACuadruplos
    (94) posibleID -> ID np_contieneID . np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> ID np_contieneID . np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (119) np_enviarACuadruplos -> .

    OCORCH          reduce using rule 119 (np_enviarACuadruplos -> .)
    ASSIGN          reduce using rule 119 (np_enviarACuadruplos -> .)
    OPMATRIZ        reduce using rule 119 (np_enviarACuadruplos -> .)
    PLUS            reduce using rule 119 (np_enviarACuadruplos -> .)
    MINUS           reduce using rule 119 (np_enviarACuadruplos -> .)
    MULTIPLY        reduce using rule 119 (np_enviarACuadruplos -> .)
    DIVIDE          reduce using rule 119 (np_enviarACuadruplos -> .)
    LOGIC           reduce using rule 119 (np_enviarACuadruplos -> .)
    RELOP           reduce using rule 119 (np_enviarACuadruplos -> .)
    SEMICOLON       reduce using rule 119 (np_enviarACuadruplos -> .)
    COMA            reduce using rule 119 (np_enviarACuadruplos -> .)
    CPAREN          reduce using rule 119 (np_enviarACuadruplos -> .)
    CCORCH          reduce using rule 119 (np_enviarACuadruplos -> .)
    HAZ             reduce using rule 119 (np_enviarACuadruplos -> .)

    np_enviarACuadruplos           shift and go to state 138

state 105

    (106) estatutoRepeticionCondicional -> MIENTRAS OPAREN . np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (122) np_agregarFondo -> .

    ENTERO          reduce using rule 122 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 122 (np_agregarFondo -> .)
    OPAREN          reduce using rule 122 (np_agregarFondo -> .)
    QUOT            reduce using rule 122 (np_agregarFondo -> .)
    ID              reduce using rule 122 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 139

state 106

    (73) lectura -> LEE OPAREN . posibleID lectura2 CPAREN SEMICOLON
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    ID              shift and go to state 141

    posibleID                      shift and go to state 140

state 107

    (76) asignacion -> posibleID np_agregarFondo . ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON

    ASSIGN          shift and go to state 142


state 108

    (49) escritura -> ESCRIBE OPAREN . escritura2 CPAREN SEMICOLON
    (50) escritura2 -> . empty
    (51) escritura2 -> . posibleID escritura3
    (52) escritura2 -> . STRING escritura3
    (125) empty -> .
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    STRING          shift and go to state 146
    CPAREN          reduce using rule 125 (empty -> .)
    ID              shift and go to state 141

    escritura2                     shift and go to state 143
    empty                          shift and go to state 144
    posibleID                      shift and go to state 145

state 109

    (56) decision -> SI OPAREN . np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> SI OPAREN . np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (122) np_agregarFondo -> .

    ENTERO          reduce using rule 122 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 122 (np_agregarFondo -> .)
    OPAREN          reduce using rule 122 (np_agregarFondo -> .)
    QUOT            reduce using rule 122 (np_agregarFondo -> .)
    ID              reduce using rule 122 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 147

state 110

    (16) declaracion3 -> np_quitarFondo SEMICOLON .

    VAR             reduce using rule 16 (declaracion3 -> np_quitarFondo SEMICOLON .)
    FUNCION         reduce using rule 16 (declaracion3 -> np_quitarFondo SEMICOLON .)
    PRINCIPAL       reduce using rule 16 (declaracion3 -> np_quitarFondo SEMICOLON .)
    REGRESA         reduce using rule 16 (declaracion3 -> np_quitarFondo SEMICOLON .)
    DESDE           reduce using rule 16 (declaracion3 -> np_quitarFondo SEMICOLON .)
    MIENTRAS        reduce using rule 16 (declaracion3 -> np_quitarFondo SEMICOLON .)
    LEE             reduce using rule 16 (declaracion3 -> np_quitarFondo SEMICOLON .)
    ESCRIBE         reduce using rule 16 (declaracion3 -> np_quitarFondo SEMICOLON .)
    SI              reduce using rule 16 (declaracion3 -> np_quitarFondo SEMICOLON .)
    ID              reduce using rule 16 (declaracion3 -> np_quitarFondo SEMICOLON .)
    CBRACKET        reduce using rule 16 (declaracion3 -> np_quitarFondo SEMICOLON .)
    OBRACKET        reduce using rule 16 (declaracion3 -> np_quitarFondo SEMICOLON .)


state 111

    (17) declaracion3 -> np_quitarFondo COMA . declaracion2
    (15) declaracion2 -> . np_agregarFondo posibleIDDeclaracion declaracion3
    (122) np_agregarFondo -> .

    ID              reduce using rule 122 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 148
    np_agregarFondo                shift and go to state 41

state 112

    (18) declaracion3 -> ASSIGN np_insertarOperador . expresion np_quitarFondo SEMICOLON
    (19) declaracion3 -> ASSIGN np_insertarOperador . expresion np_quitarFondo COMA declaracion2
    (77) expresion -> . expresion LOGIC np_insertarOperador expresion
    (78) expresion -> . expresion RELOP np_insertarOperador expresion
    (79) expresion -> . termino
    (80) termino -> . termino PLUS np_insertarOperador termino
    (81) termino -> . termino MINUS np_insertarOperador termino
    (82) termino -> . termino MULTIPLY np_insertarOperador termino
    (83) termino -> . termino DIVIDE np_insertarOperador termino
    (85) termino -> . termino1 OPMATRIZ np_insertarOperador
    (86) termino -> . termino1
    (87) termino1 -> . posibleID
    (88) termino1 -> . ENTERO np_addConstanteINT np_enviarACuadruplosC
    (89) termino1 -> . FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC
    (90) termino1 -> . llamadaFuncion
    (91) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (92) termino1 -> . QUOT CARACTER QUOT
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB

    ENTERO          shift and go to state 129
    FLOTANTE        shift and go to state 130
    OPAREN          shift and go to state 132
    QUOT            shift and go to state 133
    ID              shift and go to state 134

    expresion                      shift and go to state 149
    termino                        shift and go to state 126
    termino1                       shift and go to state 127
    posibleID                      shift and go to state 128
    llamadaFuncion                 shift and go to state 131

state 113

    (96) posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable . np_enviarACuadruplos np_actualizarDimensiones
    (119) np_enviarACuadruplos -> .

    ASSIGN          reduce using rule 119 (np_enviarACuadruplos -> .)
    SEMICOLON       reduce using rule 119 (np_enviarACuadruplos -> .)
    COMA            reduce using rule 119 (np_enviarACuadruplos -> .)
    CPAREN          reduce using rule 119 (np_enviarACuadruplos -> .)

    np_enviarACuadruplos           shift and go to state 150

state 114

    (97) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable . np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (119) np_enviarACuadruplos -> .

    OCORCH          reduce using rule 119 (np_enviarACuadruplos -> .)

    np_enviarACuadruplos           shift and go to state 151

state 115

    (98) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable . np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (119) np_enviarACuadruplos -> .

    OCORCH          reduce using rule 119 (np_enviarACuadruplos -> .)

    np_enviarACuadruplos           shift and go to state 152

state 116

    (20) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro . CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    CPAREN          shift and go to state 153


state 117

    (29) declaracionFuncionParametros -> INT np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (122) np_agregarFondo -> .

    ID              reduce using rule 122 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 154

state 118

    (30) declaracionFuncionParametros -> CHAR np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (122) np_agregarFondo -> .

    ID              reduce using rule 122 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 155

state 119

    (31) declaracionFuncionParametros -> FLOAT np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (122) np_agregarFondo -> .

    ID              reduce using rule 122 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 156

state 120

    (21) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro . CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    CPAREN          shift and go to state 157


state 121

    (22) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN . np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (25) np_yaNoEsParametro -> .

    VAR             reduce using rule 25 (np_yaNoEsParametro -> .)
    OBRACKET        reduce using rule 25 (np_yaNoEsParametro -> .)

    np_yaNoEsParametro             shift and go to state 158

state 122

    (23) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN . np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (25) np_yaNoEsParametro -> .

    VAR             reduce using rule 25 (np_yaNoEsParametro -> .)
    OBRACKET        reduce using rule 25 (np_yaNoEsParametro -> .)

    np_yaNoEsParametro             shift and go to state 159

state 123

    (7) principal -> PRINCIPAL np_updateMain OPAREN CPAREN OBRACKET estatutos CBRACKET np_end . np_printCuadruplos np_printTablas
    (124) np_printCuadruplos -> .

    $end            reduce using rule 124 (np_printCuadruplos -> .)

    np_printCuadruplos             shift and go to state 160

state 124

    (48) estatutos -> llamadaFuncion SEMICOLON estatutos .

    CBRACKET        reduce using rule 48 (estatutos -> llamadaFuncion SEMICOLON estatutos .)


state 125

    (110) return -> REGRESA np_agregarFondo expresion . np_quitarFondo SEMICOLON np_return
    (77) expresion -> expresion . LOGIC np_insertarOperador expresion
    (78) expresion -> expresion . RELOP np_insertarOperador expresion
    (123) np_quitarFondo -> .

    LOGIC           shift and go to state 162
    RELOP           shift and go to state 163
    SEMICOLON       reduce using rule 123 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 161

state 126

    (79) expresion -> termino .
    (80) termino -> termino . PLUS np_insertarOperador termino
    (81) termino -> termino . MINUS np_insertarOperador termino
    (82) termino -> termino . MULTIPLY np_insertarOperador termino
    (83) termino -> termino . DIVIDE np_insertarOperador termino

    LOGIC           reduce using rule 79 (expresion -> termino .)
    RELOP           reduce using rule 79 (expresion -> termino .)
    SEMICOLON       reduce using rule 79 (expresion -> termino .)
    COMA            reduce using rule 79 (expresion -> termino .)
    CPAREN          reduce using rule 79 (expresion -> termino .)
    CCORCH          reduce using rule 79 (expresion -> termino .)
    HAZ             reduce using rule 79 (expresion -> termino .)
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    MULTIPLY        shift and go to state 166
    DIVIDE          shift and go to state 167


state 127

    (85) termino -> termino1 . OPMATRIZ np_insertarOperador
    (86) termino -> termino1 .

    OPMATRIZ        shift and go to state 168
    PLUS            reduce using rule 86 (termino -> termino1 .)
    MINUS           reduce using rule 86 (termino -> termino1 .)
    MULTIPLY        reduce using rule 86 (termino -> termino1 .)
    DIVIDE          reduce using rule 86 (termino -> termino1 .)
    LOGIC           reduce using rule 86 (termino -> termino1 .)
    RELOP           reduce using rule 86 (termino -> termino1 .)
    SEMICOLON       reduce using rule 86 (termino -> termino1 .)
    COMA            reduce using rule 86 (termino -> termino1 .)
    CPAREN          reduce using rule 86 (termino -> termino1 .)
    CCORCH          reduce using rule 86 (termino -> termino1 .)
    HAZ             reduce using rule 86 (termino -> termino1 .)


state 128

    (87) termino1 -> posibleID .

    OPMATRIZ        reduce using rule 87 (termino1 -> posibleID .)
    PLUS            reduce using rule 87 (termino1 -> posibleID .)
    MINUS           reduce using rule 87 (termino1 -> posibleID .)
    MULTIPLY        reduce using rule 87 (termino1 -> posibleID .)
    DIVIDE          reduce using rule 87 (termino1 -> posibleID .)
    LOGIC           reduce using rule 87 (termino1 -> posibleID .)
    RELOP           reduce using rule 87 (termino1 -> posibleID .)
    SEMICOLON       reduce using rule 87 (termino1 -> posibleID .)
    COMA            reduce using rule 87 (termino1 -> posibleID .)
    CPAREN          reduce using rule 87 (termino1 -> posibleID .)
    CCORCH          reduce using rule 87 (termino1 -> posibleID .)
    HAZ             reduce using rule 87 (termino1 -> posibleID .)


state 129

    (88) termino1 -> ENTERO . np_addConstanteINT np_enviarACuadruplosC
    (115) np_addConstanteINT -> .

    OPMATRIZ        reduce using rule 115 (np_addConstanteINT -> .)
    PLUS            reduce using rule 115 (np_addConstanteINT -> .)
    MINUS           reduce using rule 115 (np_addConstanteINT -> .)
    MULTIPLY        reduce using rule 115 (np_addConstanteINT -> .)
    DIVIDE          reduce using rule 115 (np_addConstanteINT -> .)
    LOGIC           reduce using rule 115 (np_addConstanteINT -> .)
    RELOP           reduce using rule 115 (np_addConstanteINT -> .)
    SEMICOLON       reduce using rule 115 (np_addConstanteINT -> .)
    COMA            reduce using rule 115 (np_addConstanteINT -> .)
    CPAREN          reduce using rule 115 (np_addConstanteINT -> .)
    CCORCH          reduce using rule 115 (np_addConstanteINT -> .)
    HAZ             reduce using rule 115 (np_addConstanteINT -> .)

    np_addConstanteINT             shift and go to state 169

state 130

    (89) termino1 -> FLOTANTE . np_addConstanteFLOAT np_enviarACuadruplosC
    (116) np_addConstanteFLOAT -> .

    OPMATRIZ        reduce using rule 116 (np_addConstanteFLOAT -> .)
    PLUS            reduce using rule 116 (np_addConstanteFLOAT -> .)
    MINUS           reduce using rule 116 (np_addConstanteFLOAT -> .)
    MULTIPLY        reduce using rule 116 (np_addConstanteFLOAT -> .)
    DIVIDE          reduce using rule 116 (np_addConstanteFLOAT -> .)
    LOGIC           reduce using rule 116 (np_addConstanteFLOAT -> .)
    RELOP           reduce using rule 116 (np_addConstanteFLOAT -> .)
    SEMICOLON       reduce using rule 116 (np_addConstanteFLOAT -> .)
    COMA            reduce using rule 116 (np_addConstanteFLOAT -> .)
    CPAREN          reduce using rule 116 (np_addConstanteFLOAT -> .)
    CCORCH          reduce using rule 116 (np_addConstanteFLOAT -> .)
    HAZ             reduce using rule 116 (np_addConstanteFLOAT -> .)

    np_addConstanteFLOAT           shift and go to state 170

state 131

    (90) termino1 -> llamadaFuncion .

    OPMATRIZ        reduce using rule 90 (termino1 -> llamadaFuncion .)
    PLUS            reduce using rule 90 (termino1 -> llamadaFuncion .)
    MINUS           reduce using rule 90 (termino1 -> llamadaFuncion .)
    MULTIPLY        reduce using rule 90 (termino1 -> llamadaFuncion .)
    DIVIDE          reduce using rule 90 (termino1 -> llamadaFuncion .)
    LOGIC           reduce using rule 90 (termino1 -> llamadaFuncion .)
    RELOP           reduce using rule 90 (termino1 -> llamadaFuncion .)
    SEMICOLON       reduce using rule 90 (termino1 -> llamadaFuncion .)
    COMA            reduce using rule 90 (termino1 -> llamadaFuncion .)
    CPAREN          reduce using rule 90 (termino1 -> llamadaFuncion .)
    CCORCH          reduce using rule 90 (termino1 -> llamadaFuncion .)
    HAZ             reduce using rule 90 (termino1 -> llamadaFuncion .)


state 132

    (91) termino1 -> OPAREN . np_insertarOperador expresion CPAREN np_insertarOperador
    (84) np_insertarOperador -> .

    ENTERO          reduce using rule 84 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 84 (np_insertarOperador -> .)
    OPAREN          reduce using rule 84 (np_insertarOperador -> .)
    QUOT            reduce using rule 84 (np_insertarOperador -> .)
    ID              reduce using rule 84 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 171

state 133

    (92) termino1 -> QUOT . CARACTER QUOT

    CARACTER        shift and go to state 172


state 134

    (93) posibleID -> ID . np_contieneID np_enviarACuadruplos
    (94) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (62) llamadaFuncion -> ID . np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (114) np_contieneID -> .
    (63) np_existeFuncion -> .

    OCORCH          reduce using rule 114 (np_contieneID -> .)
    OPMATRIZ        reduce using rule 114 (np_contieneID -> .)
    PLUS            reduce using rule 114 (np_contieneID -> .)
    MINUS           reduce using rule 114 (np_contieneID -> .)
    MULTIPLY        reduce using rule 114 (np_contieneID -> .)
    DIVIDE          reduce using rule 114 (np_contieneID -> .)
    LOGIC           reduce using rule 114 (np_contieneID -> .)
    RELOP           reduce using rule 114 (np_contieneID -> .)
    SEMICOLON       reduce using rule 114 (np_contieneID -> .)
    COMA            reduce using rule 114 (np_contieneID -> .)
    CPAREN          reduce using rule 114 (np_contieneID -> .)
    CCORCH          reduce using rule 114 (np_contieneID -> .)
    HAZ             reduce using rule 114 (np_contieneID -> .)
    OPAREN          reduce using rule 63 (np_existeFuncion -> .)

    np_contieneID                  shift and go to state 104
    np_existeFuncion               shift and go to state 103

state 135

    (111) return -> REGRESA SEMICOLON np_returnVOID .

    REGRESA         reduce using rule 111 (return -> REGRESA SEMICOLON np_returnVOID .)
    VAR             reduce using rule 111 (return -> REGRESA SEMICOLON np_returnVOID .)
    DESDE           reduce using rule 111 (return -> REGRESA SEMICOLON np_returnVOID .)
    MIENTRAS        reduce using rule 111 (return -> REGRESA SEMICOLON np_returnVOID .)
    LEE             reduce using rule 111 (return -> REGRESA SEMICOLON np_returnVOID .)
    ESCRIBE         reduce using rule 111 (return -> REGRESA SEMICOLON np_returnVOID .)
    SI              reduce using rule 111 (return -> REGRESA SEMICOLON np_returnVOID .)
    ID              reduce using rule 111 (return -> REGRESA SEMICOLON np_returnVOID .)
    CBRACKET        reduce using rule 111 (return -> REGRESA SEMICOLON np_returnVOID .)


state 136

    (102) estatutoRepeticionIncondicional -> DESDE ID np_contieneID . HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor

    HASTA           shift and go to state 173


state 137

    (62) llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion . np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (65) np_agregarFondoParam -> .

    OPAREN          reduce using rule 65 (np_agregarFondoParam -> .)

    np_agregarFondoParam           shift and go to state 174

state 138

    (93) posibleID -> ID np_contieneID np_enviarACuadruplos .
    (94) posibleID -> ID np_contieneID np_enviarACuadruplos . OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> ID np_contieneID np_enviarACuadruplos . OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    ASSIGN          reduce using rule 93 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    OPMATRIZ        reduce using rule 93 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    PLUS            reduce using rule 93 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    MINUS           reduce using rule 93 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    MULTIPLY        reduce using rule 93 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    DIVIDE          reduce using rule 93 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    LOGIC           reduce using rule 93 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    RELOP           reduce using rule 93 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    SEMICOLON       reduce using rule 93 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    COMA            reduce using rule 93 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    CPAREN          reduce using rule 93 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    CCORCH          reduce using rule 93 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    HAZ             reduce using rule 93 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    OCORCH          shift and go to state 175


state 139

    (106) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo . npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (107) npWhileStExp -> .

    ENTERO          reduce using rule 107 (npWhileStExp -> .)
    FLOTANTE        reduce using rule 107 (npWhileStExp -> .)
    OPAREN          reduce using rule 107 (npWhileStExp -> .)
    QUOT            reduce using rule 107 (npWhileStExp -> .)
    ID              reduce using rule 107 (npWhileStExp -> .)

    npWhileStExp                   shift and go to state 176

state 140

    (73) lectura -> LEE OPAREN posibleID . lectura2 CPAREN SEMICOLON
    (74) lectura2 -> . empty
    (75) lectura2 -> . COMA posibleID lectura2
    (125) empty -> .

    COMA            shift and go to state 179
    CPAREN          reduce using rule 125 (empty -> .)

    lectura2                       shift and go to state 177
    empty                          shift and go to state 178

state 141

    (93) posibleID -> ID . np_contieneID np_enviarACuadruplos
    (94) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (114) np_contieneID -> .

    OCORCH          reduce using rule 114 (np_contieneID -> .)
    COMA            reduce using rule 114 (np_contieneID -> .)
    CPAREN          reduce using rule 114 (np_contieneID -> .)

    np_contieneID                  shift and go to state 104

state 142

    (76) asignacion -> posibleID np_agregarFondo ASSIGN . np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (84) np_insertarOperador -> .

    ENTERO          reduce using rule 84 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 84 (np_insertarOperador -> .)
    OPAREN          reduce using rule 84 (np_insertarOperador -> .)
    QUOT            reduce using rule 84 (np_insertarOperador -> .)
    ID              reduce using rule 84 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 180

state 143

    (49) escritura -> ESCRIBE OPAREN escritura2 . CPAREN SEMICOLON

    CPAREN          shift and go to state 181


state 144

    (50) escritura2 -> empty .

    CPAREN          reduce using rule 50 (escritura2 -> empty .)


state 145

    (51) escritura2 -> posibleID . escritura3
    (53) escritura3 -> . empty
    (54) escritura3 -> . COMA expresion escritura3
    (55) escritura3 -> . COMA STRING escritura3
    (125) empty -> .

    COMA            shift and go to state 184
    CPAREN          reduce using rule 125 (empty -> .)

    escritura3                     shift and go to state 182
    empty                          shift and go to state 183

state 146

    (52) escritura2 -> STRING . escritura3
    (53) escritura3 -> . empty
    (54) escritura3 -> . COMA expresion escritura3
    (55) escritura3 -> . COMA STRING escritura3
    (125) empty -> .

    COMA            shift and go to state 184
    CPAREN          reduce using rule 125 (empty -> .)

    escritura3                     shift and go to state 185
    empty                          shift and go to state 183

state 147

    (56) decision -> SI OPAREN np_agregarFondo . expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> SI OPAREN np_agregarFondo . expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (77) expresion -> . expresion LOGIC np_insertarOperador expresion
    (78) expresion -> . expresion RELOP np_insertarOperador expresion
    (79) expresion -> . termino
    (80) termino -> . termino PLUS np_insertarOperador termino
    (81) termino -> . termino MINUS np_insertarOperador termino
    (82) termino -> . termino MULTIPLY np_insertarOperador termino
    (83) termino -> . termino DIVIDE np_insertarOperador termino
    (85) termino -> . termino1 OPMATRIZ np_insertarOperador
    (86) termino -> . termino1
    (87) termino1 -> . posibleID
    (88) termino1 -> . ENTERO np_addConstanteINT np_enviarACuadruplosC
    (89) termino1 -> . FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC
    (90) termino1 -> . llamadaFuncion
    (91) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (92) termino1 -> . QUOT CARACTER QUOT
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB

    ENTERO          shift and go to state 129
    FLOTANTE        shift and go to state 130
    OPAREN          shift and go to state 132
    QUOT            shift and go to state 133
    ID              shift and go to state 134

    expresion                      shift and go to state 186
    termino                        shift and go to state 126
    termino1                       shift and go to state 127
    posibleID                      shift and go to state 128
    llamadaFuncion                 shift and go to state 131

state 148

    (17) declaracion3 -> np_quitarFondo COMA declaracion2 .

    VAR             reduce using rule 17 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    FUNCION         reduce using rule 17 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    PRINCIPAL       reduce using rule 17 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    REGRESA         reduce using rule 17 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    DESDE           reduce using rule 17 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    MIENTRAS        reduce using rule 17 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    LEE             reduce using rule 17 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    ESCRIBE         reduce using rule 17 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    SI              reduce using rule 17 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    ID              reduce using rule 17 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    CBRACKET        reduce using rule 17 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    OBRACKET        reduce using rule 17 (declaracion3 -> np_quitarFondo COMA declaracion2 .)


state 149

    (18) declaracion3 -> ASSIGN np_insertarOperador expresion . np_quitarFondo SEMICOLON
    (19) declaracion3 -> ASSIGN np_insertarOperador expresion . np_quitarFondo COMA declaracion2
    (77) expresion -> expresion . LOGIC np_insertarOperador expresion
    (78) expresion -> expresion . RELOP np_insertarOperador expresion
    (123) np_quitarFondo -> .

    LOGIC           shift and go to state 162
    RELOP           shift and go to state 163
    SEMICOLON       reduce using rule 123 (np_quitarFondo -> .)
    COMA            reduce using rule 123 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 187

state 150

    (96) posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos . np_actualizarDimensiones
    (121) np_actualizarDimensiones -> .

    ASSIGN          reduce using rule 121 (np_actualizarDimensiones -> .)
    SEMICOLON       reduce using rule 121 (np_actualizarDimensiones -> .)
    COMA            reduce using rule 121 (np_actualizarDimensiones -> .)
    CPAREN          reduce using rule 121 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 188

state 151

    (97) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos . np_actualizarDimensiones OCORCH expresion CCORCH
    (121) np_actualizarDimensiones -> .

    OCORCH          reduce using rule 121 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 189

state 152

    (98) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos . np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (121) np_actualizarDimensiones -> .

    OCORCH          reduce using rule 121 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 190

state 153

    (20) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN . declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (36) declaracionFuncionVariables -> . empty
    (37) declaracionFuncionVariables -> . declaracion
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2

    OBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8

    declaracionFuncionVariables    shift and go to state 191
    empty                          shift and go to state 192
    declaracion                    shift and go to state 193

state 154

    (29) declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (96) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (97) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (98) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (99) np_updateCurrentDimension0 -> .
    (100) np_updateCurrentDimension1 -> .
    (101) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 99 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 99 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 99 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 100 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 101 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 194
    np_updateCurrentDimension0     shift and go to state 50
    np_updateCurrentDimension1     shift and go to state 51
    np_updateCurrentDimension2     shift and go to state 52

state 155

    (30) declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (96) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (97) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (98) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (99) np_updateCurrentDimension0 -> .
    (100) np_updateCurrentDimension1 -> .
    (101) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 99 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 99 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 99 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 100 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 101 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 195
    np_updateCurrentDimension0     shift and go to state 50
    np_updateCurrentDimension1     shift and go to state 51
    np_updateCurrentDimension2     shift and go to state 52

state 156

    (31) declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (96) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (97) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (98) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (99) np_updateCurrentDimension0 -> .
    (100) np_updateCurrentDimension1 -> .
    (101) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 99 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 99 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 99 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 100 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 101 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 196
    np_updateCurrentDimension0     shift and go to state 50
    np_updateCurrentDimension1     shift and go to state 51
    np_updateCurrentDimension2     shift and go to state 52

state 157

    (21) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN . declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (36) declaracionFuncionVariables -> . empty
    (37) declaracionFuncionVariables -> . declaracion
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2

    OBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8

    declaracionFuncionVariables    shift and go to state 197
    empty                          shift and go to state 192
    declaracion                    shift and go to state 193

state 158

    (22) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro . declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (36) declaracionFuncionVariables -> . empty
    (37) declaracionFuncionVariables -> . declaracion
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2

    OBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8

    declaracionFuncionVariables    shift and go to state 198
    empty                          shift and go to state 192
    declaracion                    shift and go to state 193

state 159

    (23) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro . declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (36) declaracionFuncionVariables -> . empty
    (37) declaracionFuncionVariables -> . declaracion
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2

    OBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8

    declaracionFuncionVariables    shift and go to state 199
    empty                          shift and go to state 192
    declaracion                    shift and go to state 193

state 160

    (7) principal -> PRINCIPAL np_updateMain OPAREN CPAREN OBRACKET estatutos CBRACKET np_end np_printCuadruplos . np_printTablas
    (10) np_printTablas -> .

    $end            reduce using rule 10 (np_printTablas -> .)

    np_printTablas                 shift and go to state 200

state 161

    (110) return -> REGRESA np_agregarFondo expresion np_quitarFondo . SEMICOLON np_return

    SEMICOLON       shift and go to state 201


state 162

    (77) expresion -> expresion LOGIC . np_insertarOperador expresion
    (84) np_insertarOperador -> .

    ENTERO          reduce using rule 84 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 84 (np_insertarOperador -> .)
    OPAREN          reduce using rule 84 (np_insertarOperador -> .)
    QUOT            reduce using rule 84 (np_insertarOperador -> .)
    ID              reduce using rule 84 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 202

state 163

    (78) expresion -> expresion RELOP . np_insertarOperador expresion
    (84) np_insertarOperador -> .

    ENTERO          reduce using rule 84 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 84 (np_insertarOperador -> .)
    OPAREN          reduce using rule 84 (np_insertarOperador -> .)
    QUOT            reduce using rule 84 (np_insertarOperador -> .)
    ID              reduce using rule 84 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 203

state 164

    (80) termino -> termino PLUS . np_insertarOperador termino
    (84) np_insertarOperador -> .

    ENTERO          reduce using rule 84 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 84 (np_insertarOperador -> .)
    OPAREN          reduce using rule 84 (np_insertarOperador -> .)
    QUOT            reduce using rule 84 (np_insertarOperador -> .)
    ID              reduce using rule 84 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 204

state 165

    (81) termino -> termino MINUS . np_insertarOperador termino
    (84) np_insertarOperador -> .

    ENTERO          reduce using rule 84 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 84 (np_insertarOperador -> .)
    OPAREN          reduce using rule 84 (np_insertarOperador -> .)
    QUOT            reduce using rule 84 (np_insertarOperador -> .)
    ID              reduce using rule 84 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 205

state 166

    (82) termino -> termino MULTIPLY . np_insertarOperador termino
    (84) np_insertarOperador -> .

    ENTERO          reduce using rule 84 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 84 (np_insertarOperador -> .)
    OPAREN          reduce using rule 84 (np_insertarOperador -> .)
    QUOT            reduce using rule 84 (np_insertarOperador -> .)
    ID              reduce using rule 84 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 206

state 167

    (83) termino -> termino DIVIDE . np_insertarOperador termino
    (84) np_insertarOperador -> .

    ENTERO          reduce using rule 84 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 84 (np_insertarOperador -> .)
    OPAREN          reduce using rule 84 (np_insertarOperador -> .)
    QUOT            reduce using rule 84 (np_insertarOperador -> .)
    ID              reduce using rule 84 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 207

state 168

    (85) termino -> termino1 OPMATRIZ . np_insertarOperador
    (84) np_insertarOperador -> .

    PLUS            reduce using rule 84 (np_insertarOperador -> .)
    MINUS           reduce using rule 84 (np_insertarOperador -> .)
    MULTIPLY        reduce using rule 84 (np_insertarOperador -> .)
    DIVIDE          reduce using rule 84 (np_insertarOperador -> .)
    LOGIC           reduce using rule 84 (np_insertarOperador -> .)
    RELOP           reduce using rule 84 (np_insertarOperador -> .)
    SEMICOLON       reduce using rule 84 (np_insertarOperador -> .)
    COMA            reduce using rule 84 (np_insertarOperador -> .)
    CPAREN          reduce using rule 84 (np_insertarOperador -> .)
    CCORCH          reduce using rule 84 (np_insertarOperador -> .)
    HAZ             reduce using rule 84 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 208

state 169

    (88) termino1 -> ENTERO np_addConstanteINT . np_enviarACuadruplosC
    (120) np_enviarACuadruplosC -> .

    OPMATRIZ        reduce using rule 120 (np_enviarACuadruplosC -> .)
    PLUS            reduce using rule 120 (np_enviarACuadruplosC -> .)
    MINUS           reduce using rule 120 (np_enviarACuadruplosC -> .)
    MULTIPLY        reduce using rule 120 (np_enviarACuadruplosC -> .)
    DIVIDE          reduce using rule 120 (np_enviarACuadruplosC -> .)
    LOGIC           reduce using rule 120 (np_enviarACuadruplosC -> .)
    RELOP           reduce using rule 120 (np_enviarACuadruplosC -> .)
    SEMICOLON       reduce using rule 120 (np_enviarACuadruplosC -> .)
    COMA            reduce using rule 120 (np_enviarACuadruplosC -> .)
    CPAREN          reduce using rule 120 (np_enviarACuadruplosC -> .)
    CCORCH          reduce using rule 120 (np_enviarACuadruplosC -> .)
    HAZ             reduce using rule 120 (np_enviarACuadruplosC -> .)

    np_enviarACuadruplosC          shift and go to state 209

state 170

    (89) termino1 -> FLOTANTE np_addConstanteFLOAT . np_enviarACuadruplosC
    (120) np_enviarACuadruplosC -> .

    OPMATRIZ        reduce using rule 120 (np_enviarACuadruplosC -> .)
    PLUS            reduce using rule 120 (np_enviarACuadruplosC -> .)
    MINUS           reduce using rule 120 (np_enviarACuadruplosC -> .)
    MULTIPLY        reduce using rule 120 (np_enviarACuadruplosC -> .)
    DIVIDE          reduce using rule 120 (np_enviarACuadruplosC -> .)
    LOGIC           reduce using rule 120 (np_enviarACuadruplosC -> .)
    RELOP           reduce using rule 120 (np_enviarACuadruplosC -> .)
    SEMICOLON       reduce using rule 120 (np_enviarACuadruplosC -> .)
    COMA            reduce using rule 120 (np_enviarACuadruplosC -> .)
    CPAREN          reduce using rule 120 (np_enviarACuadruplosC -> .)
    CCORCH          reduce using rule 120 (np_enviarACuadruplosC -> .)
    HAZ             reduce using rule 120 (np_enviarACuadruplosC -> .)

    np_enviarACuadruplosC          shift and go to state 210

state 171

    (91) termino1 -> OPAREN np_insertarOperador . expresion CPAREN np_insertarOperador
    (77) expresion -> . expresion LOGIC np_insertarOperador expresion
    (78) expresion -> . expresion RELOP np_insertarOperador expresion
    (79) expresion -> . termino
    (80) termino -> . termino PLUS np_insertarOperador termino
    (81) termino -> . termino MINUS np_insertarOperador termino
    (82) termino -> . termino MULTIPLY np_insertarOperador termino
    (83) termino -> . termino DIVIDE np_insertarOperador termino
    (85) termino -> . termino1 OPMATRIZ np_insertarOperador
    (86) termino -> . termino1
    (87) termino1 -> . posibleID
    (88) termino1 -> . ENTERO np_addConstanteINT np_enviarACuadruplosC
    (89) termino1 -> . FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC
    (90) termino1 -> . llamadaFuncion
    (91) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (92) termino1 -> . QUOT CARACTER QUOT
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB

    ENTERO          shift and go to state 129
    FLOTANTE        shift and go to state 130
    OPAREN          shift and go to state 132
    QUOT            shift and go to state 133
    ID              shift and go to state 134

    expresion                      shift and go to state 211
    termino                        shift and go to state 126
    termino1                       shift and go to state 127
    posibleID                      shift and go to state 128
    llamadaFuncion                 shift and go to state 131

state 172

    (92) termino1 -> QUOT CARACTER . QUOT

    QUOT            shift and go to state 212


state 173

    (102) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA . np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (103) np_iniciaFor -> .

    ENTERO          reduce using rule 103 (np_iniciaFor -> .)
    FLOTANTE        reduce using rule 103 (np_iniciaFor -> .)
    OPAREN          reduce using rule 103 (np_iniciaFor -> .)
    QUOT            reduce using rule 103 (np_iniciaFor -> .)
    ID              reduce using rule 103 (np_iniciaFor -> .)

    np_iniciaFor                   shift and go to state 213

state 174

    (62) llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam . OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB

    OPAREN          shift and go to state 214


state 175

    (94) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH . np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH . np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (122) np_agregarFondo -> .

    ENTERO          reduce using rule 122 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 122 (np_agregarFondo -> .)
    OPAREN          reduce using rule 122 (np_agregarFondo -> .)
    QUOT            reduce using rule 122 (np_agregarFondo -> .)
    ID              reduce using rule 122 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 215

state 176

    (106) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp . expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (77) expresion -> . expresion LOGIC np_insertarOperador expresion
    (78) expresion -> . expresion RELOP np_insertarOperador expresion
    (79) expresion -> . termino
    (80) termino -> . termino PLUS np_insertarOperador termino
    (81) termino -> . termino MINUS np_insertarOperador termino
    (82) termino -> . termino MULTIPLY np_insertarOperador termino
    (83) termino -> . termino DIVIDE np_insertarOperador termino
    (85) termino -> . termino1 OPMATRIZ np_insertarOperador
    (86) termino -> . termino1
    (87) termino1 -> . posibleID
    (88) termino1 -> . ENTERO np_addConstanteINT np_enviarACuadruplosC
    (89) termino1 -> . FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC
    (90) termino1 -> . llamadaFuncion
    (91) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (92) termino1 -> . QUOT CARACTER QUOT
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB

    ENTERO          shift and go to state 129
    FLOTANTE        shift and go to state 130
    OPAREN          shift and go to state 132
    QUOT            shift and go to state 133
    ID              shift and go to state 134

    expresion                      shift and go to state 216
    termino                        shift and go to state 126
    termino1                       shift and go to state 127
    posibleID                      shift and go to state 128
    llamadaFuncion                 shift and go to state 131

state 177

    (73) lectura -> LEE OPAREN posibleID lectura2 . CPAREN SEMICOLON

    CPAREN          shift and go to state 217


state 178

    (74) lectura2 -> empty .

    CPAREN          reduce using rule 74 (lectura2 -> empty .)


state 179

    (75) lectura2 -> COMA . posibleID lectura2
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    ID              shift and go to state 141

    posibleID                      shift and go to state 218

state 180

    (76) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador . np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (122) np_agregarFondo -> .

    ENTERO          reduce using rule 122 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 122 (np_agregarFondo -> .)
    OPAREN          reduce using rule 122 (np_agregarFondo -> .)
    QUOT            reduce using rule 122 (np_agregarFondo -> .)
    ID              reduce using rule 122 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 219

state 181

    (49) escritura -> ESCRIBE OPAREN escritura2 CPAREN . SEMICOLON

    SEMICOLON       shift and go to state 220


state 182

    (51) escritura2 -> posibleID escritura3 .

    CPAREN          reduce using rule 51 (escritura2 -> posibleID escritura3 .)


state 183

    (53) escritura3 -> empty .

    CPAREN          reduce using rule 53 (escritura3 -> empty .)


state 184

    (54) escritura3 -> COMA . expresion escritura3
    (55) escritura3 -> COMA . STRING escritura3
    (77) expresion -> . expresion LOGIC np_insertarOperador expresion
    (78) expresion -> . expresion RELOP np_insertarOperador expresion
    (79) expresion -> . termino
    (80) termino -> . termino PLUS np_insertarOperador termino
    (81) termino -> . termino MINUS np_insertarOperador termino
    (82) termino -> . termino MULTIPLY np_insertarOperador termino
    (83) termino -> . termino DIVIDE np_insertarOperador termino
    (85) termino -> . termino1 OPMATRIZ np_insertarOperador
    (86) termino -> . termino1
    (87) termino1 -> . posibleID
    (88) termino1 -> . ENTERO np_addConstanteINT np_enviarACuadruplosC
    (89) termino1 -> . FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC
    (90) termino1 -> . llamadaFuncion
    (91) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (92) termino1 -> . QUOT CARACTER QUOT
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB

    STRING          shift and go to state 222
    ENTERO          shift and go to state 129
    FLOTANTE        shift and go to state 130
    OPAREN          shift and go to state 132
    QUOT            shift and go to state 133
    ID              shift and go to state 134

    expresion                      shift and go to state 221
    termino                        shift and go to state 126
    termino1                       shift and go to state 127
    posibleID                      shift and go to state 128
    llamadaFuncion                 shift and go to state 131

state 185

    (52) escritura2 -> STRING escritura3 .

    CPAREN          reduce using rule 52 (escritura2 -> STRING escritura3 .)


state 186

    (56) decision -> SI OPAREN np_agregarFondo expresion . np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> SI OPAREN np_agregarFondo expresion . np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (77) expresion -> expresion . LOGIC np_insertarOperador expresion
    (78) expresion -> expresion . RELOP np_insertarOperador expresion
    (123) np_quitarFondo -> .

    LOGIC           shift and go to state 162
    RELOP           shift and go to state 163
    CPAREN          reduce using rule 123 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 223

state 187

    (18) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo . SEMICOLON
    (19) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo . COMA declaracion2

    SEMICOLON       shift and go to state 224
    COMA            shift and go to state 225


state 188

    (96) posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones .

    ASSIGN          reduce using rule 96 (posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones .)
    SEMICOLON       reduce using rule 96 (posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones .)
    COMA            reduce using rule 96 (posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones .)
    CPAREN          reduce using rule 96 (posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones .)


state 189

    (97) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones . OCORCH expresion CCORCH

    OCORCH          shift and go to state 226


state 190

    (98) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones . OCORCH expresion COMA expresion CCORCH

    OCORCH          shift and go to state 227


state 191

    (20) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables . OBRACKET estatutos CBRACKET np_endFunc

    OBRACKET        shift and go to state 228


state 192

    (36) declaracionFuncionVariables -> empty .

    OBRACKET        reduce using rule 36 (declaracionFuncionVariables -> empty .)


state 193

    (37) declaracionFuncionVariables -> declaracion .

    OBRACKET        reduce using rule 37 (declaracionFuncionVariables -> declaracion .)


state 194

    (29) declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (123) np_quitarFondo -> .

    COMA            reduce using rule 123 (np_quitarFondo -> .)
    CPAREN          reduce using rule 123 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 229

state 195

    (30) declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (123) np_quitarFondo -> .

    COMA            reduce using rule 123 (np_quitarFondo -> .)
    CPAREN          reduce using rule 123 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 230

state 196

    (31) declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (123) np_quitarFondo -> .

    COMA            reduce using rule 123 (np_quitarFondo -> .)
    CPAREN          reduce using rule 123 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 231

state 197

    (21) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables . OBRACKET estatutos CBRACKET np_endFunc

    OBRACKET        shift and go to state 232


state 198

    (22) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables . OBRACKET estatutos CBRACKET np_endFunc

    OBRACKET        shift and go to state 233


state 199

    (23) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables . OBRACKET estatutos CBRACKET np_endFunc

    OBRACKET        shift and go to state 234


state 200

    (7) principal -> PRINCIPAL np_updateMain OPAREN CPAREN OBRACKET estatutos CBRACKET np_end np_printCuadruplos np_printTablas .

    $end            reduce using rule 7 (principal -> PRINCIPAL np_updateMain OPAREN CPAREN OBRACKET estatutos CBRACKET np_end np_printCuadruplos np_printTablas .)


state 201

    (110) return -> REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON . np_return
    (112) np_return -> .

    REGRESA         reduce using rule 112 (np_return -> .)
    VAR             reduce using rule 112 (np_return -> .)
    DESDE           reduce using rule 112 (np_return -> .)
    MIENTRAS        reduce using rule 112 (np_return -> .)
    LEE             reduce using rule 112 (np_return -> .)
    ESCRIBE         reduce using rule 112 (np_return -> .)
    SI              reduce using rule 112 (np_return -> .)
    ID              reduce using rule 112 (np_return -> .)
    CBRACKET        reduce using rule 112 (np_return -> .)

    np_return                      shift and go to state 235

state 202

    (77) expresion -> expresion LOGIC np_insertarOperador . expresion
    (77) expresion -> . expresion LOGIC np_insertarOperador expresion
    (78) expresion -> . expresion RELOP np_insertarOperador expresion
    (79) expresion -> . termino
    (80) termino -> . termino PLUS np_insertarOperador termino
    (81) termino -> . termino MINUS np_insertarOperador termino
    (82) termino -> . termino MULTIPLY np_insertarOperador termino
    (83) termino -> . termino DIVIDE np_insertarOperador termino
    (85) termino -> . termino1 OPMATRIZ np_insertarOperador
    (86) termino -> . termino1
    (87) termino1 -> . posibleID
    (88) termino1 -> . ENTERO np_addConstanteINT np_enviarACuadruplosC
    (89) termino1 -> . FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC
    (90) termino1 -> . llamadaFuncion
    (91) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (92) termino1 -> . QUOT CARACTER QUOT
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB

    ENTERO          shift and go to state 129
    FLOTANTE        shift and go to state 130
    OPAREN          shift and go to state 132
    QUOT            shift and go to state 133
    ID              shift and go to state 134

    expresion                      shift and go to state 236
    termino                        shift and go to state 126
    termino1                       shift and go to state 127
    posibleID                      shift and go to state 128
    llamadaFuncion                 shift and go to state 131

state 203

    (78) expresion -> expresion RELOP np_insertarOperador . expresion
    (77) expresion -> . expresion LOGIC np_insertarOperador expresion
    (78) expresion -> . expresion RELOP np_insertarOperador expresion
    (79) expresion -> . termino
    (80) termino -> . termino PLUS np_insertarOperador termino
    (81) termino -> . termino MINUS np_insertarOperador termino
    (82) termino -> . termino MULTIPLY np_insertarOperador termino
    (83) termino -> . termino DIVIDE np_insertarOperador termino
    (85) termino -> . termino1 OPMATRIZ np_insertarOperador
    (86) termino -> . termino1
    (87) termino1 -> . posibleID
    (88) termino1 -> . ENTERO np_addConstanteINT np_enviarACuadruplosC
    (89) termino1 -> . FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC
    (90) termino1 -> . llamadaFuncion
    (91) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (92) termino1 -> . QUOT CARACTER QUOT
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB

    ENTERO          shift and go to state 129
    FLOTANTE        shift and go to state 130
    OPAREN          shift and go to state 132
    QUOT            shift and go to state 133
    ID              shift and go to state 134

    expresion                      shift and go to state 237
    termino                        shift and go to state 126
    termino1                       shift and go to state 127
    posibleID                      shift and go to state 128
    llamadaFuncion                 shift and go to state 131

state 204

    (80) termino -> termino PLUS np_insertarOperador . termino
    (80) termino -> . termino PLUS np_insertarOperador termino
    (81) termino -> . termino MINUS np_insertarOperador termino
    (82) termino -> . termino MULTIPLY np_insertarOperador termino
    (83) termino -> . termino DIVIDE np_insertarOperador termino
    (85) termino -> . termino1 OPMATRIZ np_insertarOperador
    (86) termino -> . termino1
    (87) termino1 -> . posibleID
    (88) termino1 -> . ENTERO np_addConstanteINT np_enviarACuadruplosC
    (89) termino1 -> . FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC
    (90) termino1 -> . llamadaFuncion
    (91) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (92) termino1 -> . QUOT CARACTER QUOT
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB

    ENTERO          shift and go to state 129
    FLOTANTE        shift and go to state 130
    OPAREN          shift and go to state 132
    QUOT            shift and go to state 133
    ID              shift and go to state 134

    termino                        shift and go to state 238
    termino1                       shift and go to state 127
    posibleID                      shift and go to state 128
    llamadaFuncion                 shift and go to state 131

state 205

    (81) termino -> termino MINUS np_insertarOperador . termino
    (80) termino -> . termino PLUS np_insertarOperador termino
    (81) termino -> . termino MINUS np_insertarOperador termino
    (82) termino -> . termino MULTIPLY np_insertarOperador termino
    (83) termino -> . termino DIVIDE np_insertarOperador termino
    (85) termino -> . termino1 OPMATRIZ np_insertarOperador
    (86) termino -> . termino1
    (87) termino1 -> . posibleID
    (88) termino1 -> . ENTERO np_addConstanteINT np_enviarACuadruplosC
    (89) termino1 -> . FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC
    (90) termino1 -> . llamadaFuncion
    (91) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (92) termino1 -> . QUOT CARACTER QUOT
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB

    ENTERO          shift and go to state 129
    FLOTANTE        shift and go to state 130
    OPAREN          shift and go to state 132
    QUOT            shift and go to state 133
    ID              shift and go to state 134

    termino                        shift and go to state 239
    termino1                       shift and go to state 127
    posibleID                      shift and go to state 128
    llamadaFuncion                 shift and go to state 131

state 206

    (82) termino -> termino MULTIPLY np_insertarOperador . termino
    (80) termino -> . termino PLUS np_insertarOperador termino
    (81) termino -> . termino MINUS np_insertarOperador termino
    (82) termino -> . termino MULTIPLY np_insertarOperador termino
    (83) termino -> . termino DIVIDE np_insertarOperador termino
    (85) termino -> . termino1 OPMATRIZ np_insertarOperador
    (86) termino -> . termino1
    (87) termino1 -> . posibleID
    (88) termino1 -> . ENTERO np_addConstanteINT np_enviarACuadruplosC
    (89) termino1 -> . FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC
    (90) termino1 -> . llamadaFuncion
    (91) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (92) termino1 -> . QUOT CARACTER QUOT
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB

    ENTERO          shift and go to state 129
    FLOTANTE        shift and go to state 130
    OPAREN          shift and go to state 132
    QUOT            shift and go to state 133
    ID              shift and go to state 134

    termino                        shift and go to state 240
    termino1                       shift and go to state 127
    posibleID                      shift and go to state 128
    llamadaFuncion                 shift and go to state 131

state 207

    (83) termino -> termino DIVIDE np_insertarOperador . termino
    (80) termino -> . termino PLUS np_insertarOperador termino
    (81) termino -> . termino MINUS np_insertarOperador termino
    (82) termino -> . termino MULTIPLY np_insertarOperador termino
    (83) termino -> . termino DIVIDE np_insertarOperador termino
    (85) termino -> . termino1 OPMATRIZ np_insertarOperador
    (86) termino -> . termino1
    (87) termino1 -> . posibleID
    (88) termino1 -> . ENTERO np_addConstanteINT np_enviarACuadruplosC
    (89) termino1 -> . FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC
    (90) termino1 -> . llamadaFuncion
    (91) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (92) termino1 -> . QUOT CARACTER QUOT
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB

    ENTERO          shift and go to state 129
    FLOTANTE        shift and go to state 130
    OPAREN          shift and go to state 132
    QUOT            shift and go to state 133
    ID              shift and go to state 134

    termino                        shift and go to state 241
    termino1                       shift and go to state 127
    posibleID                      shift and go to state 128
    llamadaFuncion                 shift and go to state 131

state 208

    (85) termino -> termino1 OPMATRIZ np_insertarOperador .

    PLUS            reduce using rule 85 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    MINUS           reduce using rule 85 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    MULTIPLY        reduce using rule 85 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    DIVIDE          reduce using rule 85 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    LOGIC           reduce using rule 85 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    RELOP           reduce using rule 85 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    SEMICOLON       reduce using rule 85 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    COMA            reduce using rule 85 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    CPAREN          reduce using rule 85 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    CCORCH          reduce using rule 85 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    HAZ             reduce using rule 85 (termino -> termino1 OPMATRIZ np_insertarOperador .)


state 209

    (88) termino1 -> ENTERO np_addConstanteINT np_enviarACuadruplosC .

    OPMATRIZ        reduce using rule 88 (termino1 -> ENTERO np_addConstanteINT np_enviarACuadruplosC .)
    PLUS            reduce using rule 88 (termino1 -> ENTERO np_addConstanteINT np_enviarACuadruplosC .)
    MINUS           reduce using rule 88 (termino1 -> ENTERO np_addConstanteINT np_enviarACuadruplosC .)
    MULTIPLY        reduce using rule 88 (termino1 -> ENTERO np_addConstanteINT np_enviarACuadruplosC .)
    DIVIDE          reduce using rule 88 (termino1 -> ENTERO np_addConstanteINT np_enviarACuadruplosC .)
    LOGIC           reduce using rule 88 (termino1 -> ENTERO np_addConstanteINT np_enviarACuadruplosC .)
    RELOP           reduce using rule 88 (termino1 -> ENTERO np_addConstanteINT np_enviarACuadruplosC .)
    SEMICOLON       reduce using rule 88 (termino1 -> ENTERO np_addConstanteINT np_enviarACuadruplosC .)
    COMA            reduce using rule 88 (termino1 -> ENTERO np_addConstanteINT np_enviarACuadruplosC .)
    CPAREN          reduce using rule 88 (termino1 -> ENTERO np_addConstanteINT np_enviarACuadruplosC .)
    CCORCH          reduce using rule 88 (termino1 -> ENTERO np_addConstanteINT np_enviarACuadruplosC .)
    HAZ             reduce using rule 88 (termino1 -> ENTERO np_addConstanteINT np_enviarACuadruplosC .)


state 210

    (89) termino1 -> FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC .

    OPMATRIZ        reduce using rule 89 (termino1 -> FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC .)
    PLUS            reduce using rule 89 (termino1 -> FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC .)
    MINUS           reduce using rule 89 (termino1 -> FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC .)
    MULTIPLY        reduce using rule 89 (termino1 -> FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC .)
    DIVIDE          reduce using rule 89 (termino1 -> FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC .)
    LOGIC           reduce using rule 89 (termino1 -> FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC .)
    RELOP           reduce using rule 89 (termino1 -> FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC .)
    SEMICOLON       reduce using rule 89 (termino1 -> FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC .)
    COMA            reduce using rule 89 (termino1 -> FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC .)
    CPAREN          reduce using rule 89 (termino1 -> FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC .)
    CCORCH          reduce using rule 89 (termino1 -> FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC .)
    HAZ             reduce using rule 89 (termino1 -> FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC .)


state 211

    (91) termino1 -> OPAREN np_insertarOperador expresion . CPAREN np_insertarOperador
    (77) expresion -> expresion . LOGIC np_insertarOperador expresion
    (78) expresion -> expresion . RELOP np_insertarOperador expresion

    CPAREN          shift and go to state 242
    LOGIC           shift and go to state 162
    RELOP           shift and go to state 163


state 212

    (92) termino1 -> QUOT CARACTER QUOT .

    OPMATRIZ        reduce using rule 92 (termino1 -> QUOT CARACTER QUOT .)
    PLUS            reduce using rule 92 (termino1 -> QUOT CARACTER QUOT .)
    MINUS           reduce using rule 92 (termino1 -> QUOT CARACTER QUOT .)
    MULTIPLY        reduce using rule 92 (termino1 -> QUOT CARACTER QUOT .)
    DIVIDE          reduce using rule 92 (termino1 -> QUOT CARACTER QUOT .)
    LOGIC           reduce using rule 92 (termino1 -> QUOT CARACTER QUOT .)
    RELOP           reduce using rule 92 (termino1 -> QUOT CARACTER QUOT .)
    SEMICOLON       reduce using rule 92 (termino1 -> QUOT CARACTER QUOT .)
    COMA            reduce using rule 92 (termino1 -> QUOT CARACTER QUOT .)
    CPAREN          reduce using rule 92 (termino1 -> QUOT CARACTER QUOT .)
    CCORCH          reduce using rule 92 (termino1 -> QUOT CARACTER QUOT .)
    HAZ             reduce using rule 92 (termino1 -> QUOT CARACTER QUOT .)


state 213

    (102) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA np_iniciaFor . np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (122) np_agregarFondo -> .

    ENTERO          reduce using rule 122 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 122 (np_agregarFondo -> .)
    OPAREN          reduce using rule 122 (np_agregarFondo -> .)
    QUOT            reduce using rule 122 (np_agregarFondo -> .)
    ID              reduce using rule 122 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 243

state 214

    (62) llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN . paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (67) paramsLlamada1 -> . empty
    (68) paramsLlamada1 -> . paramsLlamada2
    (125) empty -> .
    (69) paramsLlamada2 -> . np_agregarFondo expresion np_quitarFondo np_resolverParam
    (70) paramsLlamada2 -> . np_agregarFondo expresion np_quitarFondo np_resolverParam COMA paramsLlamada2
    (122) np_agregarFondo -> .

    CPAREN          reduce using rule 125 (empty -> .)
    ENTERO          reduce using rule 122 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 122 (np_agregarFondo -> .)
    OPAREN          reduce using rule 122 (np_agregarFondo -> .)
    QUOT            reduce using rule 122 (np_agregarFondo -> .)
    ID              reduce using rule 122 (np_agregarFondo -> .)

    paramsLlamada1                 shift and go to state 244
    empty                          shift and go to state 245
    paramsLlamada2                 shift and go to state 246
    np_agregarFondo                shift and go to state 247

state 215

    (94) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo . expresion np_quitarFondo CCORCH
    (95) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo . expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (77) expresion -> . expresion LOGIC np_insertarOperador expresion
    (78) expresion -> . expresion RELOP np_insertarOperador expresion
    (79) expresion -> . termino
    (80) termino -> . termino PLUS np_insertarOperador termino
    (81) termino -> . termino MINUS np_insertarOperador termino
    (82) termino -> . termino MULTIPLY np_insertarOperador termino
    (83) termino -> . termino DIVIDE np_insertarOperador termino
    (85) termino -> . termino1 OPMATRIZ np_insertarOperador
    (86) termino -> . termino1
    (87) termino1 -> . posibleID
    (88) termino1 -> . ENTERO np_addConstanteINT np_enviarACuadruplosC
    (89) termino1 -> . FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC
    (90) termino1 -> . llamadaFuncion
    (91) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (92) termino1 -> . QUOT CARACTER QUOT
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB

    ENTERO          shift and go to state 129
    FLOTANTE        shift and go to state 130
    OPAREN          shift and go to state 132
    QUOT            shift and go to state 133
    ID              shift and go to state 134

    expresion                      shift and go to state 248
    termino                        shift and go to state 126
    termino1                       shift and go to state 127
    posibleID                      shift and go to state 128
    llamadaFuncion                 shift and go to state 131

state 216

    (106) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion . np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (77) expresion -> expresion . LOGIC np_insertarOperador expresion
    (78) expresion -> expresion . RELOP np_insertarOperador expresion
    (123) np_quitarFondo -> .

    LOGIC           shift and go to state 162
    RELOP           shift and go to state 163
    CPAREN          reduce using rule 123 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 249

state 217

    (73) lectura -> LEE OPAREN posibleID lectura2 CPAREN . SEMICOLON

    SEMICOLON       shift and go to state 250


state 218

    (75) lectura2 -> COMA posibleID . lectura2
    (74) lectura2 -> . empty
    (75) lectura2 -> . COMA posibleID lectura2
    (125) empty -> .

    COMA            shift and go to state 179
    CPAREN          reduce using rule 125 (empty -> .)

    lectura2                       shift and go to state 251
    empty                          shift and go to state 178

state 219

    (76) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo . expresion np_quitarFondo np_quitarFondo SEMICOLON
    (77) expresion -> . expresion LOGIC np_insertarOperador expresion
    (78) expresion -> . expresion RELOP np_insertarOperador expresion
    (79) expresion -> . termino
    (80) termino -> . termino PLUS np_insertarOperador termino
    (81) termino -> . termino MINUS np_insertarOperador termino
    (82) termino -> . termino MULTIPLY np_insertarOperador termino
    (83) termino -> . termino DIVIDE np_insertarOperador termino
    (85) termino -> . termino1 OPMATRIZ np_insertarOperador
    (86) termino -> . termino1
    (87) termino1 -> . posibleID
    (88) termino1 -> . ENTERO np_addConstanteINT np_enviarACuadruplosC
    (89) termino1 -> . FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC
    (90) termino1 -> . llamadaFuncion
    (91) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (92) termino1 -> . QUOT CARACTER QUOT
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB

    ENTERO          shift and go to state 129
    FLOTANTE        shift and go to state 130
    OPAREN          shift and go to state 132
    QUOT            shift and go to state 133
    ID              shift and go to state 134

    posibleID                      shift and go to state 128
    expresion                      shift and go to state 252
    termino                        shift and go to state 126
    termino1                       shift and go to state 127
    llamadaFuncion                 shift and go to state 131

state 220

    (49) escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .

    REGRESA         reduce using rule 49 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    VAR             reduce using rule 49 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    DESDE           reduce using rule 49 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 49 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    LEE             reduce using rule 49 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 49 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    SI              reduce using rule 49 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    ID              reduce using rule 49 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    CBRACKET        reduce using rule 49 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)


state 221

    (54) escritura3 -> COMA expresion . escritura3
    (77) expresion -> expresion . LOGIC np_insertarOperador expresion
    (78) expresion -> expresion . RELOP np_insertarOperador expresion
    (53) escritura3 -> . empty
    (54) escritura3 -> . COMA expresion escritura3
    (55) escritura3 -> . COMA STRING escritura3
    (125) empty -> .

    LOGIC           shift and go to state 162
    RELOP           shift and go to state 163
    COMA            shift and go to state 184
    CPAREN          reduce using rule 125 (empty -> .)

    escritura3                     shift and go to state 253
    empty                          shift and go to state 183

state 222

    (55) escritura3 -> COMA STRING . escritura3
    (53) escritura3 -> . empty
    (54) escritura3 -> . COMA expresion escritura3
    (55) escritura3 -> . COMA STRING escritura3
    (125) empty -> .

    COMA            shift and go to state 184
    CPAREN          reduce using rule 125 (empty -> .)

    escritura3                     shift and go to state 254
    empty                          shift and go to state 183

state 223

    (56) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo . np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo . np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (58) np_iniciaIf -> .

    CPAREN          reduce using rule 58 (np_iniciaIf -> .)

    np_iniciaIf                    shift and go to state 255

state 224

    (18) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .

    VAR             reduce using rule 18 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    FUNCION         reduce using rule 18 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    PRINCIPAL       reduce using rule 18 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    REGRESA         reduce using rule 18 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    DESDE           reduce using rule 18 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    MIENTRAS        reduce using rule 18 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    LEE             reduce using rule 18 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    ESCRIBE         reduce using rule 18 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    SI              reduce using rule 18 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    ID              reduce using rule 18 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    CBRACKET        reduce using rule 18 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    OBRACKET        reduce using rule 18 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)


state 225

    (19) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA . declaracion2
    (15) declaracion2 -> . np_agregarFondo posibleIDDeclaracion declaracion3
    (122) np_agregarFondo -> .

    ID              reduce using rule 122 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 256
    np_agregarFondo                shift and go to state 41

state 226

    (97) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH . expresion CCORCH
    (77) expresion -> . expresion LOGIC np_insertarOperador expresion
    (78) expresion -> . expresion RELOP np_insertarOperador expresion
    (79) expresion -> . termino
    (80) termino -> . termino PLUS np_insertarOperador termino
    (81) termino -> . termino MINUS np_insertarOperador termino
    (82) termino -> . termino MULTIPLY np_insertarOperador termino
    (83) termino -> . termino DIVIDE np_insertarOperador termino
    (85) termino -> . termino1 OPMATRIZ np_insertarOperador
    (86) termino -> . termino1
    (87) termino1 -> . posibleID
    (88) termino1 -> . ENTERO np_addConstanteINT np_enviarACuadruplosC
    (89) termino1 -> . FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC
    (90) termino1 -> . llamadaFuncion
    (91) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (92) termino1 -> . QUOT CARACTER QUOT
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB

    ENTERO          shift and go to state 129
    FLOTANTE        shift and go to state 130
    OPAREN          shift and go to state 132
    QUOT            shift and go to state 133
    ID              shift and go to state 134

    expresion                      shift and go to state 257
    termino                        shift and go to state 126
    termino1                       shift and go to state 127
    posibleID                      shift and go to state 128
    llamadaFuncion                 shift and go to state 131

state 227

    (98) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH . expresion COMA expresion CCORCH
    (77) expresion -> . expresion LOGIC np_insertarOperador expresion
    (78) expresion -> . expresion RELOP np_insertarOperador expresion
    (79) expresion -> . termino
    (80) termino -> . termino PLUS np_insertarOperador termino
    (81) termino -> . termino MINUS np_insertarOperador termino
    (82) termino -> . termino MULTIPLY np_insertarOperador termino
    (83) termino -> . termino DIVIDE np_insertarOperador termino
    (85) termino -> . termino1 OPMATRIZ np_insertarOperador
    (86) termino -> . termino1
    (87) termino1 -> . posibleID
    (88) termino1 -> . ENTERO np_addConstanteINT np_enviarACuadruplosC
    (89) termino1 -> . FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC
    (90) termino1 -> . llamadaFuncion
    (91) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (92) termino1 -> . QUOT CARACTER QUOT
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB

    ENTERO          shift and go to state 129
    FLOTANTE        shift and go to state 130
    OPAREN          shift and go to state 132
    QUOT            shift and go to state 133
    ID              shift and go to state 134

    expresion                      shift and go to state 258
    termino                        shift and go to state 126
    termino1                       shift and go to state 127
    posibleID                      shift and go to state 128
    llamadaFuncion                 shift and go to state 131

state 228

    (20) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET . estatutos CBRACKET np_endFunc
    (39) estatutos -> . return estatutos
    (40) estatutos -> . empty
    (41) estatutos -> . declaracion estatutos
    (42) estatutos -> . estatutoRepeticionIncondicional estatutos
    (43) estatutos -> . estatutoRepeticionCondicional estatutos
    (44) estatutos -> . lectura estatutos
    (45) estatutos -> . asignacion estatutos
    (46) estatutos -> . escritura estatutos
    (47) estatutos -> . decision estatutos
    (48) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (110) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (111) return -> . REGRESA SEMICOLON np_returnVOID
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (102) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (106) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (73) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (76) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (49) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (56) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 68
    CBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 69
    MIENTRAS        shift and go to state 71
    LEE             shift and go to state 72
    ESCRIBE         shift and go to state 74
    SI              shift and go to state 75
    ID              shift and go to state 70

    estatutos                      shift and go to state 259
    return                         shift and go to state 58
    empty                          shift and go to state 59
    declaracion                    shift and go to state 60
    estatutoRepeticionIncondicional shift and go to state 61
    estatutoRepeticionCondicional  shift and go to state 62
    lectura                        shift and go to state 63
    asignacion                     shift and go to state 64
    escritura                      shift and go to state 65
    decision                       shift and go to state 66
    llamadaFuncion                 shift and go to state 67
    posibleID                      shift and go to state 73

state 229

    (29) declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (32) declaracionFuncionParametros2 -> . empty
    (33) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (34) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (35) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (125) empty -> .

    COMA            shift and go to state 262
    CPAREN          reduce using rule 125 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 260
    empty                          shift and go to state 261

state 230

    (30) declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (32) declaracionFuncionParametros2 -> . empty
    (33) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (34) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (35) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (125) empty -> .

    COMA            shift and go to state 262
    CPAREN          reduce using rule 125 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 263
    empty                          shift and go to state 261

state 231

    (31) declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (32) declaracionFuncionParametros2 -> . empty
    (33) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (34) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (35) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (125) empty -> .

    COMA            shift and go to state 262
    CPAREN          reduce using rule 125 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 264
    empty                          shift and go to state 261

state 232

    (21) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET . estatutos CBRACKET np_endFunc
    (39) estatutos -> . return estatutos
    (40) estatutos -> . empty
    (41) estatutos -> . declaracion estatutos
    (42) estatutos -> . estatutoRepeticionIncondicional estatutos
    (43) estatutos -> . estatutoRepeticionCondicional estatutos
    (44) estatutos -> . lectura estatutos
    (45) estatutos -> . asignacion estatutos
    (46) estatutos -> . escritura estatutos
    (47) estatutos -> . decision estatutos
    (48) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (110) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (111) return -> . REGRESA SEMICOLON np_returnVOID
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (102) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (106) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (73) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (76) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (49) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (56) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 68
    CBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 69
    MIENTRAS        shift and go to state 71
    LEE             shift and go to state 72
    ESCRIBE         shift and go to state 74
    SI              shift and go to state 75
    ID              shift and go to state 70

    estatutos                      shift and go to state 265
    return                         shift and go to state 58
    empty                          shift and go to state 59
    declaracion                    shift and go to state 60
    estatutoRepeticionIncondicional shift and go to state 61
    estatutoRepeticionCondicional  shift and go to state 62
    lectura                        shift and go to state 63
    asignacion                     shift and go to state 64
    escritura                      shift and go to state 65
    decision                       shift and go to state 66
    llamadaFuncion                 shift and go to state 67
    posibleID                      shift and go to state 73

state 233

    (22) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET . estatutos CBRACKET np_endFunc
    (39) estatutos -> . return estatutos
    (40) estatutos -> . empty
    (41) estatutos -> . declaracion estatutos
    (42) estatutos -> . estatutoRepeticionIncondicional estatutos
    (43) estatutos -> . estatutoRepeticionCondicional estatutos
    (44) estatutos -> . lectura estatutos
    (45) estatutos -> . asignacion estatutos
    (46) estatutos -> . escritura estatutos
    (47) estatutos -> . decision estatutos
    (48) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (110) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (111) return -> . REGRESA SEMICOLON np_returnVOID
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (102) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (106) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (73) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (76) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (49) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (56) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 68
    CBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 69
    MIENTRAS        shift and go to state 71
    LEE             shift and go to state 72
    ESCRIBE         shift and go to state 74
    SI              shift and go to state 75
    ID              shift and go to state 70

    estatutos                      shift and go to state 266
    return                         shift and go to state 58
    empty                          shift and go to state 59
    declaracion                    shift and go to state 60
    estatutoRepeticionIncondicional shift and go to state 61
    estatutoRepeticionCondicional  shift and go to state 62
    lectura                        shift and go to state 63
    asignacion                     shift and go to state 64
    escritura                      shift and go to state 65
    decision                       shift and go to state 66
    llamadaFuncion                 shift and go to state 67
    posibleID                      shift and go to state 73

state 234

    (23) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET . estatutos CBRACKET np_endFunc
    (39) estatutos -> . return estatutos
    (40) estatutos -> . empty
    (41) estatutos -> . declaracion estatutos
    (42) estatutos -> . estatutoRepeticionIncondicional estatutos
    (43) estatutos -> . estatutoRepeticionCondicional estatutos
    (44) estatutos -> . lectura estatutos
    (45) estatutos -> . asignacion estatutos
    (46) estatutos -> . escritura estatutos
    (47) estatutos -> . decision estatutos
    (48) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (110) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (111) return -> . REGRESA SEMICOLON np_returnVOID
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (102) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (106) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (73) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (76) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (49) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (56) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 68
    CBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 69
    MIENTRAS        shift and go to state 71
    LEE             shift and go to state 72
    ESCRIBE         shift and go to state 74
    SI              shift and go to state 75
    ID              shift and go to state 70

    estatutos                      shift and go to state 267
    return                         shift and go to state 58
    empty                          shift and go to state 59
    declaracion                    shift and go to state 60
    estatutoRepeticionIncondicional shift and go to state 61
    estatutoRepeticionCondicional  shift and go to state 62
    lectura                        shift and go to state 63
    asignacion                     shift and go to state 64
    escritura                      shift and go to state 65
    decision                       shift and go to state 66
    llamadaFuncion                 shift and go to state 67
    posibleID                      shift and go to state 73

state 235

    (110) return -> REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return .

    REGRESA         reduce using rule 110 (return -> REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return .)
    VAR             reduce using rule 110 (return -> REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return .)
    DESDE           reduce using rule 110 (return -> REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return .)
    MIENTRAS        reduce using rule 110 (return -> REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return .)
    LEE             reduce using rule 110 (return -> REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return .)
    ESCRIBE         reduce using rule 110 (return -> REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return .)
    SI              reduce using rule 110 (return -> REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return .)
    ID              reduce using rule 110 (return -> REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return .)
    CBRACKET        reduce using rule 110 (return -> REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return .)


state 236

    (77) expresion -> expresion LOGIC np_insertarOperador expresion .
    (77) expresion -> expresion . LOGIC np_insertarOperador expresion
    (78) expresion -> expresion . RELOP np_insertarOperador expresion

  ! shift/reduce conflict for LOGIC resolved as shift
  ! shift/reduce conflict for RELOP resolved as shift
    SEMICOLON       reduce using rule 77 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    COMA            reduce using rule 77 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    CPAREN          reduce using rule 77 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    CCORCH          reduce using rule 77 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    HAZ             reduce using rule 77 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    LOGIC           shift and go to state 162
    RELOP           shift and go to state 163

  ! LOGIC           [ reduce using rule 77 (expresion -> expresion LOGIC np_insertarOperador expresion .) ]
  ! RELOP           [ reduce using rule 77 (expresion -> expresion LOGIC np_insertarOperador expresion .) ]


state 237

    (78) expresion -> expresion RELOP np_insertarOperador expresion .
    (77) expresion -> expresion . LOGIC np_insertarOperador expresion
    (78) expresion -> expresion . RELOP np_insertarOperador expresion

  ! shift/reduce conflict for LOGIC resolved as shift
  ! shift/reduce conflict for RELOP resolved as shift
    SEMICOLON       reduce using rule 78 (expresion -> expresion RELOP np_insertarOperador expresion .)
    COMA            reduce using rule 78 (expresion -> expresion RELOP np_insertarOperador expresion .)
    CPAREN          reduce using rule 78 (expresion -> expresion RELOP np_insertarOperador expresion .)
    CCORCH          reduce using rule 78 (expresion -> expresion RELOP np_insertarOperador expresion .)
    HAZ             reduce using rule 78 (expresion -> expresion RELOP np_insertarOperador expresion .)
    LOGIC           shift and go to state 162
    RELOP           shift and go to state 163

  ! LOGIC           [ reduce using rule 78 (expresion -> expresion RELOP np_insertarOperador expresion .) ]
  ! RELOP           [ reduce using rule 78 (expresion -> expresion RELOP np_insertarOperador expresion .) ]


state 238

    (80) termino -> termino PLUS np_insertarOperador termino .
    (80) termino -> termino . PLUS np_insertarOperador termino
    (81) termino -> termino . MINUS np_insertarOperador termino
    (82) termino -> termino . MULTIPLY np_insertarOperador termino
    (83) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 80 (termino -> termino PLUS np_insertarOperador termino .)
    MINUS           reduce using rule 80 (termino -> termino PLUS np_insertarOperador termino .)
    LOGIC           reduce using rule 80 (termino -> termino PLUS np_insertarOperador termino .)
    RELOP           reduce using rule 80 (termino -> termino PLUS np_insertarOperador termino .)
    SEMICOLON       reduce using rule 80 (termino -> termino PLUS np_insertarOperador termino .)
    COMA            reduce using rule 80 (termino -> termino PLUS np_insertarOperador termino .)
    CPAREN          reduce using rule 80 (termino -> termino PLUS np_insertarOperador termino .)
    CCORCH          reduce using rule 80 (termino -> termino PLUS np_insertarOperador termino .)
    HAZ             reduce using rule 80 (termino -> termino PLUS np_insertarOperador termino .)
    MULTIPLY        shift and go to state 166
    DIVIDE          shift and go to state 167

  ! MULTIPLY        [ reduce using rule 80 (termino -> termino PLUS np_insertarOperador termino .) ]
  ! DIVIDE          [ reduce using rule 80 (termino -> termino PLUS np_insertarOperador termino .) ]
  ! PLUS            [ shift and go to state 164 ]
  ! MINUS           [ shift and go to state 165 ]


state 239

    (81) termino -> termino MINUS np_insertarOperador termino .
    (80) termino -> termino . PLUS np_insertarOperador termino
    (81) termino -> termino . MINUS np_insertarOperador termino
    (82) termino -> termino . MULTIPLY np_insertarOperador termino
    (83) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 81 (termino -> termino MINUS np_insertarOperador termino .)
    MINUS           reduce using rule 81 (termino -> termino MINUS np_insertarOperador termino .)
    LOGIC           reduce using rule 81 (termino -> termino MINUS np_insertarOperador termino .)
    RELOP           reduce using rule 81 (termino -> termino MINUS np_insertarOperador termino .)
    SEMICOLON       reduce using rule 81 (termino -> termino MINUS np_insertarOperador termino .)
    COMA            reduce using rule 81 (termino -> termino MINUS np_insertarOperador termino .)
    CPAREN          reduce using rule 81 (termino -> termino MINUS np_insertarOperador termino .)
    CCORCH          reduce using rule 81 (termino -> termino MINUS np_insertarOperador termino .)
    HAZ             reduce using rule 81 (termino -> termino MINUS np_insertarOperador termino .)
    MULTIPLY        shift and go to state 166
    DIVIDE          shift and go to state 167

  ! MULTIPLY        [ reduce using rule 81 (termino -> termino MINUS np_insertarOperador termino .) ]
  ! DIVIDE          [ reduce using rule 81 (termino -> termino MINUS np_insertarOperador termino .) ]
  ! PLUS            [ shift and go to state 164 ]
  ! MINUS           [ shift and go to state 165 ]


state 240

    (82) termino -> termino MULTIPLY np_insertarOperador termino .
    (80) termino -> termino . PLUS np_insertarOperador termino
    (81) termino -> termino . MINUS np_insertarOperador termino
    (82) termino -> termino . MULTIPLY np_insertarOperador termino
    (83) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 82 (termino -> termino MULTIPLY np_insertarOperador termino .)
    MINUS           reduce using rule 82 (termino -> termino MULTIPLY np_insertarOperador termino .)
    MULTIPLY        reduce using rule 82 (termino -> termino MULTIPLY np_insertarOperador termino .)
    DIVIDE          reduce using rule 82 (termino -> termino MULTIPLY np_insertarOperador termino .)
    LOGIC           reduce using rule 82 (termino -> termino MULTIPLY np_insertarOperador termino .)
    RELOP           reduce using rule 82 (termino -> termino MULTIPLY np_insertarOperador termino .)
    SEMICOLON       reduce using rule 82 (termino -> termino MULTIPLY np_insertarOperador termino .)
    COMA            reduce using rule 82 (termino -> termino MULTIPLY np_insertarOperador termino .)
    CPAREN          reduce using rule 82 (termino -> termino MULTIPLY np_insertarOperador termino .)
    CCORCH          reduce using rule 82 (termino -> termino MULTIPLY np_insertarOperador termino .)
    HAZ             reduce using rule 82 (termino -> termino MULTIPLY np_insertarOperador termino .)

  ! PLUS            [ shift and go to state 164 ]
  ! MINUS           [ shift and go to state 165 ]
  ! MULTIPLY        [ shift and go to state 166 ]
  ! DIVIDE          [ shift and go to state 167 ]


state 241

    (83) termino -> termino DIVIDE np_insertarOperador termino .
    (80) termino -> termino . PLUS np_insertarOperador termino
    (81) termino -> termino . MINUS np_insertarOperador termino
    (82) termino -> termino . MULTIPLY np_insertarOperador termino
    (83) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 83 (termino -> termino DIVIDE np_insertarOperador termino .)
    MINUS           reduce using rule 83 (termino -> termino DIVIDE np_insertarOperador termino .)
    MULTIPLY        reduce using rule 83 (termino -> termino DIVIDE np_insertarOperador termino .)
    DIVIDE          reduce using rule 83 (termino -> termino DIVIDE np_insertarOperador termino .)
    LOGIC           reduce using rule 83 (termino -> termino DIVIDE np_insertarOperador termino .)
    RELOP           reduce using rule 83 (termino -> termino DIVIDE np_insertarOperador termino .)
    SEMICOLON       reduce using rule 83 (termino -> termino DIVIDE np_insertarOperador termino .)
    COMA            reduce using rule 83 (termino -> termino DIVIDE np_insertarOperador termino .)
    CPAREN          reduce using rule 83 (termino -> termino DIVIDE np_insertarOperador termino .)
    CCORCH          reduce using rule 83 (termino -> termino DIVIDE np_insertarOperador termino .)
    HAZ             reduce using rule 83 (termino -> termino DIVIDE np_insertarOperador termino .)

  ! PLUS            [ shift and go to state 164 ]
  ! MINUS           [ shift and go to state 165 ]
  ! MULTIPLY        [ shift and go to state 166 ]
  ! DIVIDE          [ shift and go to state 167 ]


state 242

    (91) termino1 -> OPAREN np_insertarOperador expresion CPAREN . np_insertarOperador
    (84) np_insertarOperador -> .

    OPMATRIZ        reduce using rule 84 (np_insertarOperador -> .)
    PLUS            reduce using rule 84 (np_insertarOperador -> .)
    MINUS           reduce using rule 84 (np_insertarOperador -> .)
    MULTIPLY        reduce using rule 84 (np_insertarOperador -> .)
    DIVIDE          reduce using rule 84 (np_insertarOperador -> .)
    LOGIC           reduce using rule 84 (np_insertarOperador -> .)
    RELOP           reduce using rule 84 (np_insertarOperador -> .)
    SEMICOLON       reduce using rule 84 (np_insertarOperador -> .)
    COMA            reduce using rule 84 (np_insertarOperador -> .)
    CPAREN          reduce using rule 84 (np_insertarOperador -> .)
    CCORCH          reduce using rule 84 (np_insertarOperador -> .)
    HAZ             reduce using rule 84 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 268

state 243

    (102) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo . expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (77) expresion -> . expresion LOGIC np_insertarOperador expresion
    (78) expresion -> . expresion RELOP np_insertarOperador expresion
    (79) expresion -> . termino
    (80) termino -> . termino PLUS np_insertarOperador termino
    (81) termino -> . termino MINUS np_insertarOperador termino
    (82) termino -> . termino MULTIPLY np_insertarOperador termino
    (83) termino -> . termino DIVIDE np_insertarOperador termino
    (85) termino -> . termino1 OPMATRIZ np_insertarOperador
    (86) termino -> . termino1
    (87) termino1 -> . posibleID
    (88) termino1 -> . ENTERO np_addConstanteINT np_enviarACuadruplosC
    (89) termino1 -> . FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC
    (90) termino1 -> . llamadaFuncion
    (91) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (92) termino1 -> . QUOT CARACTER QUOT
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB

    ENTERO          shift and go to state 129
    FLOTANTE        shift and go to state 130
    OPAREN          shift and go to state 132
    QUOT            shift and go to state 133
    ID              shift and go to state 134

    expresion                      shift and go to state 269
    termino                        shift and go to state 126
    termino1                       shift and go to state 127
    posibleID                      shift and go to state 128
    llamadaFuncion                 shift and go to state 131

state 244

    (62) llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 . CPAREN np_quitarFondoParam np_goSUB

    CPAREN          shift and go to state 270


state 245

    (67) paramsLlamada1 -> empty .

    CPAREN          reduce using rule 67 (paramsLlamada1 -> empty .)


state 246

    (68) paramsLlamada1 -> paramsLlamada2 .

    CPAREN          reduce using rule 68 (paramsLlamada1 -> paramsLlamada2 .)


state 247

    (69) paramsLlamada2 -> np_agregarFondo . expresion np_quitarFondo np_resolverParam
    (70) paramsLlamada2 -> np_agregarFondo . expresion np_quitarFondo np_resolverParam COMA paramsLlamada2
    (77) expresion -> . expresion LOGIC np_insertarOperador expresion
    (78) expresion -> . expresion RELOP np_insertarOperador expresion
    (79) expresion -> . termino
    (80) termino -> . termino PLUS np_insertarOperador termino
    (81) termino -> . termino MINUS np_insertarOperador termino
    (82) termino -> . termino MULTIPLY np_insertarOperador termino
    (83) termino -> . termino DIVIDE np_insertarOperador termino
    (85) termino -> . termino1 OPMATRIZ np_insertarOperador
    (86) termino -> . termino1
    (87) termino1 -> . posibleID
    (88) termino1 -> . ENTERO np_addConstanteINT np_enviarACuadruplosC
    (89) termino1 -> . FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC
    (90) termino1 -> . llamadaFuncion
    (91) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (92) termino1 -> . QUOT CARACTER QUOT
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB

    ENTERO          shift and go to state 129
    FLOTANTE        shift and go to state 130
    OPAREN          shift and go to state 132
    QUOT            shift and go to state 133
    ID              shift and go to state 134

    expresion                      shift and go to state 271
    termino                        shift and go to state 126
    termino1                       shift and go to state 127
    posibleID                      shift and go to state 128
    llamadaFuncion                 shift and go to state 131

state 248

    (94) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion . np_quitarFondo CCORCH
    (95) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion . np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (77) expresion -> expresion . LOGIC np_insertarOperador expresion
    (78) expresion -> expresion . RELOP np_insertarOperador expresion
    (123) np_quitarFondo -> .

    LOGIC           shift and go to state 162
    RELOP           shift and go to state 163
    CCORCH          reduce using rule 123 (np_quitarFondo -> .)
    COMA            reduce using rule 123 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 272

state 249

    (106) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo . CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina

    CPAREN          shift and go to state 273


state 250

    (73) lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .

    REGRESA         reduce using rule 73 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    VAR             reduce using rule 73 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    DESDE           reduce using rule 73 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 73 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    LEE             reduce using rule 73 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 73 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    SI              reduce using rule 73 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    ID              reduce using rule 73 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    CBRACKET        reduce using rule 73 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)


state 251

    (75) lectura2 -> COMA posibleID lectura2 .

    CPAREN          reduce using rule 75 (lectura2 -> COMA posibleID lectura2 .)


state 252

    (76) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion . np_quitarFondo np_quitarFondo SEMICOLON
    (77) expresion -> expresion . LOGIC np_insertarOperador expresion
    (78) expresion -> expresion . RELOP np_insertarOperador expresion
    (123) np_quitarFondo -> .

    LOGIC           shift and go to state 162
    RELOP           shift and go to state 163
    SEMICOLON       reduce using rule 123 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 274

state 253

    (54) escritura3 -> COMA expresion escritura3 .

    CPAREN          reduce using rule 54 (escritura3 -> COMA expresion escritura3 .)


state 254

    (55) escritura3 -> COMA STRING escritura3 .

    CPAREN          reduce using rule 55 (escritura3 -> COMA STRING escritura3 .)


state 255

    (56) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf . CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf . CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf

    CPAREN          shift and go to state 275


state 256

    (19) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .

    VAR             reduce using rule 19 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    FUNCION         reduce using rule 19 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    PRINCIPAL       reduce using rule 19 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    REGRESA         reduce using rule 19 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    DESDE           reduce using rule 19 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    MIENTRAS        reduce using rule 19 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    LEE             reduce using rule 19 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    ESCRIBE         reduce using rule 19 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    SI              reduce using rule 19 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    ID              reduce using rule 19 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    CBRACKET        reduce using rule 19 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    OBRACKET        reduce using rule 19 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)


state 257

    (97) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion . CCORCH
    (77) expresion -> expresion . LOGIC np_insertarOperador expresion
    (78) expresion -> expresion . RELOP np_insertarOperador expresion

    CCORCH          shift and go to state 276
    LOGIC           shift and go to state 162
    RELOP           shift and go to state 163


state 258

    (98) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion . COMA expresion CCORCH
    (77) expresion -> expresion . LOGIC np_insertarOperador expresion
    (78) expresion -> expresion . RELOP np_insertarOperador expresion

    COMA            shift and go to state 277
    LOGIC           shift and go to state 162
    RELOP           shift and go to state 163


state 259

    (20) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos . CBRACKET np_endFunc

    CBRACKET        shift and go to state 278


state 260

    (29) declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 29 (declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 261

    (32) declaracionFuncionParametros2 -> empty .

    CPAREN          reduce using rule 32 (declaracionFuncionParametros2 -> empty .)


state 262

    (33) declaracionFuncionParametros2 -> COMA . INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (34) declaracionFuncionParametros2 -> COMA . FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (35) declaracionFuncionParametros2 -> COMA . CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2

    INT             shift and go to state 279
    FLOAT           shift and go to state 280
    CHAR            shift and go to state 281


state 263

    (30) declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 30 (declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 264

    (31) declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 31 (declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 265

    (21) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos . CBRACKET np_endFunc

    CBRACKET        shift and go to state 282


state 266

    (22) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos . CBRACKET np_endFunc

    CBRACKET        shift and go to state 283


state 267

    (23) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos . CBRACKET np_endFunc

    CBRACKET        shift and go to state 284


state 268

    (91) termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .

    OPMATRIZ        reduce using rule 91 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    PLUS            reduce using rule 91 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    MINUS           reduce using rule 91 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    MULTIPLY        reduce using rule 91 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    DIVIDE          reduce using rule 91 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    LOGIC           reduce using rule 91 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    RELOP           reduce using rule 91 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    SEMICOLON       reduce using rule 91 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    COMA            reduce using rule 91 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    CPAREN          reduce using rule 91 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    CCORCH          reduce using rule 91 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    HAZ             reduce using rule 91 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)


state 269

    (102) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion . np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (77) expresion -> expresion . LOGIC np_insertarOperador expresion
    (78) expresion -> expresion . RELOP np_insertarOperador expresion
    (123) np_quitarFondo -> .

    LOGIC           shift and go to state 162
    RELOP           shift and go to state 163
    HAZ             reduce using rule 123 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 285

state 270

    (62) llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN . np_quitarFondoParam np_goSUB
    (66) np_quitarFondoParam -> .

    SEMICOLON       reduce using rule 66 (np_quitarFondoParam -> .)
    OPMATRIZ        reduce using rule 66 (np_quitarFondoParam -> .)
    PLUS            reduce using rule 66 (np_quitarFondoParam -> .)
    MINUS           reduce using rule 66 (np_quitarFondoParam -> .)
    MULTIPLY        reduce using rule 66 (np_quitarFondoParam -> .)
    DIVIDE          reduce using rule 66 (np_quitarFondoParam -> .)
    LOGIC           reduce using rule 66 (np_quitarFondoParam -> .)
    RELOP           reduce using rule 66 (np_quitarFondoParam -> .)
    COMA            reduce using rule 66 (np_quitarFondoParam -> .)
    CPAREN          reduce using rule 66 (np_quitarFondoParam -> .)
    CCORCH          reduce using rule 66 (np_quitarFondoParam -> .)
    HAZ             reduce using rule 66 (np_quitarFondoParam -> .)

    np_quitarFondoParam            shift and go to state 286

state 271

    (69) paramsLlamada2 -> np_agregarFondo expresion . np_quitarFondo np_resolverParam
    (70) paramsLlamada2 -> np_agregarFondo expresion . np_quitarFondo np_resolverParam COMA paramsLlamada2
    (77) expresion -> expresion . LOGIC np_insertarOperador expresion
    (78) expresion -> expresion . RELOP np_insertarOperador expresion
    (123) np_quitarFondo -> .

    LOGIC           shift and go to state 162
    RELOP           shift and go to state 163
    COMA            reduce using rule 123 (np_quitarFondo -> .)
    CPAREN          reduce using rule 123 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 287

state 272

    (94) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo . CCORCH
    (95) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo . COMA np_agregarFondo expresion np_quitarFondo CCORCH

    CCORCH          shift and go to state 288
    COMA            shift and go to state 289


state 273

    (106) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN . HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina

    HAZ             shift and go to state 290


state 274

    (76) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo . np_quitarFondo SEMICOLON
    (123) np_quitarFondo -> .

    SEMICOLON       reduce using rule 123 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 291

state 275

    (56) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN . ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN . ENTONCES OBRACKET estatutos CBRACKET np_terminaIf

    ENTONCES        shift and go to state 292


state 276

    (97) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH .

    ASSIGN          reduce using rule 97 (posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH .)
    SEMICOLON       reduce using rule 97 (posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH .)
    COMA            reduce using rule 97 (posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH .)
    CPAREN          reduce using rule 97 (posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH .)


state 277

    (98) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA . expresion CCORCH
    (77) expresion -> . expresion LOGIC np_insertarOperador expresion
    (78) expresion -> . expresion RELOP np_insertarOperador expresion
    (79) expresion -> . termino
    (80) termino -> . termino PLUS np_insertarOperador termino
    (81) termino -> . termino MINUS np_insertarOperador termino
    (82) termino -> . termino MULTIPLY np_insertarOperador termino
    (83) termino -> . termino DIVIDE np_insertarOperador termino
    (85) termino -> . termino1 OPMATRIZ np_insertarOperador
    (86) termino -> . termino1
    (87) termino1 -> . posibleID
    (88) termino1 -> . ENTERO np_addConstanteINT np_enviarACuadruplosC
    (89) termino1 -> . FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC
    (90) termino1 -> . llamadaFuncion
    (91) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (92) termino1 -> . QUOT CARACTER QUOT
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB

    ENTERO          shift and go to state 129
    FLOTANTE        shift and go to state 130
    OPAREN          shift and go to state 132
    QUOT            shift and go to state 133
    ID              shift and go to state 134

    expresion                      shift and go to state 293
    termino                        shift and go to state 126
    termino1                       shift and go to state 127
    posibleID                      shift and go to state 128
    llamadaFuncion                 shift and go to state 131

state 278

    (20) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET . np_endFunc
    (26) np_endFunc -> .

    FUNCION         reduce using rule 26 (np_endFunc -> .)
    PRINCIPAL       reduce using rule 26 (np_endFunc -> .)

    np_endFunc                     shift and go to state 294

state 279

    (33) declaracionFuncionParametros2 -> COMA INT . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (14) np_defineTipo -> .

    ID              reduce using rule 14 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 295

state 280

    (34) declaracionFuncionParametros2 -> COMA FLOAT . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (14) np_defineTipo -> .

    ID              reduce using rule 14 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 296

state 281

    (35) declaracionFuncionParametros2 -> COMA CHAR . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (14) np_defineTipo -> .

    ID              reduce using rule 14 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 297

state 282

    (21) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET . np_endFunc
    (26) np_endFunc -> .

    FUNCION         reduce using rule 26 (np_endFunc -> .)
    PRINCIPAL       reduce using rule 26 (np_endFunc -> .)

    np_endFunc                     shift and go to state 298

state 283

    (22) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET . np_endFunc
    (26) np_endFunc -> .

    FUNCION         reduce using rule 26 (np_endFunc -> .)
    PRINCIPAL       reduce using rule 26 (np_endFunc -> .)

    np_endFunc                     shift and go to state 299

state 284

    (23) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET . np_endFunc
    (26) np_endFunc -> .

    FUNCION         reduce using rule 26 (np_endFunc -> .)
    PRINCIPAL       reduce using rule 26 (np_endFunc -> .)

    np_endFunc                     shift and go to state 300

state 285

    (102) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo . np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (104) np_forFalso -> .

    HAZ             reduce using rule 104 (np_forFalso -> .)

    np_forFalso                    shift and go to state 301

state 286

    (62) llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam . np_goSUB
    (72) np_goSUB -> .

    SEMICOLON       reduce using rule 72 (np_goSUB -> .)
    OPMATRIZ        reduce using rule 72 (np_goSUB -> .)
    PLUS            reduce using rule 72 (np_goSUB -> .)
    MINUS           reduce using rule 72 (np_goSUB -> .)
    MULTIPLY        reduce using rule 72 (np_goSUB -> .)
    DIVIDE          reduce using rule 72 (np_goSUB -> .)
    LOGIC           reduce using rule 72 (np_goSUB -> .)
    RELOP           reduce using rule 72 (np_goSUB -> .)
    COMA            reduce using rule 72 (np_goSUB -> .)
    CPAREN          reduce using rule 72 (np_goSUB -> .)
    CCORCH          reduce using rule 72 (np_goSUB -> .)
    HAZ             reduce using rule 72 (np_goSUB -> .)

    np_goSUB                       shift and go to state 302

state 287

    (69) paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo . np_resolverParam
    (70) paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo . np_resolverParam COMA paramsLlamada2
    (71) np_resolverParam -> .

    COMA            reduce using rule 71 (np_resolverParam -> .)
    CPAREN          reduce using rule 71 (np_resolverParam -> .)

    np_resolverParam               shift and go to state 303

state 288

    (94) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .

    ASSIGN          reduce using rule 94 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    OPMATRIZ        reduce using rule 94 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    PLUS            reduce using rule 94 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    MINUS           reduce using rule 94 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    MULTIPLY        reduce using rule 94 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    DIVIDE          reduce using rule 94 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    LOGIC           reduce using rule 94 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    RELOP           reduce using rule 94 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    SEMICOLON       reduce using rule 94 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    COMA            reduce using rule 94 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    CPAREN          reduce using rule 94 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    CCORCH          reduce using rule 94 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    HAZ             reduce using rule 94 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)


state 289

    (95) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA . np_agregarFondo expresion np_quitarFondo CCORCH
    (122) np_agregarFondo -> .

    ENTERO          reduce using rule 122 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 122 (np_agregarFondo -> .)
    OPAREN          reduce using rule 122 (np_agregarFondo -> .)
    QUOT            reduce using rule 122 (np_agregarFondo -> .)
    ID              reduce using rule 122 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 304

state 290

    (106) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ . OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina

    OBRACKET        shift and go to state 305


state 291

    (76) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo . SEMICOLON

    SEMICOLON       shift and go to state 306


state 292

    (56) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES . OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES . OBRACKET estatutos CBRACKET np_terminaIf

    OBRACKET        shift and go to state 307


state 293

    (98) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion . CCORCH
    (77) expresion -> expresion . LOGIC np_insertarOperador expresion
    (78) expresion -> expresion . RELOP np_insertarOperador expresion

    CCORCH          shift and go to state 308
    LOGIC           shift and go to state 162
    RELOP           shift and go to state 163


state 294

    (20) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .

    FUNCION         reduce using rule 20 (declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .)
    PRINCIPAL       reduce using rule 20 (declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .)


state 295

    (33) declaracionFuncionParametros2 -> COMA INT np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (122) np_agregarFondo -> .

    ID              reduce using rule 122 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 309

state 296

    (34) declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (122) np_agregarFondo -> .

    ID              reduce using rule 122 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 310

state 297

    (35) declaracionFuncionParametros2 -> COMA CHAR np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (122) np_agregarFondo -> .

    ID              reduce using rule 122 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 311

state 298

    (21) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .

    FUNCION         reduce using rule 21 (declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .)
    PRINCIPAL       reduce using rule 21 (declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .)


state 299

    (22) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .

    FUNCION         reduce using rule 22 (declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .)
    PRINCIPAL       reduce using rule 22 (declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .)


state 300

    (23) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .

    FUNCION         reduce using rule 23 (declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .)
    PRINCIPAL       reduce using rule 23 (declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .)


state 301

    (102) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso . HAZ OBRACKET estatutos CBRACKET np_terminaFor

    HAZ             shift and go to state 312


state 302

    (62) llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB .

    SEMICOLON       reduce using rule 62 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB .)
    OPMATRIZ        reduce using rule 62 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB .)
    PLUS            reduce using rule 62 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB .)
    MINUS           reduce using rule 62 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB .)
    MULTIPLY        reduce using rule 62 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB .)
    DIVIDE          reduce using rule 62 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB .)
    LOGIC           reduce using rule 62 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB .)
    RELOP           reduce using rule 62 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB .)
    COMA            reduce using rule 62 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB .)
    CPAREN          reduce using rule 62 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB .)
    CCORCH          reduce using rule 62 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB .)
    HAZ             reduce using rule 62 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB .)


state 303

    (69) paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo np_resolverParam .
    (70) paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo np_resolverParam . COMA paramsLlamada2

    CPAREN          reduce using rule 69 (paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo np_resolverParam .)
    COMA            shift and go to state 313


state 304

    (95) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo . expresion np_quitarFondo CCORCH
    (77) expresion -> . expresion LOGIC np_insertarOperador expresion
    (78) expresion -> . expresion RELOP np_insertarOperador expresion
    (79) expresion -> . termino
    (80) termino -> . termino PLUS np_insertarOperador termino
    (81) termino -> . termino MINUS np_insertarOperador termino
    (82) termino -> . termino MULTIPLY np_insertarOperador termino
    (83) termino -> . termino DIVIDE np_insertarOperador termino
    (85) termino -> . termino1 OPMATRIZ np_insertarOperador
    (86) termino -> . termino1
    (87) termino1 -> . posibleID
    (88) termino1 -> . ENTERO np_addConstanteINT np_enviarACuadruplosC
    (89) termino1 -> . FLOTANTE np_addConstanteFLOAT np_enviarACuadruplosC
    (90) termino1 -> . llamadaFuncion
    (91) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (92) termino1 -> . QUOT CARACTER QUOT
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB

    ENTERO          shift and go to state 129
    FLOTANTE        shift and go to state 130
    OPAREN          shift and go to state 132
    QUOT            shift and go to state 133
    ID              shift and go to state 134

    expresion                      shift and go to state 314
    termino                        shift and go to state 126
    termino1                       shift and go to state 127
    posibleID                      shift and go to state 128
    llamadaFuncion                 shift and go to state 131

state 305

    (106) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET . npWhileInicia estatutos CBRACKET npWhileTermina
    (108) npWhileInicia -> .

    REGRESA         reduce using rule 108 (npWhileInicia -> .)
    VAR             reduce using rule 108 (npWhileInicia -> .)
    DESDE           reduce using rule 108 (npWhileInicia -> .)
    MIENTRAS        reduce using rule 108 (npWhileInicia -> .)
    LEE             reduce using rule 108 (npWhileInicia -> .)
    ESCRIBE         reduce using rule 108 (npWhileInicia -> .)
    SI              reduce using rule 108 (npWhileInicia -> .)
    ID              reduce using rule 108 (npWhileInicia -> .)
    CBRACKET        reduce using rule 108 (npWhileInicia -> .)

    npWhileInicia                  shift and go to state 315

state 306

    (76) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .

    REGRESA         reduce using rule 76 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    VAR             reduce using rule 76 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    DESDE           reduce using rule 76 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    MIENTRAS        reduce using rule 76 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    LEE             reduce using rule 76 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    ESCRIBE         reduce using rule 76 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    SI              reduce using rule 76 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    ID              reduce using rule 76 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    CBRACKET        reduce using rule 76 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)


state 307

    (56) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET . estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET . estatutos CBRACKET np_terminaIf
    (39) estatutos -> . return estatutos
    (40) estatutos -> . empty
    (41) estatutos -> . declaracion estatutos
    (42) estatutos -> . estatutoRepeticionIncondicional estatutos
    (43) estatutos -> . estatutoRepeticionCondicional estatutos
    (44) estatutos -> . lectura estatutos
    (45) estatutos -> . asignacion estatutos
    (46) estatutos -> . escritura estatutos
    (47) estatutos -> . decision estatutos
    (48) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (110) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (111) return -> . REGRESA SEMICOLON np_returnVOID
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (102) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (106) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (73) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (76) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (49) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (56) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 68
    CBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 69
    MIENTRAS        shift and go to state 71
    LEE             shift and go to state 72
    ESCRIBE         shift and go to state 74
    SI              shift and go to state 75
    ID              shift and go to state 70

    estatutos                      shift and go to state 316
    return                         shift and go to state 58
    empty                          shift and go to state 59
    declaracion                    shift and go to state 60
    estatutoRepeticionIncondicional shift and go to state 61
    estatutoRepeticionCondicional  shift and go to state 62
    lectura                        shift and go to state 63
    asignacion                     shift and go to state 64
    escritura                      shift and go to state 65
    decision                       shift and go to state 66
    llamadaFuncion                 shift and go to state 67
    posibleID                      shift and go to state 73

state 308

    (98) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH .

    ASSIGN          reduce using rule 98 (posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH .)
    SEMICOLON       reduce using rule 98 (posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH .)
    COMA            reduce using rule 98 (posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH .)
    CPAREN          reduce using rule 98 (posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH .)


state 309

    (33) declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (96) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (97) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (98) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (99) np_updateCurrentDimension0 -> .
    (100) np_updateCurrentDimension1 -> .
    (101) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 99 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 99 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 99 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 100 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 101 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 317
    np_updateCurrentDimension0     shift and go to state 50
    np_updateCurrentDimension1     shift and go to state 51
    np_updateCurrentDimension2     shift and go to state 52

state 310

    (34) declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (96) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (97) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (98) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (99) np_updateCurrentDimension0 -> .
    (100) np_updateCurrentDimension1 -> .
    (101) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 99 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 99 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 99 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 100 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 101 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 318
    np_updateCurrentDimension0     shift and go to state 50
    np_updateCurrentDimension1     shift and go to state 51
    np_updateCurrentDimension2     shift and go to state 52

state 311

    (35) declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (96) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (97) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (98) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (99) np_updateCurrentDimension0 -> .
    (100) np_updateCurrentDimension1 -> .
    (101) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 99 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 99 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 99 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 100 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 101 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 319
    np_updateCurrentDimension0     shift and go to state 50
    np_updateCurrentDimension1     shift and go to state 51
    np_updateCurrentDimension2     shift and go to state 52

state 312

    (102) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ . OBRACKET estatutos CBRACKET np_terminaFor

    OBRACKET        shift and go to state 320


state 313

    (70) paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo np_resolverParam COMA . paramsLlamada2
    (69) paramsLlamada2 -> . np_agregarFondo expresion np_quitarFondo np_resolverParam
    (70) paramsLlamada2 -> . np_agregarFondo expresion np_quitarFondo np_resolverParam COMA paramsLlamada2
    (122) np_agregarFondo -> .

    ENTERO          reduce using rule 122 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 122 (np_agregarFondo -> .)
    OPAREN          reduce using rule 122 (np_agregarFondo -> .)
    QUOT            reduce using rule 122 (np_agregarFondo -> .)
    ID              reduce using rule 122 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 247
    paramsLlamada2                 shift and go to state 321

state 314

    (95) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion . np_quitarFondo CCORCH
    (77) expresion -> expresion . LOGIC np_insertarOperador expresion
    (78) expresion -> expresion . RELOP np_insertarOperador expresion
    (123) np_quitarFondo -> .

    LOGIC           shift and go to state 162
    RELOP           shift and go to state 163
    CCORCH          reduce using rule 123 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 322

state 315

    (106) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia . estatutos CBRACKET npWhileTermina
    (39) estatutos -> . return estatutos
    (40) estatutos -> . empty
    (41) estatutos -> . declaracion estatutos
    (42) estatutos -> . estatutoRepeticionIncondicional estatutos
    (43) estatutos -> . estatutoRepeticionCondicional estatutos
    (44) estatutos -> . lectura estatutos
    (45) estatutos -> . asignacion estatutos
    (46) estatutos -> . escritura estatutos
    (47) estatutos -> . decision estatutos
    (48) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (110) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (111) return -> . REGRESA SEMICOLON np_returnVOID
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (102) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (106) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (73) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (76) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (49) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (56) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 68
    CBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 69
    MIENTRAS        shift and go to state 71
    LEE             shift and go to state 72
    ESCRIBE         shift and go to state 74
    SI              shift and go to state 75
    ID              shift and go to state 70

    estatutos                      shift and go to state 323
    return                         shift and go to state 58
    empty                          shift and go to state 59
    declaracion                    shift and go to state 60
    estatutoRepeticionIncondicional shift and go to state 61
    estatutoRepeticionCondicional  shift and go to state 62
    lectura                        shift and go to state 63
    asignacion                     shift and go to state 64
    escritura                      shift and go to state 65
    decision                       shift and go to state 66
    llamadaFuncion                 shift and go to state 67
    posibleID                      shift and go to state 73

state 316

    (56) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos . CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos . CBRACKET np_terminaIf

    CBRACKET        shift and go to state 324


state 317

    (33) declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (123) np_quitarFondo -> .

    COMA            reduce using rule 123 (np_quitarFondo -> .)
    CPAREN          reduce using rule 123 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 325

state 318

    (34) declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (123) np_quitarFondo -> .

    COMA            reduce using rule 123 (np_quitarFondo -> .)
    CPAREN          reduce using rule 123 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 326

state 319

    (35) declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (123) np_quitarFondo -> .

    COMA            reduce using rule 123 (np_quitarFondo -> .)
    CPAREN          reduce using rule 123 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 327

state 320

    (102) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET . estatutos CBRACKET np_terminaFor
    (39) estatutos -> . return estatutos
    (40) estatutos -> . empty
    (41) estatutos -> . declaracion estatutos
    (42) estatutos -> . estatutoRepeticionIncondicional estatutos
    (43) estatutos -> . estatutoRepeticionCondicional estatutos
    (44) estatutos -> . lectura estatutos
    (45) estatutos -> . asignacion estatutos
    (46) estatutos -> . escritura estatutos
    (47) estatutos -> . decision estatutos
    (48) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (110) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (111) return -> . REGRESA SEMICOLON np_returnVOID
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (102) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (106) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (73) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (76) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (49) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (56) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 68
    CBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 69
    MIENTRAS        shift and go to state 71
    LEE             shift and go to state 72
    ESCRIBE         shift and go to state 74
    SI              shift and go to state 75
    ID              shift and go to state 70

    estatutos                      shift and go to state 328
    return                         shift and go to state 58
    empty                          shift and go to state 59
    declaracion                    shift and go to state 60
    estatutoRepeticionIncondicional shift and go to state 61
    estatutoRepeticionCondicional  shift and go to state 62
    lectura                        shift and go to state 63
    asignacion                     shift and go to state 64
    escritura                      shift and go to state 65
    decision                       shift and go to state 66
    llamadaFuncion                 shift and go to state 67
    posibleID                      shift and go to state 73

state 321

    (70) paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo np_resolverParam COMA paramsLlamada2 .

    CPAREN          reduce using rule 70 (paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo np_resolverParam COMA paramsLlamada2 .)


state 322

    (95) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo . CCORCH

    CCORCH          shift and go to state 329


state 323

    (106) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos . CBRACKET npWhileTermina

    CBRACKET        shift and go to state 330


state 324

    (56) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET . SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET . np_terminaIf
    (59) np_terminaIf -> .

    SINO            shift and go to state 331
    REGRESA         reduce using rule 59 (np_terminaIf -> .)
    VAR             reduce using rule 59 (np_terminaIf -> .)
    DESDE           reduce using rule 59 (np_terminaIf -> .)
    MIENTRAS        reduce using rule 59 (np_terminaIf -> .)
    LEE             reduce using rule 59 (np_terminaIf -> .)
    ESCRIBE         reduce using rule 59 (np_terminaIf -> .)
    SI              reduce using rule 59 (np_terminaIf -> .)
    ID              reduce using rule 59 (np_terminaIf -> .)
    CBRACKET        reduce using rule 59 (np_terminaIf -> .)

    np_terminaIf                   shift and go to state 332

state 325

    (33) declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (32) declaracionFuncionParametros2 -> . empty
    (33) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (34) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (35) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (125) empty -> .

    COMA            shift and go to state 262
    CPAREN          reduce using rule 125 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 333
    empty                          shift and go to state 261

state 326

    (34) declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (32) declaracionFuncionParametros2 -> . empty
    (33) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (34) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (35) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (125) empty -> .

    COMA            shift and go to state 262
    CPAREN          reduce using rule 125 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 334
    empty                          shift and go to state 261

state 327

    (35) declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (32) declaracionFuncionParametros2 -> . empty
    (33) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (34) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (35) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (125) empty -> .

    COMA            shift and go to state 262
    CPAREN          reduce using rule 125 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 335
    empty                          shift and go to state 261

state 328

    (102) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos . CBRACKET np_terminaFor

    CBRACKET        shift and go to state 336


state 329

    (95) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .

    ASSIGN          reduce using rule 95 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    OPMATRIZ        reduce using rule 95 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    PLUS            reduce using rule 95 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    MINUS           reduce using rule 95 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    MULTIPLY        reduce using rule 95 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    DIVIDE          reduce using rule 95 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    LOGIC           reduce using rule 95 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    RELOP           reduce using rule 95 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    SEMICOLON       reduce using rule 95 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    COMA            reduce using rule 95 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    CPAREN          reduce using rule 95 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    CCORCH          reduce using rule 95 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    HAZ             reduce using rule 95 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)


state 330

    (106) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET . npWhileTermina
    (109) npWhileTermina -> .

    REGRESA         reduce using rule 109 (npWhileTermina -> .)
    VAR             reduce using rule 109 (npWhileTermina -> .)
    DESDE           reduce using rule 109 (npWhileTermina -> .)
    MIENTRAS        reduce using rule 109 (npWhileTermina -> .)
    LEE             reduce using rule 109 (npWhileTermina -> .)
    ESCRIBE         reduce using rule 109 (npWhileTermina -> .)
    SI              reduce using rule 109 (npWhileTermina -> .)
    ID              reduce using rule 109 (npWhileTermina -> .)
    CBRACKET        reduce using rule 109 (npWhileTermina -> .)

    npWhileTermina                 shift and go to state 337

state 331

    (56) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO . OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET

    OBRACKET        shift and go to state 338


state 332

    (57) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .

    REGRESA         reduce using rule 57 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    VAR             reduce using rule 57 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    DESDE           reduce using rule 57 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    MIENTRAS        reduce using rule 57 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    LEE             reduce using rule 57 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    ESCRIBE         reduce using rule 57 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    SI              reduce using rule 57 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    ID              reduce using rule 57 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    CBRACKET        reduce using rule 57 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)


state 333

    (33) declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 33 (declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 334

    (34) declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 34 (declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 335

    (35) declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 35 (declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 336

    (102) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET . np_terminaFor
    (105) np_terminaFor -> .

    REGRESA         reduce using rule 105 (np_terminaFor -> .)
    VAR             reduce using rule 105 (np_terminaFor -> .)
    DESDE           reduce using rule 105 (np_terminaFor -> .)
    MIENTRAS        reduce using rule 105 (np_terminaFor -> .)
    LEE             reduce using rule 105 (np_terminaFor -> .)
    ESCRIBE         reduce using rule 105 (np_terminaFor -> .)
    SI              reduce using rule 105 (np_terminaFor -> .)
    ID              reduce using rule 105 (np_terminaFor -> .)
    CBRACKET        reduce using rule 105 (np_terminaFor -> .)

    np_terminaFor                  shift and go to state 339

state 337

    (106) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .

    REGRESA         reduce using rule 106 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    VAR             reduce using rule 106 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    DESDE           reduce using rule 106 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    MIENTRAS        reduce using rule 106 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    LEE             reduce using rule 106 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    ESCRIBE         reduce using rule 106 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    SI              reduce using rule 106 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    ID              reduce using rule 106 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    CBRACKET        reduce using rule 106 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)


state 338

    (56) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET . np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (60) np_iniciaElse -> .

    REGRESA         reduce using rule 60 (np_iniciaElse -> .)
    VAR             reduce using rule 60 (np_iniciaElse -> .)
    DESDE           reduce using rule 60 (np_iniciaElse -> .)
    MIENTRAS        reduce using rule 60 (np_iniciaElse -> .)
    LEE             reduce using rule 60 (np_iniciaElse -> .)
    ESCRIBE         reduce using rule 60 (np_iniciaElse -> .)
    SI              reduce using rule 60 (np_iniciaElse -> .)
    ID              reduce using rule 60 (np_iniciaElse -> .)
    CBRACKET        reduce using rule 60 (np_iniciaElse -> .)

    np_iniciaElse                  shift and go to state 340

state 339

    (102) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor .

    REGRESA         reduce using rule 102 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor .)
    VAR             reduce using rule 102 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor .)
    DESDE           reduce using rule 102 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor .)
    MIENTRAS        reduce using rule 102 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor .)
    LEE             reduce using rule 102 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor .)
    ESCRIBE         reduce using rule 102 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor .)
    SI              reduce using rule 102 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor .)
    ID              reduce using rule 102 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor .)
    CBRACKET        reduce using rule 102 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor .)


state 340

    (56) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse . np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (122) np_agregarFondo -> .

    REGRESA         reduce using rule 122 (np_agregarFondo -> .)
    VAR             reduce using rule 122 (np_agregarFondo -> .)
    DESDE           reduce using rule 122 (np_agregarFondo -> .)
    MIENTRAS        reduce using rule 122 (np_agregarFondo -> .)
    LEE             reduce using rule 122 (np_agregarFondo -> .)
    ESCRIBE         reduce using rule 122 (np_agregarFondo -> .)
    SI              reduce using rule 122 (np_agregarFondo -> .)
    ID              reduce using rule 122 (np_agregarFondo -> .)
    CBRACKET        reduce using rule 122 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 341

state 341

    (56) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo . estatutos np_quitarFondo np_terminaElse CBRACKET
    (39) estatutos -> . return estatutos
    (40) estatutos -> . empty
    (41) estatutos -> . declaracion estatutos
    (42) estatutos -> . estatutoRepeticionIncondicional estatutos
    (43) estatutos -> . estatutoRepeticionCondicional estatutos
    (44) estatutos -> . lectura estatutos
    (45) estatutos -> . asignacion estatutos
    (46) estatutos -> . escritura estatutos
    (47) estatutos -> . decision estatutos
    (48) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (110) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (111) return -> . REGRESA SEMICOLON np_returnVOID
    (125) empty -> .
    (11) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (12) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (13) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (102) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA np_iniciaFor np_agregarFondo expresion np_quitarFondo np_forFalso HAZ OBRACKET estatutos CBRACKET np_terminaFor
    (106) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (73) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (76) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (49) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (56) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (57) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (62) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion np_agregarFondoParam OPAREN paramsLlamada1 CPAREN np_quitarFondoParam np_goSUB
    (93) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (94) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (95) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 68
    CBRACKET        reduce using rule 125 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 69
    MIENTRAS        shift and go to state 71
    LEE             shift and go to state 72
    ESCRIBE         shift and go to state 74
    SI              shift and go to state 75
    ID              shift and go to state 70

    estatutos                      shift and go to state 342
    return                         shift and go to state 58
    empty                          shift and go to state 59
    declaracion                    shift and go to state 60
    estatutoRepeticionIncondicional shift and go to state 61
    estatutoRepeticionCondicional  shift and go to state 62
    lectura                        shift and go to state 63
    asignacion                     shift and go to state 64
    escritura                      shift and go to state 65
    decision                       shift and go to state 66
    llamadaFuncion                 shift and go to state 67
    posibleID                      shift and go to state 73

state 342

    (56) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos . np_quitarFondo np_terminaElse CBRACKET
    (123) np_quitarFondo -> .

    CBRACKET        reduce using rule 123 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 343

state 343

    (56) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo . np_terminaElse CBRACKET
    (61) np_terminaElse -> .

    CBRACKET        reduce using rule 61 (np_terminaElse -> .)

    np_terminaElse                 shift and go to state 344

state 344

    (56) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse . CBRACKET

    CBRACKET        shift and go to state 345


state 345

    (56) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .

    REGRESA         reduce using rule 56 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    VAR             reduce using rule 56 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    DESDE           reduce using rule 56 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    MIENTRAS        reduce using rule 56 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    LEE             reduce using rule 56 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    ESCRIBE         reduce using rule 56 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    SI              reduce using rule 56 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    ID              reduce using rule 56 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    CBRACKET        reduce using rule 56 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LOGIC in state 236 resolved as shift
WARNING: shift/reduce conflict for RELOP in state 236 resolved as shift
WARNING: shift/reduce conflict for LOGIC in state 237 resolved as shift
WARNING: shift/reduce conflict for RELOP in state 237 resolved as shift
WARNING: reduce/reduce conflict in state 41 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 41
WARNING: reduce/reduce conflict in state 41 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 41
WARNING: reduce/reduce conflict in state 154 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 154
WARNING: reduce/reduce conflict in state 154 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 154
WARNING: reduce/reduce conflict in state 155 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 155
WARNING: reduce/reduce conflict in state 155 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 155
WARNING: reduce/reduce conflict in state 156 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 156
WARNING: reduce/reduce conflict in state 156 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 156
WARNING: reduce/reduce conflict in state 309 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 309
WARNING: reduce/reduce conflict in state 309 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 309
WARNING: reduce/reduce conflict in state 310 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 310
WARNING: reduce/reduce conflict in state 310 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 310
WARNING: reduce/reduce conflict in state 311 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 311
WARNING: reduce/reduce conflict in state 311 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 311
WARNING: Rule (np_updateCurrentDimension1 -> <empty>) is never reduced
WARNING: Rule (np_updateCurrentDimension2 -> <empty>) is never reduced
