Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMENTARIO
    IGNORE
    NEWLINE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMICOLON programa2
Rule 2     programa2 -> declaracion programa2
Rule 3     programa2 -> programa3
Rule 4     programa3 -> declaracionFuncion principal
Rule 5     principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos
Rule 6     declaracion -> VAR INT np_defineTipo COLON declaracion2
Rule 7     declaracion -> VAR FLOAT np_defineTipo COLON declaracion2
Rule 8     declaracion -> VAR CHAR np_defineTipo COLON declaracion2
Rule 9     np_defineTipo -> <empty>
Rule 10    declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3
Rule 11    declaracion3 -> np_quitarFondo SEMICOLON
Rule 12    declaracion3 -> np_quitarFondo COMA declaracion2
Rule 13    declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON
Rule 14    declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2
Rule 15    declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN np_termino declaracionFuncionVariables np_termino OBRACKET estatutos CBRACKET
Rule 16    declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
Rule 17    declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
Rule 18    declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
Rule 19    np_termino -> <empty>
Rule 20    declaracionFuncionParametros -> empty
Rule 21    declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 22    declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 23    declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 24    declaracionFuncionParametros2 -> empty
Rule 25    declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 26    declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 27    declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 28    declaracionFuncionVariables -> empty
Rule 29    declaracionFuncionVariables -> declaracion
Rule 30    np_declfunc -> <empty>
Rule 31    estatutos -> empty
Rule 32    estatutos -> return
Rule 33    estatutos -> declaracion estatutos
Rule 34    estatutos -> estatutoRepeticionIncondicional estatutos
Rule 35    estatutos -> estatutoRepeticionCondicional estatutos
Rule 36    estatutos -> lectura estatutos
Rule 37    estatutos -> asignacion estatutos
Rule 38    estatutos -> escritura estatutos
Rule 39    estatutos -> decision estatutos
Rule 40    estatutos -> llamadaFuncion SEMICOLON estatutos
Rule 41    escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
Rule 42    escritura2 -> empty
Rule 43    escritura2 -> posibleID escritura3
Rule 44    escritura2 -> STRING escritura3
Rule 45    escritura3 -> empty
Rule 46    escritura3 -> COMA expresion escritura3
Rule 47    escritura3 -> COMA STRING escritura3
Rule 48    decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
Rule 49    decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
Rule 50    np_iniciaIf -> <empty>
Rule 51    np_terminaIf -> <empty>
Rule 52    np_iniciaElse -> <empty>
Rule 53    np_terminaElse -> <empty>
Rule 54    llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN
Rule 55    primerParametro -> expresion
Rule 56    primerParametro -> empty
Rule 57    extraParametros -> COMA expresion extraParametros
Rule 58    extraParametros -> empty
Rule 59    lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
Rule 60    lectura2 -> empty
Rule 61    lectura2 -> COMA posibleID lectura2
Rule 62    asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
Rule 63    expresion -> expresion LOGIC np_insertarOperador expresion
Rule 64    expresion -> expresion RELOP np_insertarOperador expresion
Rule 65    expresion -> termino
Rule 66    termino -> termino PLUS np_insertarOperador termino
Rule 67    termino -> termino MINUS np_insertarOperador termino
Rule 68    termino -> termino MULTIPLY np_insertarOperador termino
Rule 69    termino -> termino DIVIDE np_insertarOperador termino
Rule 70    np_insertarOperador -> <empty>
Rule 71    termino -> termino1 OPMATRIZ np_insertarOperador
Rule 72    termino -> termino1
Rule 73    termino1 -> posibleID
Rule 74    termino1 -> ENTERO np_contieneID_Constante_Entero
Rule 75    termino1 -> FLOTANTE np_contieneID_Constante_Flotante
Rule 76    termino1 -> llamadaFuncion
Rule 77    termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
Rule 78    termino1 -> QUOT CARACTER QUOT
Rule 79    posibleID -> ID np_contieneID np_enviarACuadruplos
Rule 80    posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
Rule 81    posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
Rule 82    posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
Rule 83    posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
Rule 84    posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
Rule 85    np_updateCurrentDimension0 -> <empty>
Rule 86    np_updateCurrentDimension1 -> <empty>
Rule 87    np_updateCurrentDimension2 -> <empty>
Rule 88    estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
Rule 89    estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
Rule 90    return -> REGRESA expresion SEMICOLON
Rule 91    np_contieneID -> <empty>
Rule 92    np_contieneID_Constante_Entero -> <empty>
Rule 93    np_contieneID_Constante_Flotante -> <empty>
Rule 94    np_addVariableParametro -> <empty>
Rule 95    np_addVariable -> <empty>
Rule 96    np_enviarACuadruplos -> <empty>
Rule 97    np_actualizarDimensiones -> <empty>
Rule 98    np_agregarFondo -> <empty>
Rule 99    np_quitarFondo -> <empty>
Rule 100   np_printCuadruplos -> <empty>
Rule 101   empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 13 14 62
CARACTER             : 78
CBRACKET             : 5 15 16 17 18 48 48 49 88 89
CCORCH               : 80 81 83 84
CHAR                 : 8 18 22 27
COLON                : 6 7 8
COMA                 : 12 14 25 26 27 46 47 57 61 81 84
COMENTARIO           : 
CPAREN               : 5 15 16 17 18 41 48 49 54 59 77 89
DESDE                : 88
DIVIDE               : 69
ENTERO               : 74
ENTONCES             : 48 49
ESCRIBE              : 41
FLOAT                : 7 17 23 26
FLOTANTE             : 75
FUNCION              : 15 16 17 18
HASTA                : 88
HAZ                  : 88 89
ID                   : 1 15 16 17 18 54 79 80 81 82 83 84 88
IGNORE               : 
INT                  : 6 16 21 25
LEE                  : 59
LOGIC                : 63
MIENTRAS             : 89
MINUS                : 67
MULTIPLY             : 68
NEWLINE              : 
OBRACKET             : 5 15 16 17 18 48 48 49 88 89
OCORCH               : 80 81 83 84
OPAREN               : 5 15 16 17 18 41 48 49 54 59 77 89
OPMATRIZ             : 71
PLUS                 : 66
PRINCIPAL            : 5
PROGRAMA             : 1
QUOT                 : 78 78
REGRESA              : 90
RELOP                : 64
SEMICOLON            : 1 11 13 40 41 59 62 90
SI                   : 48 49
SINO                 : 48
STRING               : 44 47
VAR                  : 6 7 8
VOID                 : 15
error                : 

Nonterminals, with rules where they appear

asignacion           : 37
decision             : 39
declaracion          : 2 29 33
declaracion2         : 6 7 8 12 14
declaracion3         : 10
declaracionFuncion   : 4
declaracionFuncionParametros : 15 16 17 18
declaracionFuncionParametros2 : 21 22 23 25 26 27
declaracionFuncionVariables : 15 16 17 18
empty                : 20 24 28 31 42 45 56 58 60
escritura            : 38
escritura2           : 41
escritura3           : 43 44 46 47
estatutoRepeticionCondicional : 35
estatutoRepeticionIncondicional : 34
estatutos            : 5 15 16 17 18 33 34 35 36 37 38 39 40 48 48 49 88 89
expresion            : 13 14 46 48 49 55 57 62 63 63 64 64 77 80 81 81 83 84 84 88 89 90
extraParametros      : 54 57
lectura              : 36
lectura2             : 59 61
llamadaFuncion       : 40 76
np_actualizarDimensiones : 82 83 84
np_addVariable       : 82 83 84
np_addVariableParametro : 
np_agregarFondo      : 10 21 22 23 25 26 27 48 48 49 62 62 80 81 81
np_contieneID        : 79 80 81 88
np_contieneID_Constante_Entero : 74
np_contieneID_Constante_Flotante : 75
np_declfunc          : 15 16 17 18
np_defineTipo        : 6 7 8 21 22 23 25 26 27
np_enviarACuadruplos : 79 80 81 82 83 84
np_iniciaElse        : 48
np_iniciaIf          : 48 49
np_insertarOperador  : 13 14 62 63 64 66 67 68 69 71 77 77
np_printCuadruplos   : 5
np_quitarFondo       : 11 12 13 14 21 22 23 25 26 27 48 48 49 62 62 80 81 81
np_terminaElse       : 48
np_terminaIf         : 49
np_termino           : 15 15
np_updateCurrentDimension0 : 82
np_updateCurrentDimension1 : 83
np_updateCurrentDimension2 : 84
posibleID            : 43 59 61 62 73
posibleIDDeclaracion : 10 21 22 23 25 26 27
primerParametro      : 54
principal            : 4
programa             : 0
programa2            : 1 2
programa3            : 3
return               : 32
termino              : 65 66 66 67 67 68 68 69 69
termino1             : 71 72

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMICOLON programa2

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMICOLON programa2

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMICOLON programa2

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMICOLON . programa2
    (2) programa2 -> . declaracion programa2
    (3) programa2 -> . programa3
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (4) programa3 -> . declaracionFuncion principal
    (15) declaracionFuncion -> . FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN np_termino declaracionFuncionVariables np_termino OBRACKET estatutos CBRACKET
    (16) declaracionFuncion -> . FUNCION INT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (17) declaracionFuncion -> . FUNCION FLOAT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (18) declaracionFuncion -> . FUNCION CHAR ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    VAR             shift and go to state 8
    FUNCION         shift and go to state 10

    programa2                      shift and go to state 5
    declaracion                    shift and go to state 6
    programa3                      shift and go to state 7
    declaracionFuncion             shift and go to state 9

state 5

    (1) programa -> PROGRAMA ID SEMICOLON programa2 .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMICOLON programa2 .)


state 6

    (2) programa2 -> declaracion . programa2
    (2) programa2 -> . declaracion programa2
    (3) programa2 -> . programa3
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (4) programa3 -> . declaracionFuncion principal
    (15) declaracionFuncion -> . FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN np_termino declaracionFuncionVariables np_termino OBRACKET estatutos CBRACKET
    (16) declaracionFuncion -> . FUNCION INT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (17) declaracionFuncion -> . FUNCION FLOAT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (18) declaracionFuncion -> . FUNCION CHAR ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    VAR             shift and go to state 8
    FUNCION         shift and go to state 10

    declaracion                    shift and go to state 6
    programa2                      shift and go to state 11
    programa3                      shift and go to state 7
    declaracionFuncion             shift and go to state 9

state 7

    (3) programa2 -> programa3 .

    $end            reduce using rule 3 (programa2 -> programa3 .)


state 8

    (6) declaracion -> VAR . INT np_defineTipo COLON declaracion2
    (7) declaracion -> VAR . FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> VAR . CHAR np_defineTipo COLON declaracion2

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14


state 9

    (4) programa3 -> declaracionFuncion . principal
    (5) principal -> . PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos

    PRINCIPAL       shift and go to state 16

    principal                      shift and go to state 15

state 10

    (15) declaracionFuncion -> FUNCION . VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN np_termino declaracionFuncionVariables np_termino OBRACKET estatutos CBRACKET
    (16) declaracionFuncion -> FUNCION . INT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (17) declaracionFuncion -> FUNCION . FLOAT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (18) declaracionFuncion -> FUNCION . CHAR ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    VOID            shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20


state 11

    (2) programa2 -> declaracion programa2 .

    $end            reduce using rule 2 (programa2 -> declaracion programa2 .)


state 12

    (6) declaracion -> VAR INT . np_defineTipo COLON declaracion2
    (9) np_defineTipo -> .

    COLON           reduce using rule 9 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 21

state 13

    (7) declaracion -> VAR FLOAT . np_defineTipo COLON declaracion2
    (9) np_defineTipo -> .

    COLON           reduce using rule 9 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 22

state 14

    (8) declaracion -> VAR CHAR . np_defineTipo COLON declaracion2
    (9) np_defineTipo -> .

    COLON           reduce using rule 9 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 23

state 15

    (4) programa3 -> declaracionFuncion principal .

    $end            reduce using rule 4 (programa3 -> declaracionFuncion principal .)


state 16

    (5) principal -> PRINCIPAL . OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos

    OPAREN          shift and go to state 24


state 17

    (15) declaracionFuncion -> FUNCION VOID . ID np_declfunc OPAREN declaracionFuncionParametros CPAREN np_termino declaracionFuncionVariables np_termino OBRACKET estatutos CBRACKET

    ID              shift and go to state 25


state 18

    (16) declaracionFuncion -> FUNCION INT . ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    ID              shift and go to state 26


state 19

    (17) declaracionFuncion -> FUNCION FLOAT . ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    ID              shift and go to state 27


state 20

    (18) declaracionFuncion -> FUNCION CHAR . ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    ID              shift and go to state 28


state 21

    (6) declaracion -> VAR INT np_defineTipo . COLON declaracion2

    COLON           shift and go to state 29


state 22

    (7) declaracion -> VAR FLOAT np_defineTipo . COLON declaracion2

    COLON           shift and go to state 30


state 23

    (8) declaracion -> VAR CHAR np_defineTipo . COLON declaracion2

    COLON           shift and go to state 31


state 24

    (5) principal -> PRINCIPAL OPAREN . CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos

    CPAREN          shift and go to state 32


state 25

    (15) declaracionFuncion -> FUNCION VOID ID . np_declfunc OPAREN declaracionFuncionParametros CPAREN np_termino declaracionFuncionVariables np_termino OBRACKET estatutos CBRACKET
    (30) np_declfunc -> .

    OPAREN          reduce using rule 30 (np_declfunc -> .)

    np_declfunc                    shift and go to state 33

state 26

    (16) declaracionFuncion -> FUNCION INT ID . np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (30) np_declfunc -> .

    OPAREN          reduce using rule 30 (np_declfunc -> .)

    np_declfunc                    shift and go to state 34

state 27

    (17) declaracionFuncion -> FUNCION FLOAT ID . np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (30) np_declfunc -> .

    OPAREN          reduce using rule 30 (np_declfunc -> .)

    np_declfunc                    shift and go to state 35

state 28

    (18) declaracionFuncion -> FUNCION CHAR ID . np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (30) np_declfunc -> .

    OPAREN          reduce using rule 30 (np_declfunc -> .)

    np_declfunc                    shift and go to state 36

state 29

    (6) declaracion -> VAR INT np_defineTipo COLON . declaracion2
    (10) declaracion2 -> . np_agregarFondo posibleIDDeclaracion declaracion3
    (98) np_agregarFondo -> .

    ID              reduce using rule 98 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 37
    np_agregarFondo                shift and go to state 38

state 30

    (7) declaracion -> VAR FLOAT np_defineTipo COLON . declaracion2
    (10) declaracion2 -> . np_agregarFondo posibleIDDeclaracion declaracion3
    (98) np_agregarFondo -> .

    ID              reduce using rule 98 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 39
    np_agregarFondo                shift and go to state 38

state 31

    (8) declaracion -> VAR CHAR np_defineTipo COLON . declaracion2
    (10) declaracion2 -> . np_agregarFondo posibleIDDeclaracion declaracion3
    (98) np_agregarFondo -> .

    ID              reduce using rule 98 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 40
    np_agregarFondo                shift and go to state 38

state 32

    (5) principal -> PRINCIPAL OPAREN CPAREN . OBRACKET estatutos CBRACKET np_printCuadruplos

    OBRACKET        shift and go to state 41


state 33

    (15) declaracionFuncion -> FUNCION VOID ID np_declfunc . OPAREN declaracionFuncionParametros CPAREN np_termino declaracionFuncionVariables np_termino OBRACKET estatutos CBRACKET

    OPAREN          shift and go to state 42


state 34

    (16) declaracionFuncion -> FUNCION INT ID np_declfunc . OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    OPAREN          shift and go to state 43


state 35

    (17) declaracionFuncion -> FUNCION FLOAT ID np_declfunc . OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    OPAREN          shift and go to state 44


state 36

    (18) declaracionFuncion -> FUNCION CHAR ID np_declfunc . OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    OPAREN          shift and go to state 45


state 37

    (6) declaracion -> VAR INT np_defineTipo COLON declaracion2 .

    VAR             reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    FUNCION         reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    REGRESA         reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    DESDE           reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    MIENTRAS        reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    LEE             reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    ESCRIBE         reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    SI              reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    ID              reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    CBRACKET        reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    OBRACKET        reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)


state 38

    (10) declaracion2 -> np_agregarFondo . posibleIDDeclaracion declaracion3
    (82) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (83) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (84) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (85) np_updateCurrentDimension0 -> .
    (86) np_updateCurrentDimension1 -> .
    (87) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 85 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 85 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 85 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 86 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 87 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 46
    np_updateCurrentDimension0     shift and go to state 47
    np_updateCurrentDimension1     shift and go to state 48
    np_updateCurrentDimension2     shift and go to state 49

state 39

    (7) declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .

    VAR             reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    FUNCION         reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    REGRESA         reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    DESDE           reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    MIENTRAS        reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    LEE             reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    ESCRIBE         reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    SI              reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    ID              reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    CBRACKET        reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    OBRACKET        reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)


state 40

    (8) declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .

    VAR             reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    FUNCION         reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    REGRESA         reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    DESDE           reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    MIENTRAS        reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    LEE             reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    ESCRIBE         reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    SI              reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    ID              reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    CBRACKET        reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    OBRACKET        reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)


state 41

    (5) principal -> PRINCIPAL OPAREN CPAREN OBRACKET . estatutos CBRACKET np_printCuadruplos
    (31) estatutos -> . empty
    (32) estatutos -> . return
    (33) estatutos -> . declaracion estatutos
    (34) estatutos -> . estatutoRepeticionIncondicional estatutos
    (35) estatutos -> . estatutoRepeticionCondicional estatutos
    (36) estatutos -> . lectura estatutos
    (37) estatutos -> . asignacion estatutos
    (38) estatutos -> . escritura estatutos
    (39) estatutos -> . decision estatutos
    (40) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (59) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (62) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (41) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (48) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    CBRACKET        reduce using rule 101 (empty -> .)
    REGRESA         shift and go to state 61
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 50
    empty                          shift and go to state 51
    return                         shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 42

    (15) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN . declaracionFuncionParametros CPAREN np_termino declaracionFuncionVariables np_termino OBRACKET estatutos CBRACKET
    (20) declaracionFuncionParametros -> . empty
    (21) declaracionFuncionParametros -> . INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (22) declaracionFuncionParametros -> . CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (23) declaracionFuncionParametros -> . FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (101) empty -> .

    INT             shift and go to state 71
    CHAR            shift and go to state 72
    FLOAT           shift and go to state 73
    CPAREN          reduce using rule 101 (empty -> .)

    declaracionFuncionParametros   shift and go to state 69
    empty                          shift and go to state 70

state 43

    (16) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN . declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (20) declaracionFuncionParametros -> . empty
    (21) declaracionFuncionParametros -> . INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (22) declaracionFuncionParametros -> . CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (23) declaracionFuncionParametros -> . FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (101) empty -> .

    INT             shift and go to state 71
    CHAR            shift and go to state 72
    FLOAT           shift and go to state 73
    CPAREN          reduce using rule 101 (empty -> .)

    declaracionFuncionParametros   shift and go to state 74
    empty                          shift and go to state 70

state 44

    (17) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN . declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (20) declaracionFuncionParametros -> . empty
    (21) declaracionFuncionParametros -> . INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (22) declaracionFuncionParametros -> . CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (23) declaracionFuncionParametros -> . FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (101) empty -> .

    INT             shift and go to state 71
    CHAR            shift and go to state 72
    FLOAT           shift and go to state 73
    CPAREN          reduce using rule 101 (empty -> .)

    declaracionFuncionParametros   shift and go to state 75
    empty                          shift and go to state 70

state 45

    (18) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN . declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (20) declaracionFuncionParametros -> . empty
    (21) declaracionFuncionParametros -> . INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (22) declaracionFuncionParametros -> . CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (23) declaracionFuncionParametros -> . FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (101) empty -> .

    INT             shift and go to state 71
    CHAR            shift and go to state 72
    FLOAT           shift and go to state 73
    CPAREN          reduce using rule 101 (empty -> .)

    declaracionFuncionParametros   shift and go to state 76
    empty                          shift and go to state 70

state 46

    (10) declaracion2 -> np_agregarFondo posibleIDDeclaracion . declaracion3
    (11) declaracion3 -> . np_quitarFondo SEMICOLON
    (12) declaracion3 -> . np_quitarFondo COMA declaracion2
    (13) declaracion3 -> . ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON
    (14) declaracion3 -> . ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2
    (99) np_quitarFondo -> .

    ASSIGN          shift and go to state 79
    SEMICOLON       reduce using rule 99 (np_quitarFondo -> .)
    COMA            reduce using rule 99 (np_quitarFondo -> .)

    declaracion3                   shift and go to state 77
    np_quitarFondo                 shift and go to state 78

state 47

    (82) posibleIDDeclaracion -> np_updateCurrentDimension0 . ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones

    ID              shift and go to state 80


state 48

    (83) posibleIDDeclaracion -> np_updateCurrentDimension1 . ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH

    ID              shift and go to state 81


state 49

    (84) posibleIDDeclaracion -> np_updateCurrentDimension2 . ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH

    ID              shift and go to state 82


state 50

    (5) principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos . CBRACKET np_printCuadruplos

    CBRACKET        shift and go to state 83


state 51

    (31) estatutos -> empty .

    CBRACKET        reduce using rule 31 (estatutos -> empty .)


state 52

    (32) estatutos -> return .

    CBRACKET        reduce using rule 32 (estatutos -> return .)


state 53

    (33) estatutos -> declaracion . estatutos
    (31) estatutos -> . empty
    (32) estatutos -> . return
    (33) estatutos -> . declaracion estatutos
    (34) estatutos -> . estatutoRepeticionIncondicional estatutos
    (35) estatutos -> . estatutoRepeticionCondicional estatutos
    (36) estatutos -> . lectura estatutos
    (37) estatutos -> . asignacion estatutos
    (38) estatutos -> . escritura estatutos
    (39) estatutos -> . decision estatutos
    (40) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (59) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (62) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (41) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (48) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    CBRACKET        reduce using rule 101 (empty -> .)
    REGRESA         shift and go to state 61
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    declaracion                    shift and go to state 53
    estatutos                      shift and go to state 84
    empty                          shift and go to state 51
    return                         shift and go to state 52
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 54

    (34) estatutos -> estatutoRepeticionIncondicional . estatutos
    (31) estatutos -> . empty
    (32) estatutos -> . return
    (33) estatutos -> . declaracion estatutos
    (34) estatutos -> . estatutoRepeticionIncondicional estatutos
    (35) estatutos -> . estatutoRepeticionCondicional estatutos
    (36) estatutos -> . lectura estatutos
    (37) estatutos -> . asignacion estatutos
    (38) estatutos -> . escritura estatutos
    (39) estatutos -> . decision estatutos
    (40) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (59) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (62) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (41) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (48) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    CBRACKET        reduce using rule 101 (empty -> .)
    REGRESA         shift and go to state 61
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutoRepeticionIncondicional shift and go to state 54
    estatutos                      shift and go to state 85
    empty                          shift and go to state 51
    return                         shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 55

    (35) estatutos -> estatutoRepeticionCondicional . estatutos
    (31) estatutos -> . empty
    (32) estatutos -> . return
    (33) estatutos -> . declaracion estatutos
    (34) estatutos -> . estatutoRepeticionIncondicional estatutos
    (35) estatutos -> . estatutoRepeticionCondicional estatutos
    (36) estatutos -> . lectura estatutos
    (37) estatutos -> . asignacion estatutos
    (38) estatutos -> . escritura estatutos
    (39) estatutos -> . decision estatutos
    (40) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (59) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (62) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (41) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (48) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    CBRACKET        reduce using rule 101 (empty -> .)
    REGRESA         shift and go to state 61
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutoRepeticionCondicional  shift and go to state 55
    estatutos                      shift and go to state 86
    empty                          shift and go to state 51
    return                         shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 56

    (36) estatutos -> lectura . estatutos
    (31) estatutos -> . empty
    (32) estatutos -> . return
    (33) estatutos -> . declaracion estatutos
    (34) estatutos -> . estatutoRepeticionIncondicional estatutos
    (35) estatutos -> . estatutoRepeticionCondicional estatutos
    (36) estatutos -> . lectura estatutos
    (37) estatutos -> . asignacion estatutos
    (38) estatutos -> . escritura estatutos
    (39) estatutos -> . decision estatutos
    (40) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (59) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (62) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (41) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (48) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    CBRACKET        reduce using rule 101 (empty -> .)
    REGRESA         shift and go to state 61
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    lectura                        shift and go to state 56
    estatutos                      shift and go to state 87
    empty                          shift and go to state 51
    return                         shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 57

    (37) estatutos -> asignacion . estatutos
    (31) estatutos -> . empty
    (32) estatutos -> . return
    (33) estatutos -> . declaracion estatutos
    (34) estatutos -> . estatutoRepeticionIncondicional estatutos
    (35) estatutos -> . estatutoRepeticionCondicional estatutos
    (36) estatutos -> . lectura estatutos
    (37) estatutos -> . asignacion estatutos
    (38) estatutos -> . escritura estatutos
    (39) estatutos -> . decision estatutos
    (40) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (59) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (62) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (41) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (48) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    CBRACKET        reduce using rule 101 (empty -> .)
    REGRESA         shift and go to state 61
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    asignacion                     shift and go to state 57
    estatutos                      shift and go to state 88
    empty                          shift and go to state 51
    return                         shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 58

    (38) estatutos -> escritura . estatutos
    (31) estatutos -> . empty
    (32) estatutos -> . return
    (33) estatutos -> . declaracion estatutos
    (34) estatutos -> . estatutoRepeticionIncondicional estatutos
    (35) estatutos -> . estatutoRepeticionCondicional estatutos
    (36) estatutos -> . lectura estatutos
    (37) estatutos -> . asignacion estatutos
    (38) estatutos -> . escritura estatutos
    (39) estatutos -> . decision estatutos
    (40) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (59) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (62) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (41) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (48) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    CBRACKET        reduce using rule 101 (empty -> .)
    REGRESA         shift and go to state 61
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    escritura                      shift and go to state 58
    estatutos                      shift and go to state 89
    empty                          shift and go to state 51
    return                         shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 59

    (39) estatutos -> decision . estatutos
    (31) estatutos -> . empty
    (32) estatutos -> . return
    (33) estatutos -> . declaracion estatutos
    (34) estatutos -> . estatutoRepeticionIncondicional estatutos
    (35) estatutos -> . estatutoRepeticionCondicional estatutos
    (36) estatutos -> . lectura estatutos
    (37) estatutos -> . asignacion estatutos
    (38) estatutos -> . escritura estatutos
    (39) estatutos -> . decision estatutos
    (40) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (59) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (62) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (41) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (48) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    CBRACKET        reduce using rule 101 (empty -> .)
    REGRESA         shift and go to state 61
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    decision                       shift and go to state 59
    estatutos                      shift and go to state 90
    empty                          shift and go to state 51
    return                         shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 60

    (40) estatutos -> llamadaFuncion . SEMICOLON estatutos

    SEMICOLON       shift and go to state 91


state 61

    (90) return -> REGRESA . expresion SEMICOLON
    (63) expresion -> . expresion LOGIC np_insertarOperador expresion
    (64) expresion -> . expresion RELOP np_insertarOperador expresion
    (65) expresion -> . termino
    (66) termino -> . termino PLUS np_insertarOperador termino
    (67) termino -> . termino MINUS np_insertarOperador termino
    (68) termino -> . termino MULTIPLY np_insertarOperador termino
    (69) termino -> . termino DIVIDE np_insertarOperador termino
    (71) termino -> . termino1 OPMATRIZ np_insertarOperador
    (72) termino -> . termino1
    (73) termino1 -> . posibleID
    (74) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (75) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (76) termino1 -> . llamadaFuncion
    (77) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (78) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    OPAREN          shift and go to state 99
    QUOT            shift and go to state 100
    ID              shift and go to state 101

    expresion                      shift and go to state 92
    termino                        shift and go to state 93
    termino1                       shift and go to state 94
    posibleID                      shift and go to state 95
    llamadaFuncion                 shift and go to state 98

state 62

    (88) estatutoRepeticionIncondicional -> DESDE . ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET

    ID              shift and go to state 102


state 63

    (54) llamadaFuncion -> ID . OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> ID . np_contieneID np_enviarACuadruplos
    (80) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (91) np_contieneID -> .

    OPAREN          shift and go to state 103
    OCORCH          reduce using rule 91 (np_contieneID -> .)
    ASSIGN          reduce using rule 91 (np_contieneID -> .)

    np_contieneID                  shift and go to state 104

state 64

    (89) estatutoRepeticionCondicional -> MIENTRAS . OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET

    OPAREN          shift and go to state 105


state 65

    (59) lectura -> LEE . OPAREN posibleID lectura2 CPAREN SEMICOLON

    OPAREN          shift and go to state 106


state 66

    (62) asignacion -> posibleID . np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (98) np_agregarFondo -> .

    ASSIGN          reduce using rule 98 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 107

state 67

    (41) escritura -> ESCRIBE . OPAREN escritura2 CPAREN SEMICOLON

    OPAREN          shift and go to state 108


state 68

    (48) decision -> SI . OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> SI . OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf

    OPAREN          shift and go to state 109


state 69

    (15) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros . CPAREN np_termino declaracionFuncionVariables np_termino OBRACKET estatutos CBRACKET

    CPAREN          shift and go to state 110


state 70

    (20) declaracionFuncionParametros -> empty .

    CPAREN          reduce using rule 20 (declaracionFuncionParametros -> empty .)


state 71

    (21) declaracionFuncionParametros -> INT . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (9) np_defineTipo -> .

    ID              reduce using rule 9 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 111

state 72

    (22) declaracionFuncionParametros -> CHAR . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (9) np_defineTipo -> .

    ID              reduce using rule 9 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 112

state 73

    (23) declaracionFuncionParametros -> FLOAT . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (9) np_defineTipo -> .

    ID              reduce using rule 9 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 113

state 74

    (16) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN declaracionFuncionParametros . CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    CPAREN          shift and go to state 114


state 75

    (17) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN declaracionFuncionParametros . CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    CPAREN          shift and go to state 115


state 76

    (18) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN declaracionFuncionParametros . CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    CPAREN          shift and go to state 116


state 77

    (10) declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .

    VAR             reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    FUNCION         reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    REGRESA         reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    DESDE           reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    MIENTRAS        reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    LEE             reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    ESCRIBE         reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    SI              reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    ID              reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    CBRACKET        reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    OBRACKET        reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)


state 78

    (11) declaracion3 -> np_quitarFondo . SEMICOLON
    (12) declaracion3 -> np_quitarFondo . COMA declaracion2

    SEMICOLON       shift and go to state 117
    COMA            shift and go to state 118


state 79

    (13) declaracion3 -> ASSIGN . np_insertarOperador expresion np_quitarFondo SEMICOLON
    (14) declaracion3 -> ASSIGN . np_insertarOperador expresion np_quitarFondo COMA declaracion2
    (70) np_insertarOperador -> .

    ENTERO          reduce using rule 70 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 70 (np_insertarOperador -> .)
    OPAREN          reduce using rule 70 (np_insertarOperador -> .)
    QUOT            reduce using rule 70 (np_insertarOperador -> .)
    ID              reduce using rule 70 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 119

state 80

    (82) posibleIDDeclaracion -> np_updateCurrentDimension0 ID . np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (95) np_addVariable -> .

    ASSIGN          reduce using rule 95 (np_addVariable -> .)
    SEMICOLON       reduce using rule 95 (np_addVariable -> .)
    COMA            reduce using rule 95 (np_addVariable -> .)
    CPAREN          reduce using rule 95 (np_addVariable -> .)

    np_addVariable                 shift and go to state 120

state 81

    (83) posibleIDDeclaracion -> np_updateCurrentDimension1 ID . np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (95) np_addVariable -> .

    OCORCH          reduce using rule 95 (np_addVariable -> .)

    np_addVariable                 shift and go to state 121

state 82

    (84) posibleIDDeclaracion -> np_updateCurrentDimension2 ID . np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (95) np_addVariable -> .

    OCORCH          reduce using rule 95 (np_addVariable -> .)

    np_addVariable                 shift and go to state 122

state 83

    (5) principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET . np_printCuadruplos
    (100) np_printCuadruplos -> .

    $end            reduce using rule 100 (np_printCuadruplos -> .)

    np_printCuadruplos             shift and go to state 123

state 84

    (33) estatutos -> declaracion estatutos .

    CBRACKET        reduce using rule 33 (estatutos -> declaracion estatutos .)


state 85

    (34) estatutos -> estatutoRepeticionIncondicional estatutos .

    CBRACKET        reduce using rule 34 (estatutos -> estatutoRepeticionIncondicional estatutos .)


state 86

    (35) estatutos -> estatutoRepeticionCondicional estatutos .

    CBRACKET        reduce using rule 35 (estatutos -> estatutoRepeticionCondicional estatutos .)


state 87

    (36) estatutos -> lectura estatutos .

    CBRACKET        reduce using rule 36 (estatutos -> lectura estatutos .)


state 88

    (37) estatutos -> asignacion estatutos .

    CBRACKET        reduce using rule 37 (estatutos -> asignacion estatutos .)


state 89

    (38) estatutos -> escritura estatutos .

    CBRACKET        reduce using rule 38 (estatutos -> escritura estatutos .)


state 90

    (39) estatutos -> decision estatutos .

    CBRACKET        reduce using rule 39 (estatutos -> decision estatutos .)


state 91

    (40) estatutos -> llamadaFuncion SEMICOLON . estatutos
    (31) estatutos -> . empty
    (32) estatutos -> . return
    (33) estatutos -> . declaracion estatutos
    (34) estatutos -> . estatutoRepeticionIncondicional estatutos
    (35) estatutos -> . estatutoRepeticionCondicional estatutos
    (36) estatutos -> . lectura estatutos
    (37) estatutos -> . asignacion estatutos
    (38) estatutos -> . escritura estatutos
    (39) estatutos -> . decision estatutos
    (40) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (59) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (62) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (41) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (48) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    CBRACKET        reduce using rule 101 (empty -> .)
    REGRESA         shift and go to state 61
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    llamadaFuncion                 shift and go to state 60
    estatutos                      shift and go to state 124
    empty                          shift and go to state 51
    return                         shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    posibleID                      shift and go to state 66

state 92

    (90) return -> REGRESA expresion . SEMICOLON
    (63) expresion -> expresion . LOGIC np_insertarOperador expresion
    (64) expresion -> expresion . RELOP np_insertarOperador expresion

    SEMICOLON       shift and go to state 125
    LOGIC           shift and go to state 126
    RELOP           shift and go to state 127


state 93

    (65) expresion -> termino .
    (66) termino -> termino . PLUS np_insertarOperador termino
    (67) termino -> termino . MINUS np_insertarOperador termino
    (68) termino -> termino . MULTIPLY np_insertarOperador termino
    (69) termino -> termino . DIVIDE np_insertarOperador termino

    SEMICOLON       reduce using rule 65 (expresion -> termino .)
    LOGIC           reduce using rule 65 (expresion -> termino .)
    RELOP           reduce using rule 65 (expresion -> termino .)
    COMA            reduce using rule 65 (expresion -> termino .)
    CPAREN          reduce using rule 65 (expresion -> termino .)
    HAZ             reduce using rule 65 (expresion -> termino .)
    CCORCH          reduce using rule 65 (expresion -> termino .)
    PLUS            shift and go to state 128
    MINUS           shift and go to state 129
    MULTIPLY        shift and go to state 130
    DIVIDE          shift and go to state 131


state 94

    (71) termino -> termino1 . OPMATRIZ np_insertarOperador
    (72) termino -> termino1 .

    OPMATRIZ        shift and go to state 132
    PLUS            reduce using rule 72 (termino -> termino1 .)
    MINUS           reduce using rule 72 (termino -> termino1 .)
    MULTIPLY        reduce using rule 72 (termino -> termino1 .)
    DIVIDE          reduce using rule 72 (termino -> termino1 .)
    SEMICOLON       reduce using rule 72 (termino -> termino1 .)
    LOGIC           reduce using rule 72 (termino -> termino1 .)
    RELOP           reduce using rule 72 (termino -> termino1 .)
    COMA            reduce using rule 72 (termino -> termino1 .)
    CPAREN          reduce using rule 72 (termino -> termino1 .)
    HAZ             reduce using rule 72 (termino -> termino1 .)
    CCORCH          reduce using rule 72 (termino -> termino1 .)


state 95

    (73) termino1 -> posibleID .

    OPMATRIZ        reduce using rule 73 (termino1 -> posibleID .)
    PLUS            reduce using rule 73 (termino1 -> posibleID .)
    MINUS           reduce using rule 73 (termino1 -> posibleID .)
    MULTIPLY        reduce using rule 73 (termino1 -> posibleID .)
    DIVIDE          reduce using rule 73 (termino1 -> posibleID .)
    SEMICOLON       reduce using rule 73 (termino1 -> posibleID .)
    LOGIC           reduce using rule 73 (termino1 -> posibleID .)
    RELOP           reduce using rule 73 (termino1 -> posibleID .)
    COMA            reduce using rule 73 (termino1 -> posibleID .)
    CPAREN          reduce using rule 73 (termino1 -> posibleID .)
    HAZ             reduce using rule 73 (termino1 -> posibleID .)
    CCORCH          reduce using rule 73 (termino1 -> posibleID .)


state 96

    (74) termino1 -> ENTERO . np_contieneID_Constante_Entero
    (92) np_contieneID_Constante_Entero -> .

    OPMATRIZ        reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    PLUS            reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    MINUS           reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    MULTIPLY        reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    DIVIDE          reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    SEMICOLON       reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    LOGIC           reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    RELOP           reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    COMA            reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    CPAREN          reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    HAZ             reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    CCORCH          reduce using rule 92 (np_contieneID_Constante_Entero -> .)

    np_contieneID_Constante_Entero shift and go to state 133

state 97

    (75) termino1 -> FLOTANTE . np_contieneID_Constante_Flotante
    (93) np_contieneID_Constante_Flotante -> .

    OPMATRIZ        reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    PLUS            reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    MINUS           reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    MULTIPLY        reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    DIVIDE          reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    SEMICOLON       reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    LOGIC           reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    RELOP           reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    COMA            reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    CPAREN          reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    HAZ             reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    CCORCH          reduce using rule 93 (np_contieneID_Constante_Flotante -> .)

    np_contieneID_Constante_Flotante shift and go to state 134

state 98

    (76) termino1 -> llamadaFuncion .

    OPMATRIZ        reduce using rule 76 (termino1 -> llamadaFuncion .)
    PLUS            reduce using rule 76 (termino1 -> llamadaFuncion .)
    MINUS           reduce using rule 76 (termino1 -> llamadaFuncion .)
    MULTIPLY        reduce using rule 76 (termino1 -> llamadaFuncion .)
    DIVIDE          reduce using rule 76 (termino1 -> llamadaFuncion .)
    SEMICOLON       reduce using rule 76 (termino1 -> llamadaFuncion .)
    LOGIC           reduce using rule 76 (termino1 -> llamadaFuncion .)
    RELOP           reduce using rule 76 (termino1 -> llamadaFuncion .)
    COMA            reduce using rule 76 (termino1 -> llamadaFuncion .)
    CPAREN          reduce using rule 76 (termino1 -> llamadaFuncion .)
    HAZ             reduce using rule 76 (termino1 -> llamadaFuncion .)
    CCORCH          reduce using rule 76 (termino1 -> llamadaFuncion .)


state 99

    (77) termino1 -> OPAREN . np_insertarOperador expresion CPAREN np_insertarOperador
    (70) np_insertarOperador -> .

    ENTERO          reduce using rule 70 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 70 (np_insertarOperador -> .)
    OPAREN          reduce using rule 70 (np_insertarOperador -> .)
    QUOT            reduce using rule 70 (np_insertarOperador -> .)
    ID              reduce using rule 70 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 135

state 100

    (78) termino1 -> QUOT . CARACTER QUOT

    CARACTER        shift and go to state 136


state 101

    (79) posibleID -> ID . np_contieneID np_enviarACuadruplos
    (80) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> ID . OPAREN primerParametro extraParametros CPAREN
    (91) np_contieneID -> .

    OPAREN          shift and go to state 103
    OCORCH          reduce using rule 91 (np_contieneID -> .)
    OPMATRIZ        reduce using rule 91 (np_contieneID -> .)
    PLUS            reduce using rule 91 (np_contieneID -> .)
    MINUS           reduce using rule 91 (np_contieneID -> .)
    MULTIPLY        reduce using rule 91 (np_contieneID -> .)
    DIVIDE          reduce using rule 91 (np_contieneID -> .)
    SEMICOLON       reduce using rule 91 (np_contieneID -> .)
    LOGIC           reduce using rule 91 (np_contieneID -> .)
    RELOP           reduce using rule 91 (np_contieneID -> .)
    COMA            reduce using rule 91 (np_contieneID -> .)
    CPAREN          reduce using rule 91 (np_contieneID -> .)
    HAZ             reduce using rule 91 (np_contieneID -> .)
    CCORCH          reduce using rule 91 (np_contieneID -> .)

    np_contieneID                  shift and go to state 104

state 102

    (88) estatutoRepeticionIncondicional -> DESDE ID . np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (91) np_contieneID -> .

    HASTA           reduce using rule 91 (np_contieneID -> .)

    np_contieneID                  shift and go to state 137

state 103

    (54) llamadaFuncion -> ID OPAREN . primerParametro extraParametros CPAREN
    (55) primerParametro -> . expresion
    (56) primerParametro -> . empty
    (63) expresion -> . expresion LOGIC np_insertarOperador expresion
    (64) expresion -> . expresion RELOP np_insertarOperador expresion
    (65) expresion -> . termino
    (101) empty -> .
    (66) termino -> . termino PLUS np_insertarOperador termino
    (67) termino -> . termino MINUS np_insertarOperador termino
    (68) termino -> . termino MULTIPLY np_insertarOperador termino
    (69) termino -> . termino DIVIDE np_insertarOperador termino
    (71) termino -> . termino1 OPMATRIZ np_insertarOperador
    (72) termino -> . termino1
    (73) termino1 -> . posibleID
    (74) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (75) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (76) termino1 -> . llamadaFuncion
    (77) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (78) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    COMA            reduce using rule 101 (empty -> .)
    CPAREN          reduce using rule 101 (empty -> .)
    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    OPAREN          shift and go to state 99
    QUOT            shift and go to state 100
    ID              shift and go to state 101

    primerParametro                shift and go to state 138
    expresion                      shift and go to state 139
    empty                          shift and go to state 140
    termino                        shift and go to state 93
    termino1                       shift and go to state 94
    posibleID                      shift and go to state 95
    llamadaFuncion                 shift and go to state 98

state 104

    (79) posibleID -> ID np_contieneID . np_enviarACuadruplos
    (80) posibleID -> ID np_contieneID . np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> ID np_contieneID . np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (96) np_enviarACuadruplos -> .

    OCORCH          reduce using rule 96 (np_enviarACuadruplos -> .)
    ASSIGN          reduce using rule 96 (np_enviarACuadruplos -> .)
    OPMATRIZ        reduce using rule 96 (np_enviarACuadruplos -> .)
    PLUS            reduce using rule 96 (np_enviarACuadruplos -> .)
    MINUS           reduce using rule 96 (np_enviarACuadruplos -> .)
    MULTIPLY        reduce using rule 96 (np_enviarACuadruplos -> .)
    DIVIDE          reduce using rule 96 (np_enviarACuadruplos -> .)
    SEMICOLON       reduce using rule 96 (np_enviarACuadruplos -> .)
    LOGIC           reduce using rule 96 (np_enviarACuadruplos -> .)
    RELOP           reduce using rule 96 (np_enviarACuadruplos -> .)
    COMA            reduce using rule 96 (np_enviarACuadruplos -> .)
    CPAREN          reduce using rule 96 (np_enviarACuadruplos -> .)
    HAZ             reduce using rule 96 (np_enviarACuadruplos -> .)
    CCORCH          reduce using rule 96 (np_enviarACuadruplos -> .)

    np_enviarACuadruplos           shift and go to state 141

state 105

    (89) estatutoRepeticionCondicional -> MIENTRAS OPAREN . expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (63) expresion -> . expresion LOGIC np_insertarOperador expresion
    (64) expresion -> . expresion RELOP np_insertarOperador expresion
    (65) expresion -> . termino
    (66) termino -> . termino PLUS np_insertarOperador termino
    (67) termino -> . termino MINUS np_insertarOperador termino
    (68) termino -> . termino MULTIPLY np_insertarOperador termino
    (69) termino -> . termino DIVIDE np_insertarOperador termino
    (71) termino -> . termino1 OPMATRIZ np_insertarOperador
    (72) termino -> . termino1
    (73) termino1 -> . posibleID
    (74) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (75) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (76) termino1 -> . llamadaFuncion
    (77) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (78) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    OPAREN          shift and go to state 99
    QUOT            shift and go to state 100
    ID              shift and go to state 101

    expresion                      shift and go to state 142
    termino                        shift and go to state 93
    termino1                       shift and go to state 94
    posibleID                      shift and go to state 95
    llamadaFuncion                 shift and go to state 98

state 106

    (59) lectura -> LEE OPAREN . posibleID lectura2 CPAREN SEMICOLON
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    ID              shift and go to state 144

    posibleID                      shift and go to state 143

state 107

    (62) asignacion -> posibleID np_agregarFondo . ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON

    ASSIGN          shift and go to state 145


state 108

    (41) escritura -> ESCRIBE OPAREN . escritura2 CPAREN SEMICOLON
    (42) escritura2 -> . empty
    (43) escritura2 -> . posibleID escritura3
    (44) escritura2 -> . STRING escritura3
    (101) empty -> .
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    STRING          shift and go to state 149
    CPAREN          reduce using rule 101 (empty -> .)
    ID              shift and go to state 144

    escritura2                     shift and go to state 146
    empty                          shift and go to state 147
    posibleID                      shift and go to state 148

state 109

    (48) decision -> SI OPAREN . np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> SI OPAREN . np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (98) np_agregarFondo -> .

    ENTERO          reduce using rule 98 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 98 (np_agregarFondo -> .)
    OPAREN          reduce using rule 98 (np_agregarFondo -> .)
    QUOT            reduce using rule 98 (np_agregarFondo -> .)
    ID              reduce using rule 98 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 150

state 110

    (15) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN . np_termino declaracionFuncionVariables np_termino OBRACKET estatutos CBRACKET
    (19) np_termino -> .

    VAR             reduce using rule 19 (np_termino -> .)
    OBRACKET        reduce using rule 19 (np_termino -> .)

    np_termino                     shift and go to state 151

state 111

    (21) declaracionFuncionParametros -> INT np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (98) np_agregarFondo -> .

    ID              reduce using rule 98 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 152

state 112

    (22) declaracionFuncionParametros -> CHAR np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (98) np_agregarFondo -> .

    ID              reduce using rule 98 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 153

state 113

    (23) declaracionFuncionParametros -> FLOAT np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (98) np_agregarFondo -> .

    ID              reduce using rule 98 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 154

state 114

    (16) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN . declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (28) declaracionFuncionVariables -> . empty
    (29) declaracionFuncionVariables -> . declaracion
    (101) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2

    OBRACKET        reduce using rule 101 (empty -> .)
    VAR             shift and go to state 8

    declaracionFuncionVariables    shift and go to state 155
    empty                          shift and go to state 156
    declaracion                    shift and go to state 157

state 115

    (17) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN . declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (28) declaracionFuncionVariables -> . empty
    (29) declaracionFuncionVariables -> . declaracion
    (101) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2

    OBRACKET        reduce using rule 101 (empty -> .)
    VAR             shift and go to state 8

    declaracionFuncionVariables    shift and go to state 158
    empty                          shift and go to state 156
    declaracion                    shift and go to state 157

state 116

    (18) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN declaracionFuncionParametros CPAREN . declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (28) declaracionFuncionVariables -> . empty
    (29) declaracionFuncionVariables -> . declaracion
    (101) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2

    OBRACKET        reduce using rule 101 (empty -> .)
    VAR             shift and go to state 8

    declaracionFuncionVariables    shift and go to state 159
    empty                          shift and go to state 156
    declaracion                    shift and go to state 157

state 117

    (11) declaracion3 -> np_quitarFondo SEMICOLON .

    VAR             reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)
    FUNCION         reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)
    REGRESA         reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)
    DESDE           reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)
    MIENTRAS        reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)
    LEE             reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)
    ESCRIBE         reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)
    SI              reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)
    ID              reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)
    CBRACKET        reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)
    OBRACKET        reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)


state 118

    (12) declaracion3 -> np_quitarFondo COMA . declaracion2
    (10) declaracion2 -> . np_agregarFondo posibleIDDeclaracion declaracion3
    (98) np_agregarFondo -> .

    ID              reduce using rule 98 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 160
    np_agregarFondo                shift and go to state 38

state 119

    (13) declaracion3 -> ASSIGN np_insertarOperador . expresion np_quitarFondo SEMICOLON
    (14) declaracion3 -> ASSIGN np_insertarOperador . expresion np_quitarFondo COMA declaracion2
    (63) expresion -> . expresion LOGIC np_insertarOperador expresion
    (64) expresion -> . expresion RELOP np_insertarOperador expresion
    (65) expresion -> . termino
    (66) termino -> . termino PLUS np_insertarOperador termino
    (67) termino -> . termino MINUS np_insertarOperador termino
    (68) termino -> . termino MULTIPLY np_insertarOperador termino
    (69) termino -> . termino DIVIDE np_insertarOperador termino
    (71) termino -> . termino1 OPMATRIZ np_insertarOperador
    (72) termino -> . termino1
    (73) termino1 -> . posibleID
    (74) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (75) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (76) termino1 -> . llamadaFuncion
    (77) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (78) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    OPAREN          shift and go to state 99
    QUOT            shift and go to state 100
    ID              shift and go to state 101

    expresion                      shift and go to state 161
    termino                        shift and go to state 93
    termino1                       shift and go to state 94
    posibleID                      shift and go to state 95
    llamadaFuncion                 shift and go to state 98

state 120

    (82) posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable . np_enviarACuadruplos np_actualizarDimensiones
    (96) np_enviarACuadruplos -> .

    ASSIGN          reduce using rule 96 (np_enviarACuadruplos -> .)
    SEMICOLON       reduce using rule 96 (np_enviarACuadruplos -> .)
    COMA            reduce using rule 96 (np_enviarACuadruplos -> .)
    CPAREN          reduce using rule 96 (np_enviarACuadruplos -> .)

    np_enviarACuadruplos           shift and go to state 162

state 121

    (83) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable . np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (96) np_enviarACuadruplos -> .

    OCORCH          reduce using rule 96 (np_enviarACuadruplos -> .)

    np_enviarACuadruplos           shift and go to state 163

state 122

    (84) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable . np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (96) np_enviarACuadruplos -> .

    OCORCH          reduce using rule 96 (np_enviarACuadruplos -> .)

    np_enviarACuadruplos           shift and go to state 164

state 123

    (5) principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos .

    $end            reduce using rule 5 (principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos .)


state 124

    (40) estatutos -> llamadaFuncion SEMICOLON estatutos .

    CBRACKET        reduce using rule 40 (estatutos -> llamadaFuncion SEMICOLON estatutos .)


state 125

    (90) return -> REGRESA expresion SEMICOLON .

    CBRACKET        reduce using rule 90 (return -> REGRESA expresion SEMICOLON .)


state 126

    (63) expresion -> expresion LOGIC . np_insertarOperador expresion
    (70) np_insertarOperador -> .

    ENTERO          reduce using rule 70 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 70 (np_insertarOperador -> .)
    OPAREN          reduce using rule 70 (np_insertarOperador -> .)
    QUOT            reduce using rule 70 (np_insertarOperador -> .)
    ID              reduce using rule 70 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 165

state 127

    (64) expresion -> expresion RELOP . np_insertarOperador expresion
    (70) np_insertarOperador -> .

    ENTERO          reduce using rule 70 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 70 (np_insertarOperador -> .)
    OPAREN          reduce using rule 70 (np_insertarOperador -> .)
    QUOT            reduce using rule 70 (np_insertarOperador -> .)
    ID              reduce using rule 70 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 166

state 128

    (66) termino -> termino PLUS . np_insertarOperador termino
    (70) np_insertarOperador -> .

    ENTERO          reduce using rule 70 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 70 (np_insertarOperador -> .)
    OPAREN          reduce using rule 70 (np_insertarOperador -> .)
    QUOT            reduce using rule 70 (np_insertarOperador -> .)
    ID              reduce using rule 70 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 167

state 129

    (67) termino -> termino MINUS . np_insertarOperador termino
    (70) np_insertarOperador -> .

    ENTERO          reduce using rule 70 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 70 (np_insertarOperador -> .)
    OPAREN          reduce using rule 70 (np_insertarOperador -> .)
    QUOT            reduce using rule 70 (np_insertarOperador -> .)
    ID              reduce using rule 70 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 168

state 130

    (68) termino -> termino MULTIPLY . np_insertarOperador termino
    (70) np_insertarOperador -> .

    ENTERO          reduce using rule 70 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 70 (np_insertarOperador -> .)
    OPAREN          reduce using rule 70 (np_insertarOperador -> .)
    QUOT            reduce using rule 70 (np_insertarOperador -> .)
    ID              reduce using rule 70 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 169

state 131

    (69) termino -> termino DIVIDE . np_insertarOperador termino
    (70) np_insertarOperador -> .

    ENTERO          reduce using rule 70 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 70 (np_insertarOperador -> .)
    OPAREN          reduce using rule 70 (np_insertarOperador -> .)
    QUOT            reduce using rule 70 (np_insertarOperador -> .)
    ID              reduce using rule 70 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 170

state 132

    (71) termino -> termino1 OPMATRIZ . np_insertarOperador
    (70) np_insertarOperador -> .

    PLUS            reduce using rule 70 (np_insertarOperador -> .)
    MINUS           reduce using rule 70 (np_insertarOperador -> .)
    MULTIPLY        reduce using rule 70 (np_insertarOperador -> .)
    DIVIDE          reduce using rule 70 (np_insertarOperador -> .)
    SEMICOLON       reduce using rule 70 (np_insertarOperador -> .)
    LOGIC           reduce using rule 70 (np_insertarOperador -> .)
    RELOP           reduce using rule 70 (np_insertarOperador -> .)
    COMA            reduce using rule 70 (np_insertarOperador -> .)
    CPAREN          reduce using rule 70 (np_insertarOperador -> .)
    HAZ             reduce using rule 70 (np_insertarOperador -> .)
    CCORCH          reduce using rule 70 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 171

state 133

    (74) termino1 -> ENTERO np_contieneID_Constante_Entero .

    OPMATRIZ        reduce using rule 74 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    PLUS            reduce using rule 74 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    MINUS           reduce using rule 74 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    MULTIPLY        reduce using rule 74 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    DIVIDE          reduce using rule 74 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    SEMICOLON       reduce using rule 74 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    LOGIC           reduce using rule 74 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    RELOP           reduce using rule 74 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    COMA            reduce using rule 74 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    CPAREN          reduce using rule 74 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    HAZ             reduce using rule 74 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    CCORCH          reduce using rule 74 (termino1 -> ENTERO np_contieneID_Constante_Entero .)


state 134

    (75) termino1 -> FLOTANTE np_contieneID_Constante_Flotante .

    OPMATRIZ        reduce using rule 75 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    PLUS            reduce using rule 75 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    MINUS           reduce using rule 75 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    MULTIPLY        reduce using rule 75 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    DIVIDE          reduce using rule 75 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    SEMICOLON       reduce using rule 75 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    LOGIC           reduce using rule 75 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    RELOP           reduce using rule 75 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    COMA            reduce using rule 75 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    CPAREN          reduce using rule 75 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    HAZ             reduce using rule 75 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    CCORCH          reduce using rule 75 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)


state 135

    (77) termino1 -> OPAREN np_insertarOperador . expresion CPAREN np_insertarOperador
    (63) expresion -> . expresion LOGIC np_insertarOperador expresion
    (64) expresion -> . expresion RELOP np_insertarOperador expresion
    (65) expresion -> . termino
    (66) termino -> . termino PLUS np_insertarOperador termino
    (67) termino -> . termino MINUS np_insertarOperador termino
    (68) termino -> . termino MULTIPLY np_insertarOperador termino
    (69) termino -> . termino DIVIDE np_insertarOperador termino
    (71) termino -> . termino1 OPMATRIZ np_insertarOperador
    (72) termino -> . termino1
    (73) termino1 -> . posibleID
    (74) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (75) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (76) termino1 -> . llamadaFuncion
    (77) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (78) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    OPAREN          shift and go to state 99
    QUOT            shift and go to state 100
    ID              shift and go to state 101

    expresion                      shift and go to state 172
    termino                        shift and go to state 93
    termino1                       shift and go to state 94
    posibleID                      shift and go to state 95
    llamadaFuncion                 shift and go to state 98

state 136

    (78) termino1 -> QUOT CARACTER . QUOT

    QUOT            shift and go to state 173


state 137

    (88) estatutoRepeticionIncondicional -> DESDE ID np_contieneID . HASTA expresion HAZ OBRACKET estatutos CBRACKET

    HASTA           shift and go to state 174


state 138

    (54) llamadaFuncion -> ID OPAREN primerParametro . extraParametros CPAREN
    (57) extraParametros -> . COMA expresion extraParametros
    (58) extraParametros -> . empty
    (101) empty -> .

    COMA            shift and go to state 176
    CPAREN          reduce using rule 101 (empty -> .)

    extraParametros                shift and go to state 175
    empty                          shift and go to state 177

state 139

    (55) primerParametro -> expresion .
    (63) expresion -> expresion . LOGIC np_insertarOperador expresion
    (64) expresion -> expresion . RELOP np_insertarOperador expresion

    COMA            reduce using rule 55 (primerParametro -> expresion .)
    CPAREN          reduce using rule 55 (primerParametro -> expresion .)
    LOGIC           shift and go to state 126
    RELOP           shift and go to state 127


state 140

    (56) primerParametro -> empty .

    COMA            reduce using rule 56 (primerParametro -> empty .)
    CPAREN          reduce using rule 56 (primerParametro -> empty .)


state 141

    (79) posibleID -> ID np_contieneID np_enviarACuadruplos .
    (80) posibleID -> ID np_contieneID np_enviarACuadruplos . OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> ID np_contieneID np_enviarACuadruplos . OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    ASSIGN          reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    OPMATRIZ        reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    PLUS            reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    MINUS           reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    MULTIPLY        reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    DIVIDE          reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    SEMICOLON       reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    LOGIC           reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    RELOP           reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    COMA            reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    CPAREN          reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    HAZ             reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    CCORCH          reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    OCORCH          shift and go to state 178


state 142

    (89) estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion . CPAREN HAZ OBRACKET estatutos CBRACKET
    (63) expresion -> expresion . LOGIC np_insertarOperador expresion
    (64) expresion -> expresion . RELOP np_insertarOperador expresion

    CPAREN          shift and go to state 179
    LOGIC           shift and go to state 126
    RELOP           shift and go to state 127


state 143

    (59) lectura -> LEE OPAREN posibleID . lectura2 CPAREN SEMICOLON
    (60) lectura2 -> . empty
    (61) lectura2 -> . COMA posibleID lectura2
    (101) empty -> .

    COMA            shift and go to state 182
    CPAREN          reduce using rule 101 (empty -> .)

    lectura2                       shift and go to state 180
    empty                          shift and go to state 181

state 144

    (79) posibleID -> ID . np_contieneID np_enviarACuadruplos
    (80) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (91) np_contieneID -> .

    OCORCH          reduce using rule 91 (np_contieneID -> .)
    COMA            reduce using rule 91 (np_contieneID -> .)
    CPAREN          reduce using rule 91 (np_contieneID -> .)

    np_contieneID                  shift and go to state 104

state 145

    (62) asignacion -> posibleID np_agregarFondo ASSIGN . np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (70) np_insertarOperador -> .

    ENTERO          reduce using rule 70 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 70 (np_insertarOperador -> .)
    OPAREN          reduce using rule 70 (np_insertarOperador -> .)
    QUOT            reduce using rule 70 (np_insertarOperador -> .)
    ID              reduce using rule 70 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 183

state 146

    (41) escritura -> ESCRIBE OPAREN escritura2 . CPAREN SEMICOLON

    CPAREN          shift and go to state 184


state 147

    (42) escritura2 -> empty .

    CPAREN          reduce using rule 42 (escritura2 -> empty .)


state 148

    (43) escritura2 -> posibleID . escritura3
    (45) escritura3 -> . empty
    (46) escritura3 -> . COMA expresion escritura3
    (47) escritura3 -> . COMA STRING escritura3
    (101) empty -> .

    COMA            shift and go to state 187
    CPAREN          reduce using rule 101 (empty -> .)

    escritura3                     shift and go to state 185
    empty                          shift and go to state 186

state 149

    (44) escritura2 -> STRING . escritura3
    (45) escritura3 -> . empty
    (46) escritura3 -> . COMA expresion escritura3
    (47) escritura3 -> . COMA STRING escritura3
    (101) empty -> .

    COMA            shift and go to state 187
    CPAREN          reduce using rule 101 (empty -> .)

    escritura3                     shift and go to state 188
    empty                          shift and go to state 186

state 150

    (48) decision -> SI OPAREN np_agregarFondo . expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> SI OPAREN np_agregarFondo . expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (63) expresion -> . expresion LOGIC np_insertarOperador expresion
    (64) expresion -> . expresion RELOP np_insertarOperador expresion
    (65) expresion -> . termino
    (66) termino -> . termino PLUS np_insertarOperador termino
    (67) termino -> . termino MINUS np_insertarOperador termino
    (68) termino -> . termino MULTIPLY np_insertarOperador termino
    (69) termino -> . termino DIVIDE np_insertarOperador termino
    (71) termino -> . termino1 OPMATRIZ np_insertarOperador
    (72) termino -> . termino1
    (73) termino1 -> . posibleID
    (74) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (75) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (76) termino1 -> . llamadaFuncion
    (77) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (78) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    OPAREN          shift and go to state 99
    QUOT            shift and go to state 100
    ID              shift and go to state 101

    expresion                      shift and go to state 189
    termino                        shift and go to state 93
    termino1                       shift and go to state 94
    posibleID                      shift and go to state 95
    llamadaFuncion                 shift and go to state 98

state 151

    (15) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN np_termino . declaracionFuncionVariables np_termino OBRACKET estatutos CBRACKET
    (28) declaracionFuncionVariables -> . empty
    (29) declaracionFuncionVariables -> . declaracion
    (101) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2

    OBRACKET        reduce using rule 101 (empty -> .)
    VAR             shift and go to state 8

    declaracionFuncionVariables    shift and go to state 190
    empty                          shift and go to state 156
    declaracion                    shift and go to state 157

state 152

    (21) declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (82) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (83) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (84) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (85) np_updateCurrentDimension0 -> .
    (86) np_updateCurrentDimension1 -> .
    (87) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 85 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 85 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 85 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 86 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 87 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 191
    np_updateCurrentDimension0     shift and go to state 47
    np_updateCurrentDimension1     shift and go to state 48
    np_updateCurrentDimension2     shift and go to state 49

state 153

    (22) declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (82) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (83) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (84) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (85) np_updateCurrentDimension0 -> .
    (86) np_updateCurrentDimension1 -> .
    (87) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 85 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 85 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 85 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 86 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 87 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 192
    np_updateCurrentDimension0     shift and go to state 47
    np_updateCurrentDimension1     shift and go to state 48
    np_updateCurrentDimension2     shift and go to state 49

state 154

    (23) declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (82) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (83) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (84) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (85) np_updateCurrentDimension0 -> .
    (86) np_updateCurrentDimension1 -> .
    (87) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 85 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 85 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 85 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 86 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 87 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 193
    np_updateCurrentDimension0     shift and go to state 47
    np_updateCurrentDimension1     shift and go to state 48
    np_updateCurrentDimension2     shift and go to state 49

state 155

    (16) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables . OBRACKET estatutos CBRACKET

    OBRACKET        shift and go to state 194


state 156

    (28) declaracionFuncionVariables -> empty .

    OBRACKET        reduce using rule 28 (declaracionFuncionVariables -> empty .)


state 157

    (29) declaracionFuncionVariables -> declaracion .

    OBRACKET        reduce using rule 29 (declaracionFuncionVariables -> declaracion .)


state 158

    (17) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables . OBRACKET estatutos CBRACKET

    OBRACKET        shift and go to state 195


state 159

    (18) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables . OBRACKET estatutos CBRACKET

    OBRACKET        shift and go to state 196


state 160

    (12) declaracion3 -> np_quitarFondo COMA declaracion2 .

    VAR             reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    FUNCION         reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    REGRESA         reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    DESDE           reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    MIENTRAS        reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    LEE             reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    ESCRIBE         reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    SI              reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    ID              reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    CBRACKET        reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    OBRACKET        reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)


state 161

    (13) declaracion3 -> ASSIGN np_insertarOperador expresion . np_quitarFondo SEMICOLON
    (14) declaracion3 -> ASSIGN np_insertarOperador expresion . np_quitarFondo COMA declaracion2
    (63) expresion -> expresion . LOGIC np_insertarOperador expresion
    (64) expresion -> expresion . RELOP np_insertarOperador expresion
    (99) np_quitarFondo -> .

    LOGIC           shift and go to state 126
    RELOP           shift and go to state 127
    SEMICOLON       reduce using rule 99 (np_quitarFondo -> .)
    COMA            reduce using rule 99 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 197

state 162

    (82) posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos . np_actualizarDimensiones
    (97) np_actualizarDimensiones -> .

    ASSIGN          reduce using rule 97 (np_actualizarDimensiones -> .)
    SEMICOLON       reduce using rule 97 (np_actualizarDimensiones -> .)
    COMA            reduce using rule 97 (np_actualizarDimensiones -> .)
    CPAREN          reduce using rule 97 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 198

state 163

    (83) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos . np_actualizarDimensiones OCORCH expresion CCORCH
    (97) np_actualizarDimensiones -> .

    OCORCH          reduce using rule 97 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 199

state 164

    (84) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos . np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (97) np_actualizarDimensiones -> .

    OCORCH          reduce using rule 97 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 200

state 165

    (63) expresion -> expresion LOGIC np_insertarOperador . expresion
    (63) expresion -> . expresion LOGIC np_insertarOperador expresion
    (64) expresion -> . expresion RELOP np_insertarOperador expresion
    (65) expresion -> . termino
    (66) termino -> . termino PLUS np_insertarOperador termino
    (67) termino -> . termino MINUS np_insertarOperador termino
    (68) termino -> . termino MULTIPLY np_insertarOperador termino
    (69) termino -> . termino DIVIDE np_insertarOperador termino
    (71) termino -> . termino1 OPMATRIZ np_insertarOperador
    (72) termino -> . termino1
    (73) termino1 -> . posibleID
    (74) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (75) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (76) termino1 -> . llamadaFuncion
    (77) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (78) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    OPAREN          shift and go to state 99
    QUOT            shift and go to state 100
    ID              shift and go to state 101

    expresion                      shift and go to state 201
    termino                        shift and go to state 93
    termino1                       shift and go to state 94
    posibleID                      shift and go to state 95
    llamadaFuncion                 shift and go to state 98

state 166

    (64) expresion -> expresion RELOP np_insertarOperador . expresion
    (63) expresion -> . expresion LOGIC np_insertarOperador expresion
    (64) expresion -> . expresion RELOP np_insertarOperador expresion
    (65) expresion -> . termino
    (66) termino -> . termino PLUS np_insertarOperador termino
    (67) termino -> . termino MINUS np_insertarOperador termino
    (68) termino -> . termino MULTIPLY np_insertarOperador termino
    (69) termino -> . termino DIVIDE np_insertarOperador termino
    (71) termino -> . termino1 OPMATRIZ np_insertarOperador
    (72) termino -> . termino1
    (73) termino1 -> . posibleID
    (74) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (75) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (76) termino1 -> . llamadaFuncion
    (77) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (78) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    OPAREN          shift and go to state 99
    QUOT            shift and go to state 100
    ID              shift and go to state 101

    expresion                      shift and go to state 202
    termino                        shift and go to state 93
    termino1                       shift and go to state 94
    posibleID                      shift and go to state 95
    llamadaFuncion                 shift and go to state 98

state 167

    (66) termino -> termino PLUS np_insertarOperador . termino
    (66) termino -> . termino PLUS np_insertarOperador termino
    (67) termino -> . termino MINUS np_insertarOperador termino
    (68) termino -> . termino MULTIPLY np_insertarOperador termino
    (69) termino -> . termino DIVIDE np_insertarOperador termino
    (71) termino -> . termino1 OPMATRIZ np_insertarOperador
    (72) termino -> . termino1
    (73) termino1 -> . posibleID
    (74) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (75) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (76) termino1 -> . llamadaFuncion
    (77) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (78) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    OPAREN          shift and go to state 99
    QUOT            shift and go to state 100
    ID              shift and go to state 101

    termino                        shift and go to state 203
    termino1                       shift and go to state 94
    posibleID                      shift and go to state 95
    llamadaFuncion                 shift and go to state 98

state 168

    (67) termino -> termino MINUS np_insertarOperador . termino
    (66) termino -> . termino PLUS np_insertarOperador termino
    (67) termino -> . termino MINUS np_insertarOperador termino
    (68) termino -> . termino MULTIPLY np_insertarOperador termino
    (69) termino -> . termino DIVIDE np_insertarOperador termino
    (71) termino -> . termino1 OPMATRIZ np_insertarOperador
    (72) termino -> . termino1
    (73) termino1 -> . posibleID
    (74) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (75) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (76) termino1 -> . llamadaFuncion
    (77) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (78) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    OPAREN          shift and go to state 99
    QUOT            shift and go to state 100
    ID              shift and go to state 101

    termino                        shift and go to state 204
    termino1                       shift and go to state 94
    posibleID                      shift and go to state 95
    llamadaFuncion                 shift and go to state 98

state 169

    (68) termino -> termino MULTIPLY np_insertarOperador . termino
    (66) termino -> . termino PLUS np_insertarOperador termino
    (67) termino -> . termino MINUS np_insertarOperador termino
    (68) termino -> . termino MULTIPLY np_insertarOperador termino
    (69) termino -> . termino DIVIDE np_insertarOperador termino
    (71) termino -> . termino1 OPMATRIZ np_insertarOperador
    (72) termino -> . termino1
    (73) termino1 -> . posibleID
    (74) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (75) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (76) termino1 -> . llamadaFuncion
    (77) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (78) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    OPAREN          shift and go to state 99
    QUOT            shift and go to state 100
    ID              shift and go to state 101

    termino                        shift and go to state 205
    termino1                       shift and go to state 94
    posibleID                      shift and go to state 95
    llamadaFuncion                 shift and go to state 98

state 170

    (69) termino -> termino DIVIDE np_insertarOperador . termino
    (66) termino -> . termino PLUS np_insertarOperador termino
    (67) termino -> . termino MINUS np_insertarOperador termino
    (68) termino -> . termino MULTIPLY np_insertarOperador termino
    (69) termino -> . termino DIVIDE np_insertarOperador termino
    (71) termino -> . termino1 OPMATRIZ np_insertarOperador
    (72) termino -> . termino1
    (73) termino1 -> . posibleID
    (74) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (75) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (76) termino1 -> . llamadaFuncion
    (77) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (78) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    OPAREN          shift and go to state 99
    QUOT            shift and go to state 100
    ID              shift and go to state 101

    termino                        shift and go to state 206
    termino1                       shift and go to state 94
    posibleID                      shift and go to state 95
    llamadaFuncion                 shift and go to state 98

state 171

    (71) termino -> termino1 OPMATRIZ np_insertarOperador .

    PLUS            reduce using rule 71 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    MINUS           reduce using rule 71 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    MULTIPLY        reduce using rule 71 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    DIVIDE          reduce using rule 71 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    SEMICOLON       reduce using rule 71 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    LOGIC           reduce using rule 71 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    RELOP           reduce using rule 71 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    COMA            reduce using rule 71 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    CPAREN          reduce using rule 71 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    HAZ             reduce using rule 71 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    CCORCH          reduce using rule 71 (termino -> termino1 OPMATRIZ np_insertarOperador .)


state 172

    (77) termino1 -> OPAREN np_insertarOperador expresion . CPAREN np_insertarOperador
    (63) expresion -> expresion . LOGIC np_insertarOperador expresion
    (64) expresion -> expresion . RELOP np_insertarOperador expresion

    CPAREN          shift and go to state 207
    LOGIC           shift and go to state 126
    RELOP           shift and go to state 127


state 173

    (78) termino1 -> QUOT CARACTER QUOT .

    OPMATRIZ        reduce using rule 78 (termino1 -> QUOT CARACTER QUOT .)
    PLUS            reduce using rule 78 (termino1 -> QUOT CARACTER QUOT .)
    MINUS           reduce using rule 78 (termino1 -> QUOT CARACTER QUOT .)
    MULTIPLY        reduce using rule 78 (termino1 -> QUOT CARACTER QUOT .)
    DIVIDE          reduce using rule 78 (termino1 -> QUOT CARACTER QUOT .)
    SEMICOLON       reduce using rule 78 (termino1 -> QUOT CARACTER QUOT .)
    LOGIC           reduce using rule 78 (termino1 -> QUOT CARACTER QUOT .)
    RELOP           reduce using rule 78 (termino1 -> QUOT CARACTER QUOT .)
    COMA            reduce using rule 78 (termino1 -> QUOT CARACTER QUOT .)
    CPAREN          reduce using rule 78 (termino1 -> QUOT CARACTER QUOT .)
    HAZ             reduce using rule 78 (termino1 -> QUOT CARACTER QUOT .)
    CCORCH          reduce using rule 78 (termino1 -> QUOT CARACTER QUOT .)


state 174

    (88) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA . expresion HAZ OBRACKET estatutos CBRACKET
    (63) expresion -> . expresion LOGIC np_insertarOperador expresion
    (64) expresion -> . expresion RELOP np_insertarOperador expresion
    (65) expresion -> . termino
    (66) termino -> . termino PLUS np_insertarOperador termino
    (67) termino -> . termino MINUS np_insertarOperador termino
    (68) termino -> . termino MULTIPLY np_insertarOperador termino
    (69) termino -> . termino DIVIDE np_insertarOperador termino
    (71) termino -> . termino1 OPMATRIZ np_insertarOperador
    (72) termino -> . termino1
    (73) termino1 -> . posibleID
    (74) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (75) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (76) termino1 -> . llamadaFuncion
    (77) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (78) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    OPAREN          shift and go to state 99
    QUOT            shift and go to state 100
    ID              shift and go to state 101

    expresion                      shift and go to state 208
    termino                        shift and go to state 93
    termino1                       shift and go to state 94
    posibleID                      shift and go to state 95
    llamadaFuncion                 shift and go to state 98

state 175

    (54) llamadaFuncion -> ID OPAREN primerParametro extraParametros . CPAREN

    CPAREN          shift and go to state 209


state 176

    (57) extraParametros -> COMA . expresion extraParametros
    (63) expresion -> . expresion LOGIC np_insertarOperador expresion
    (64) expresion -> . expresion RELOP np_insertarOperador expresion
    (65) expresion -> . termino
    (66) termino -> . termino PLUS np_insertarOperador termino
    (67) termino -> . termino MINUS np_insertarOperador termino
    (68) termino -> . termino MULTIPLY np_insertarOperador termino
    (69) termino -> . termino DIVIDE np_insertarOperador termino
    (71) termino -> . termino1 OPMATRIZ np_insertarOperador
    (72) termino -> . termino1
    (73) termino1 -> . posibleID
    (74) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (75) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (76) termino1 -> . llamadaFuncion
    (77) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (78) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    OPAREN          shift and go to state 99
    QUOT            shift and go to state 100
    ID              shift and go to state 101

    expresion                      shift and go to state 210
    termino                        shift and go to state 93
    termino1                       shift and go to state 94
    posibleID                      shift and go to state 95
    llamadaFuncion                 shift and go to state 98

state 177

    (58) extraParametros -> empty .

    CPAREN          reduce using rule 58 (extraParametros -> empty .)


state 178

    (80) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH . np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH . np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (98) np_agregarFondo -> .

    ENTERO          reduce using rule 98 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 98 (np_agregarFondo -> .)
    OPAREN          reduce using rule 98 (np_agregarFondo -> .)
    QUOT            reduce using rule 98 (np_agregarFondo -> .)
    ID              reduce using rule 98 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 211

state 179

    (89) estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN . HAZ OBRACKET estatutos CBRACKET

    HAZ             shift and go to state 212


state 180

    (59) lectura -> LEE OPAREN posibleID lectura2 . CPAREN SEMICOLON

    CPAREN          shift and go to state 213


state 181

    (60) lectura2 -> empty .

    CPAREN          reduce using rule 60 (lectura2 -> empty .)


state 182

    (61) lectura2 -> COMA . posibleID lectura2
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    ID              shift and go to state 144

    posibleID                      shift and go to state 214

state 183

    (62) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador . np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (98) np_agregarFondo -> .

    ENTERO          reduce using rule 98 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 98 (np_agregarFondo -> .)
    OPAREN          reduce using rule 98 (np_agregarFondo -> .)
    QUOT            reduce using rule 98 (np_agregarFondo -> .)
    ID              reduce using rule 98 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 215

state 184

    (41) escritura -> ESCRIBE OPAREN escritura2 CPAREN . SEMICOLON

    SEMICOLON       shift and go to state 216


state 185

    (43) escritura2 -> posibleID escritura3 .

    CPAREN          reduce using rule 43 (escritura2 -> posibleID escritura3 .)


state 186

    (45) escritura3 -> empty .

    CPAREN          reduce using rule 45 (escritura3 -> empty .)


state 187

    (46) escritura3 -> COMA . expresion escritura3
    (47) escritura3 -> COMA . STRING escritura3
    (63) expresion -> . expresion LOGIC np_insertarOperador expresion
    (64) expresion -> . expresion RELOP np_insertarOperador expresion
    (65) expresion -> . termino
    (66) termino -> . termino PLUS np_insertarOperador termino
    (67) termino -> . termino MINUS np_insertarOperador termino
    (68) termino -> . termino MULTIPLY np_insertarOperador termino
    (69) termino -> . termino DIVIDE np_insertarOperador termino
    (71) termino -> . termino1 OPMATRIZ np_insertarOperador
    (72) termino -> . termino1
    (73) termino1 -> . posibleID
    (74) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (75) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (76) termino1 -> . llamadaFuncion
    (77) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (78) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    STRING          shift and go to state 218
    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    OPAREN          shift and go to state 99
    QUOT            shift and go to state 100
    ID              shift and go to state 101

    expresion                      shift and go to state 217
    termino                        shift and go to state 93
    termino1                       shift and go to state 94
    posibleID                      shift and go to state 95
    llamadaFuncion                 shift and go to state 98

state 188

    (44) escritura2 -> STRING escritura3 .

    CPAREN          reduce using rule 44 (escritura2 -> STRING escritura3 .)


state 189

    (48) decision -> SI OPAREN np_agregarFondo expresion . np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> SI OPAREN np_agregarFondo expresion . np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (63) expresion -> expresion . LOGIC np_insertarOperador expresion
    (64) expresion -> expresion . RELOP np_insertarOperador expresion
    (99) np_quitarFondo -> .

    LOGIC           shift and go to state 126
    RELOP           shift and go to state 127
    CPAREN          reduce using rule 99 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 219

state 190

    (15) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN np_termino declaracionFuncionVariables . np_termino OBRACKET estatutos CBRACKET
    (19) np_termino -> .

    OBRACKET        reduce using rule 19 (np_termino -> .)

    np_termino                     shift and go to state 220

state 191

    (21) declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (99) np_quitarFondo -> .

    COMA            reduce using rule 99 (np_quitarFondo -> .)
    CPAREN          reduce using rule 99 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 221

state 192

    (22) declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (99) np_quitarFondo -> .

    COMA            reduce using rule 99 (np_quitarFondo -> .)
    CPAREN          reduce using rule 99 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 222

state 193

    (23) declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (99) np_quitarFondo -> .

    COMA            reduce using rule 99 (np_quitarFondo -> .)
    CPAREN          reduce using rule 99 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 223

state 194

    (16) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET . estatutos CBRACKET
    (31) estatutos -> . empty
    (32) estatutos -> . return
    (33) estatutos -> . declaracion estatutos
    (34) estatutos -> . estatutoRepeticionIncondicional estatutos
    (35) estatutos -> . estatutoRepeticionCondicional estatutos
    (36) estatutos -> . lectura estatutos
    (37) estatutos -> . asignacion estatutos
    (38) estatutos -> . escritura estatutos
    (39) estatutos -> . decision estatutos
    (40) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (59) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (62) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (41) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (48) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    CBRACKET        reduce using rule 101 (empty -> .)
    REGRESA         shift and go to state 61
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 224
    empty                          shift and go to state 51
    return                         shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 195

    (17) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET . estatutos CBRACKET
    (31) estatutos -> . empty
    (32) estatutos -> . return
    (33) estatutos -> . declaracion estatutos
    (34) estatutos -> . estatutoRepeticionIncondicional estatutos
    (35) estatutos -> . estatutoRepeticionCondicional estatutos
    (36) estatutos -> . lectura estatutos
    (37) estatutos -> . asignacion estatutos
    (38) estatutos -> . escritura estatutos
    (39) estatutos -> . decision estatutos
    (40) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (59) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (62) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (41) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (48) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    CBRACKET        reduce using rule 101 (empty -> .)
    REGRESA         shift and go to state 61
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 225
    empty                          shift and go to state 51
    return                         shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 196

    (18) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET . estatutos CBRACKET
    (31) estatutos -> . empty
    (32) estatutos -> . return
    (33) estatutos -> . declaracion estatutos
    (34) estatutos -> . estatutoRepeticionIncondicional estatutos
    (35) estatutos -> . estatutoRepeticionCondicional estatutos
    (36) estatutos -> . lectura estatutos
    (37) estatutos -> . asignacion estatutos
    (38) estatutos -> . escritura estatutos
    (39) estatutos -> . decision estatutos
    (40) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (59) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (62) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (41) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (48) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    CBRACKET        reduce using rule 101 (empty -> .)
    REGRESA         shift and go to state 61
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 226
    empty                          shift and go to state 51
    return                         shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 197

    (13) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo . SEMICOLON
    (14) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo . COMA declaracion2

    SEMICOLON       shift and go to state 227
    COMA            shift and go to state 228


state 198

    (82) posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones .

    ASSIGN          reduce using rule 82 (posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones .)
    SEMICOLON       reduce using rule 82 (posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones .)
    COMA            reduce using rule 82 (posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones .)
    CPAREN          reduce using rule 82 (posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones .)


state 199

    (83) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones . OCORCH expresion CCORCH

    OCORCH          shift and go to state 229


state 200

    (84) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones . OCORCH expresion COMA expresion CCORCH

    OCORCH          shift and go to state 230


state 201

    (63) expresion -> expresion LOGIC np_insertarOperador expresion .
    (63) expresion -> expresion . LOGIC np_insertarOperador expresion
    (64) expresion -> expresion . RELOP np_insertarOperador expresion

  ! shift/reduce conflict for LOGIC resolved as shift
  ! shift/reduce conflict for RELOP resolved as shift
    SEMICOLON       reduce using rule 63 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    COMA            reduce using rule 63 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    CPAREN          reduce using rule 63 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    HAZ             reduce using rule 63 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    CCORCH          reduce using rule 63 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    LOGIC           shift and go to state 126
    RELOP           shift and go to state 127

  ! LOGIC           [ reduce using rule 63 (expresion -> expresion LOGIC np_insertarOperador expresion .) ]
  ! RELOP           [ reduce using rule 63 (expresion -> expresion LOGIC np_insertarOperador expresion .) ]


state 202

    (64) expresion -> expresion RELOP np_insertarOperador expresion .
    (63) expresion -> expresion . LOGIC np_insertarOperador expresion
    (64) expresion -> expresion . RELOP np_insertarOperador expresion

  ! shift/reduce conflict for LOGIC resolved as shift
  ! shift/reduce conflict for RELOP resolved as shift
    SEMICOLON       reduce using rule 64 (expresion -> expresion RELOP np_insertarOperador expresion .)
    COMA            reduce using rule 64 (expresion -> expresion RELOP np_insertarOperador expresion .)
    CPAREN          reduce using rule 64 (expresion -> expresion RELOP np_insertarOperador expresion .)
    HAZ             reduce using rule 64 (expresion -> expresion RELOP np_insertarOperador expresion .)
    CCORCH          reduce using rule 64 (expresion -> expresion RELOP np_insertarOperador expresion .)
    LOGIC           shift and go to state 126
    RELOP           shift and go to state 127

  ! LOGIC           [ reduce using rule 64 (expresion -> expresion RELOP np_insertarOperador expresion .) ]
  ! RELOP           [ reduce using rule 64 (expresion -> expresion RELOP np_insertarOperador expresion .) ]


state 203

    (66) termino -> termino PLUS np_insertarOperador termino .
    (66) termino -> termino . PLUS np_insertarOperador termino
    (67) termino -> termino . MINUS np_insertarOperador termino
    (68) termino -> termino . MULTIPLY np_insertarOperador termino
    (69) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 66 (termino -> termino PLUS np_insertarOperador termino .)
    MINUS           reduce using rule 66 (termino -> termino PLUS np_insertarOperador termino .)
    SEMICOLON       reduce using rule 66 (termino -> termino PLUS np_insertarOperador termino .)
    LOGIC           reduce using rule 66 (termino -> termino PLUS np_insertarOperador termino .)
    RELOP           reduce using rule 66 (termino -> termino PLUS np_insertarOperador termino .)
    COMA            reduce using rule 66 (termino -> termino PLUS np_insertarOperador termino .)
    CPAREN          reduce using rule 66 (termino -> termino PLUS np_insertarOperador termino .)
    HAZ             reduce using rule 66 (termino -> termino PLUS np_insertarOperador termino .)
    CCORCH          reduce using rule 66 (termino -> termino PLUS np_insertarOperador termino .)
    MULTIPLY        shift and go to state 130
    DIVIDE          shift and go to state 131

  ! MULTIPLY        [ reduce using rule 66 (termino -> termino PLUS np_insertarOperador termino .) ]
  ! DIVIDE          [ reduce using rule 66 (termino -> termino PLUS np_insertarOperador termino .) ]
  ! PLUS            [ shift and go to state 128 ]
  ! MINUS           [ shift and go to state 129 ]


state 204

    (67) termino -> termino MINUS np_insertarOperador termino .
    (66) termino -> termino . PLUS np_insertarOperador termino
    (67) termino -> termino . MINUS np_insertarOperador termino
    (68) termino -> termino . MULTIPLY np_insertarOperador termino
    (69) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 67 (termino -> termino MINUS np_insertarOperador termino .)
    MINUS           reduce using rule 67 (termino -> termino MINUS np_insertarOperador termino .)
    SEMICOLON       reduce using rule 67 (termino -> termino MINUS np_insertarOperador termino .)
    LOGIC           reduce using rule 67 (termino -> termino MINUS np_insertarOperador termino .)
    RELOP           reduce using rule 67 (termino -> termino MINUS np_insertarOperador termino .)
    COMA            reduce using rule 67 (termino -> termino MINUS np_insertarOperador termino .)
    CPAREN          reduce using rule 67 (termino -> termino MINUS np_insertarOperador termino .)
    HAZ             reduce using rule 67 (termino -> termino MINUS np_insertarOperador termino .)
    CCORCH          reduce using rule 67 (termino -> termino MINUS np_insertarOperador termino .)
    MULTIPLY        shift and go to state 130
    DIVIDE          shift and go to state 131

  ! MULTIPLY        [ reduce using rule 67 (termino -> termino MINUS np_insertarOperador termino .) ]
  ! DIVIDE          [ reduce using rule 67 (termino -> termino MINUS np_insertarOperador termino .) ]
  ! PLUS            [ shift and go to state 128 ]
  ! MINUS           [ shift and go to state 129 ]


state 205

    (68) termino -> termino MULTIPLY np_insertarOperador termino .
    (66) termino -> termino . PLUS np_insertarOperador termino
    (67) termino -> termino . MINUS np_insertarOperador termino
    (68) termino -> termino . MULTIPLY np_insertarOperador termino
    (69) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 68 (termino -> termino MULTIPLY np_insertarOperador termino .)
    MINUS           reduce using rule 68 (termino -> termino MULTIPLY np_insertarOperador termino .)
    MULTIPLY        reduce using rule 68 (termino -> termino MULTIPLY np_insertarOperador termino .)
    DIVIDE          reduce using rule 68 (termino -> termino MULTIPLY np_insertarOperador termino .)
    SEMICOLON       reduce using rule 68 (termino -> termino MULTIPLY np_insertarOperador termino .)
    LOGIC           reduce using rule 68 (termino -> termino MULTIPLY np_insertarOperador termino .)
    RELOP           reduce using rule 68 (termino -> termino MULTIPLY np_insertarOperador termino .)
    COMA            reduce using rule 68 (termino -> termino MULTIPLY np_insertarOperador termino .)
    CPAREN          reduce using rule 68 (termino -> termino MULTIPLY np_insertarOperador termino .)
    HAZ             reduce using rule 68 (termino -> termino MULTIPLY np_insertarOperador termino .)
    CCORCH          reduce using rule 68 (termino -> termino MULTIPLY np_insertarOperador termino .)

  ! PLUS            [ shift and go to state 128 ]
  ! MINUS           [ shift and go to state 129 ]
  ! MULTIPLY        [ shift and go to state 130 ]
  ! DIVIDE          [ shift and go to state 131 ]


state 206

    (69) termino -> termino DIVIDE np_insertarOperador termino .
    (66) termino -> termino . PLUS np_insertarOperador termino
    (67) termino -> termino . MINUS np_insertarOperador termino
    (68) termino -> termino . MULTIPLY np_insertarOperador termino
    (69) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 69 (termino -> termino DIVIDE np_insertarOperador termino .)
    MINUS           reduce using rule 69 (termino -> termino DIVIDE np_insertarOperador termino .)
    MULTIPLY        reduce using rule 69 (termino -> termino DIVIDE np_insertarOperador termino .)
    DIVIDE          reduce using rule 69 (termino -> termino DIVIDE np_insertarOperador termino .)
    SEMICOLON       reduce using rule 69 (termino -> termino DIVIDE np_insertarOperador termino .)
    LOGIC           reduce using rule 69 (termino -> termino DIVIDE np_insertarOperador termino .)
    RELOP           reduce using rule 69 (termino -> termino DIVIDE np_insertarOperador termino .)
    COMA            reduce using rule 69 (termino -> termino DIVIDE np_insertarOperador termino .)
    CPAREN          reduce using rule 69 (termino -> termino DIVIDE np_insertarOperador termino .)
    HAZ             reduce using rule 69 (termino -> termino DIVIDE np_insertarOperador termino .)
    CCORCH          reduce using rule 69 (termino -> termino DIVIDE np_insertarOperador termino .)

  ! PLUS            [ shift and go to state 128 ]
  ! MINUS           [ shift and go to state 129 ]
  ! MULTIPLY        [ shift and go to state 130 ]
  ! DIVIDE          [ shift and go to state 131 ]


state 207

    (77) termino1 -> OPAREN np_insertarOperador expresion CPAREN . np_insertarOperador
    (70) np_insertarOperador -> .

    OPMATRIZ        reduce using rule 70 (np_insertarOperador -> .)
    PLUS            reduce using rule 70 (np_insertarOperador -> .)
    MINUS           reduce using rule 70 (np_insertarOperador -> .)
    MULTIPLY        reduce using rule 70 (np_insertarOperador -> .)
    DIVIDE          reduce using rule 70 (np_insertarOperador -> .)
    SEMICOLON       reduce using rule 70 (np_insertarOperador -> .)
    LOGIC           reduce using rule 70 (np_insertarOperador -> .)
    RELOP           reduce using rule 70 (np_insertarOperador -> .)
    COMA            reduce using rule 70 (np_insertarOperador -> .)
    CPAREN          reduce using rule 70 (np_insertarOperador -> .)
    HAZ             reduce using rule 70 (np_insertarOperador -> .)
    CCORCH          reduce using rule 70 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 231

state 208

    (88) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion . HAZ OBRACKET estatutos CBRACKET
    (63) expresion -> expresion . LOGIC np_insertarOperador expresion
    (64) expresion -> expresion . RELOP np_insertarOperador expresion

    HAZ             shift and go to state 232
    LOGIC           shift and go to state 126
    RELOP           shift and go to state 127


state 209

    (54) llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .

    SEMICOLON       reduce using rule 54 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    OPMATRIZ        reduce using rule 54 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    PLUS            reduce using rule 54 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    MINUS           reduce using rule 54 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    MULTIPLY        reduce using rule 54 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    DIVIDE          reduce using rule 54 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    LOGIC           reduce using rule 54 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    RELOP           reduce using rule 54 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    COMA            reduce using rule 54 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    CPAREN          reduce using rule 54 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    HAZ             reduce using rule 54 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    CCORCH          reduce using rule 54 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)


state 210

    (57) extraParametros -> COMA expresion . extraParametros
    (63) expresion -> expresion . LOGIC np_insertarOperador expresion
    (64) expresion -> expresion . RELOP np_insertarOperador expresion
    (57) extraParametros -> . COMA expresion extraParametros
    (58) extraParametros -> . empty
    (101) empty -> .

    LOGIC           shift and go to state 126
    RELOP           shift and go to state 127
    COMA            shift and go to state 176
    CPAREN          reduce using rule 101 (empty -> .)

    extraParametros                shift and go to state 233
    empty                          shift and go to state 177

state 211

    (80) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo . expresion np_quitarFondo CCORCH
    (81) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo . expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (63) expresion -> . expresion LOGIC np_insertarOperador expresion
    (64) expresion -> . expresion RELOP np_insertarOperador expresion
    (65) expresion -> . termino
    (66) termino -> . termino PLUS np_insertarOperador termino
    (67) termino -> . termino MINUS np_insertarOperador termino
    (68) termino -> . termino MULTIPLY np_insertarOperador termino
    (69) termino -> . termino DIVIDE np_insertarOperador termino
    (71) termino -> . termino1 OPMATRIZ np_insertarOperador
    (72) termino -> . termino1
    (73) termino1 -> . posibleID
    (74) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (75) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (76) termino1 -> . llamadaFuncion
    (77) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (78) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    OPAREN          shift and go to state 99
    QUOT            shift and go to state 100
    ID              shift and go to state 101

    expresion                      shift and go to state 234
    termino                        shift and go to state 93
    termino1                       shift and go to state 94
    posibleID                      shift and go to state 95
    llamadaFuncion                 shift and go to state 98

state 212

    (89) estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ . OBRACKET estatutos CBRACKET

    OBRACKET        shift and go to state 235


state 213

    (59) lectura -> LEE OPAREN posibleID lectura2 CPAREN . SEMICOLON

    SEMICOLON       shift and go to state 236


state 214

    (61) lectura2 -> COMA posibleID . lectura2
    (60) lectura2 -> . empty
    (61) lectura2 -> . COMA posibleID lectura2
    (101) empty -> .

    COMA            shift and go to state 182
    CPAREN          reduce using rule 101 (empty -> .)

    lectura2                       shift and go to state 237
    empty                          shift and go to state 181

state 215

    (62) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo . expresion np_quitarFondo np_quitarFondo SEMICOLON
    (63) expresion -> . expresion LOGIC np_insertarOperador expresion
    (64) expresion -> . expresion RELOP np_insertarOperador expresion
    (65) expresion -> . termino
    (66) termino -> . termino PLUS np_insertarOperador termino
    (67) termino -> . termino MINUS np_insertarOperador termino
    (68) termino -> . termino MULTIPLY np_insertarOperador termino
    (69) termino -> . termino DIVIDE np_insertarOperador termino
    (71) termino -> . termino1 OPMATRIZ np_insertarOperador
    (72) termino -> . termino1
    (73) termino1 -> . posibleID
    (74) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (75) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (76) termino1 -> . llamadaFuncion
    (77) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (78) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    OPAREN          shift and go to state 99
    QUOT            shift and go to state 100
    ID              shift and go to state 101

    posibleID                      shift and go to state 95
    expresion                      shift and go to state 238
    termino                        shift and go to state 93
    termino1                       shift and go to state 94
    llamadaFuncion                 shift and go to state 98

state 216

    (41) escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .

    REGRESA         reduce using rule 41 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    VAR             reduce using rule 41 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    DESDE           reduce using rule 41 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 41 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    LEE             reduce using rule 41 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 41 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    SI              reduce using rule 41 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    ID              reduce using rule 41 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    CBRACKET        reduce using rule 41 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)


state 217

    (46) escritura3 -> COMA expresion . escritura3
    (63) expresion -> expresion . LOGIC np_insertarOperador expresion
    (64) expresion -> expresion . RELOP np_insertarOperador expresion
    (45) escritura3 -> . empty
    (46) escritura3 -> . COMA expresion escritura3
    (47) escritura3 -> . COMA STRING escritura3
    (101) empty -> .

    LOGIC           shift and go to state 126
    RELOP           shift and go to state 127
    COMA            shift and go to state 187
    CPAREN          reduce using rule 101 (empty -> .)

    escritura3                     shift and go to state 239
    empty                          shift and go to state 186

state 218

    (47) escritura3 -> COMA STRING . escritura3
    (45) escritura3 -> . empty
    (46) escritura3 -> . COMA expresion escritura3
    (47) escritura3 -> . COMA STRING escritura3
    (101) empty -> .

    COMA            shift and go to state 187
    CPAREN          reduce using rule 101 (empty -> .)

    escritura3                     shift and go to state 240
    empty                          shift and go to state 186

state 219

    (48) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo . np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo . np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (50) np_iniciaIf -> .

    CPAREN          reduce using rule 50 (np_iniciaIf -> .)

    np_iniciaIf                    shift and go to state 241

state 220

    (15) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN np_termino declaracionFuncionVariables np_termino . OBRACKET estatutos CBRACKET

    OBRACKET        shift and go to state 242


state 221

    (21) declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (24) declaracionFuncionParametros2 -> . empty
    (25) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (26) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (27) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (101) empty -> .

    COMA            shift and go to state 245
    CPAREN          reduce using rule 101 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 243
    empty                          shift and go to state 244

state 222

    (22) declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (24) declaracionFuncionParametros2 -> . empty
    (25) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (26) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (27) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (101) empty -> .

    COMA            shift and go to state 245
    CPAREN          reduce using rule 101 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 246
    empty                          shift and go to state 244

state 223

    (23) declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (24) declaracionFuncionParametros2 -> . empty
    (25) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (26) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (27) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (101) empty -> .

    COMA            shift and go to state 245
    CPAREN          reduce using rule 101 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 247
    empty                          shift and go to state 244

state 224

    (16) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos . CBRACKET

    CBRACKET        shift and go to state 248


state 225

    (17) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos . CBRACKET

    CBRACKET        shift and go to state 249


state 226

    (18) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos . CBRACKET

    CBRACKET        shift and go to state 250


state 227

    (13) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .

    VAR             reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    FUNCION         reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    REGRESA         reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    DESDE           reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    MIENTRAS        reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    LEE             reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    ESCRIBE         reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    SI              reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    ID              reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    CBRACKET        reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    OBRACKET        reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)


state 228

    (14) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA . declaracion2
    (10) declaracion2 -> . np_agregarFondo posibleIDDeclaracion declaracion3
    (98) np_agregarFondo -> .

    ID              reduce using rule 98 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 251
    np_agregarFondo                shift and go to state 38

state 229

    (83) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH . expresion CCORCH
    (63) expresion -> . expresion LOGIC np_insertarOperador expresion
    (64) expresion -> . expresion RELOP np_insertarOperador expresion
    (65) expresion -> . termino
    (66) termino -> . termino PLUS np_insertarOperador termino
    (67) termino -> . termino MINUS np_insertarOperador termino
    (68) termino -> . termino MULTIPLY np_insertarOperador termino
    (69) termino -> . termino DIVIDE np_insertarOperador termino
    (71) termino -> . termino1 OPMATRIZ np_insertarOperador
    (72) termino -> . termino1
    (73) termino1 -> . posibleID
    (74) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (75) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (76) termino1 -> . llamadaFuncion
    (77) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (78) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    OPAREN          shift and go to state 99
    QUOT            shift and go to state 100
    ID              shift and go to state 101

    expresion                      shift and go to state 252
    termino                        shift and go to state 93
    termino1                       shift and go to state 94
    posibleID                      shift and go to state 95
    llamadaFuncion                 shift and go to state 98

state 230

    (84) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH . expresion COMA expresion CCORCH
    (63) expresion -> . expresion LOGIC np_insertarOperador expresion
    (64) expresion -> . expresion RELOP np_insertarOperador expresion
    (65) expresion -> . termino
    (66) termino -> . termino PLUS np_insertarOperador termino
    (67) termino -> . termino MINUS np_insertarOperador termino
    (68) termino -> . termino MULTIPLY np_insertarOperador termino
    (69) termino -> . termino DIVIDE np_insertarOperador termino
    (71) termino -> . termino1 OPMATRIZ np_insertarOperador
    (72) termino -> . termino1
    (73) termino1 -> . posibleID
    (74) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (75) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (76) termino1 -> . llamadaFuncion
    (77) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (78) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    OPAREN          shift and go to state 99
    QUOT            shift and go to state 100
    ID              shift and go to state 101

    expresion                      shift and go to state 253
    termino                        shift and go to state 93
    termino1                       shift and go to state 94
    posibleID                      shift and go to state 95
    llamadaFuncion                 shift and go to state 98

state 231

    (77) termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .

    OPMATRIZ        reduce using rule 77 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    PLUS            reduce using rule 77 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    MINUS           reduce using rule 77 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    MULTIPLY        reduce using rule 77 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    DIVIDE          reduce using rule 77 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    SEMICOLON       reduce using rule 77 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    LOGIC           reduce using rule 77 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    RELOP           reduce using rule 77 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    COMA            reduce using rule 77 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    CPAREN          reduce using rule 77 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    HAZ             reduce using rule 77 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    CCORCH          reduce using rule 77 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)


state 232

    (88) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ . OBRACKET estatutos CBRACKET

    OBRACKET        shift and go to state 254


state 233

    (57) extraParametros -> COMA expresion extraParametros .

    CPAREN          reduce using rule 57 (extraParametros -> COMA expresion extraParametros .)


state 234

    (80) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion . np_quitarFondo CCORCH
    (81) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion . np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (63) expresion -> expresion . LOGIC np_insertarOperador expresion
    (64) expresion -> expresion . RELOP np_insertarOperador expresion
    (99) np_quitarFondo -> .

    LOGIC           shift and go to state 126
    RELOP           shift and go to state 127
    CCORCH          reduce using rule 99 (np_quitarFondo -> .)
    COMA            reduce using rule 99 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 255

state 235

    (89) estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET . estatutos CBRACKET
    (31) estatutos -> . empty
    (32) estatutos -> . return
    (33) estatutos -> . declaracion estatutos
    (34) estatutos -> . estatutoRepeticionIncondicional estatutos
    (35) estatutos -> . estatutoRepeticionCondicional estatutos
    (36) estatutos -> . lectura estatutos
    (37) estatutos -> . asignacion estatutos
    (38) estatutos -> . escritura estatutos
    (39) estatutos -> . decision estatutos
    (40) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (59) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (62) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (41) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (48) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    CBRACKET        reduce using rule 101 (empty -> .)
    REGRESA         shift and go to state 61
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 256
    empty                          shift and go to state 51
    return                         shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 236

    (59) lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .

    REGRESA         reduce using rule 59 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    VAR             reduce using rule 59 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    DESDE           reduce using rule 59 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 59 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    LEE             reduce using rule 59 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 59 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    SI              reduce using rule 59 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    ID              reduce using rule 59 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    CBRACKET        reduce using rule 59 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)


state 237

    (61) lectura2 -> COMA posibleID lectura2 .

    CPAREN          reduce using rule 61 (lectura2 -> COMA posibleID lectura2 .)


state 238

    (62) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion . np_quitarFondo np_quitarFondo SEMICOLON
    (63) expresion -> expresion . LOGIC np_insertarOperador expresion
    (64) expresion -> expresion . RELOP np_insertarOperador expresion
    (99) np_quitarFondo -> .

    LOGIC           shift and go to state 126
    RELOP           shift and go to state 127
    SEMICOLON       reduce using rule 99 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 257

state 239

    (46) escritura3 -> COMA expresion escritura3 .

    CPAREN          reduce using rule 46 (escritura3 -> COMA expresion escritura3 .)


state 240

    (47) escritura3 -> COMA STRING escritura3 .

    CPAREN          reduce using rule 47 (escritura3 -> COMA STRING escritura3 .)


state 241

    (48) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf . CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf . CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf

    CPAREN          shift and go to state 258


state 242

    (15) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN np_termino declaracionFuncionVariables np_termino OBRACKET . estatutos CBRACKET
    (31) estatutos -> . empty
    (32) estatutos -> . return
    (33) estatutos -> . declaracion estatutos
    (34) estatutos -> . estatutoRepeticionIncondicional estatutos
    (35) estatutos -> . estatutoRepeticionCondicional estatutos
    (36) estatutos -> . lectura estatutos
    (37) estatutos -> . asignacion estatutos
    (38) estatutos -> . escritura estatutos
    (39) estatutos -> . decision estatutos
    (40) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (59) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (62) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (41) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (48) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    CBRACKET        reduce using rule 101 (empty -> .)
    REGRESA         shift and go to state 61
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 259
    empty                          shift and go to state 51
    return                         shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 243

    (21) declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 21 (declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 244

    (24) declaracionFuncionParametros2 -> empty .

    CPAREN          reduce using rule 24 (declaracionFuncionParametros2 -> empty .)


state 245

    (25) declaracionFuncionParametros2 -> COMA . INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (26) declaracionFuncionParametros2 -> COMA . FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (27) declaracionFuncionParametros2 -> COMA . CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2

    INT             shift and go to state 260
    FLOAT           shift and go to state 261
    CHAR            shift and go to state 262


state 246

    (22) declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 22 (declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 247

    (23) declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 23 (declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 248

    (16) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET .

    PRINCIPAL       reduce using rule 16 (declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET .)


state 249

    (17) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET .

    PRINCIPAL       reduce using rule 17 (declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET .)


state 250

    (18) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET .

    PRINCIPAL       reduce using rule 18 (declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET .)


state 251

    (14) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .

    VAR             reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    FUNCION         reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    REGRESA         reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    DESDE           reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    MIENTRAS        reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    LEE             reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    ESCRIBE         reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    SI              reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    ID              reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    CBRACKET        reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    OBRACKET        reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)


state 252

    (83) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion . CCORCH
    (63) expresion -> expresion . LOGIC np_insertarOperador expresion
    (64) expresion -> expresion . RELOP np_insertarOperador expresion

    CCORCH          shift and go to state 263
    LOGIC           shift and go to state 126
    RELOP           shift and go to state 127


state 253

    (84) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion . COMA expresion CCORCH
    (63) expresion -> expresion . LOGIC np_insertarOperador expresion
    (64) expresion -> expresion . RELOP np_insertarOperador expresion

    COMA            shift and go to state 264
    LOGIC           shift and go to state 126
    RELOP           shift and go to state 127


state 254

    (88) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET . estatutos CBRACKET
    (31) estatutos -> . empty
    (32) estatutos -> . return
    (33) estatutos -> . declaracion estatutos
    (34) estatutos -> . estatutoRepeticionIncondicional estatutos
    (35) estatutos -> . estatutoRepeticionCondicional estatutos
    (36) estatutos -> . lectura estatutos
    (37) estatutos -> . asignacion estatutos
    (38) estatutos -> . escritura estatutos
    (39) estatutos -> . decision estatutos
    (40) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (59) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (62) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (41) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (48) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    CBRACKET        reduce using rule 101 (empty -> .)
    REGRESA         shift and go to state 61
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 265
    empty                          shift and go to state 51
    return                         shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 255

    (80) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo . CCORCH
    (81) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo . COMA np_agregarFondo expresion np_quitarFondo CCORCH

    CCORCH          shift and go to state 266
    COMA            shift and go to state 267


state 256

    (89) estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos . CBRACKET

    CBRACKET        shift and go to state 268


state 257

    (62) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo . np_quitarFondo SEMICOLON
    (99) np_quitarFondo -> .

    SEMICOLON       reduce using rule 99 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 269

state 258

    (48) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN . ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN . ENTONCES OBRACKET estatutos CBRACKET np_terminaIf

    ENTONCES        shift and go to state 270


state 259

    (15) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN np_termino declaracionFuncionVariables np_termino OBRACKET estatutos . CBRACKET

    CBRACKET        shift and go to state 271


state 260

    (25) declaracionFuncionParametros2 -> COMA INT . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (9) np_defineTipo -> .

    ID              reduce using rule 9 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 272

state 261

    (26) declaracionFuncionParametros2 -> COMA FLOAT . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (9) np_defineTipo -> .

    ID              reduce using rule 9 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 273

state 262

    (27) declaracionFuncionParametros2 -> COMA CHAR . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (9) np_defineTipo -> .

    ID              reduce using rule 9 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 274

state 263

    (83) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH .

    ASSIGN          reduce using rule 83 (posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH .)
    SEMICOLON       reduce using rule 83 (posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH .)
    COMA            reduce using rule 83 (posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH .)
    CPAREN          reduce using rule 83 (posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH .)


state 264

    (84) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA . expresion CCORCH
    (63) expresion -> . expresion LOGIC np_insertarOperador expresion
    (64) expresion -> . expresion RELOP np_insertarOperador expresion
    (65) expresion -> . termino
    (66) termino -> . termino PLUS np_insertarOperador termino
    (67) termino -> . termino MINUS np_insertarOperador termino
    (68) termino -> . termino MULTIPLY np_insertarOperador termino
    (69) termino -> . termino DIVIDE np_insertarOperador termino
    (71) termino -> . termino1 OPMATRIZ np_insertarOperador
    (72) termino -> . termino1
    (73) termino1 -> . posibleID
    (74) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (75) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (76) termino1 -> . llamadaFuncion
    (77) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (78) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    OPAREN          shift and go to state 99
    QUOT            shift and go to state 100
    ID              shift and go to state 101

    expresion                      shift and go to state 275
    termino                        shift and go to state 93
    termino1                       shift and go to state 94
    posibleID                      shift and go to state 95
    llamadaFuncion                 shift and go to state 98

state 265

    (88) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos . CBRACKET

    CBRACKET        shift and go to state 276


state 266

    (80) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .

    ASSIGN          reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    OPMATRIZ        reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    PLUS            reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    MINUS           reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    MULTIPLY        reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    DIVIDE          reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    SEMICOLON       reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    LOGIC           reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    RELOP           reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    COMA            reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    CPAREN          reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    HAZ             reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    CCORCH          reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)


state 267

    (81) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA . np_agregarFondo expresion np_quitarFondo CCORCH
    (98) np_agregarFondo -> .

    ENTERO          reduce using rule 98 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 98 (np_agregarFondo -> .)
    OPAREN          reduce using rule 98 (np_agregarFondo -> .)
    QUOT            reduce using rule 98 (np_agregarFondo -> .)
    ID              reduce using rule 98 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 277

state 268

    (89) estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .

    REGRESA         reduce using rule 89 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    VAR             reduce using rule 89 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    DESDE           reduce using rule 89 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    MIENTRAS        reduce using rule 89 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    LEE             reduce using rule 89 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    ESCRIBE         reduce using rule 89 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    SI              reduce using rule 89 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    ID              reduce using rule 89 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    CBRACKET        reduce using rule 89 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)


state 269

    (62) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo . SEMICOLON

    SEMICOLON       shift and go to state 278


state 270

    (48) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES . OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES . OBRACKET estatutos CBRACKET np_terminaIf

    OBRACKET        shift and go to state 279


state 271

    (15) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN np_termino declaracionFuncionVariables np_termino OBRACKET estatutos CBRACKET .

    PRINCIPAL       reduce using rule 15 (declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN np_termino declaracionFuncionVariables np_termino OBRACKET estatutos CBRACKET .)


state 272

    (25) declaracionFuncionParametros2 -> COMA INT np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (98) np_agregarFondo -> .

    ID              reduce using rule 98 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 280

state 273

    (26) declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (98) np_agregarFondo -> .

    ID              reduce using rule 98 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 281

state 274

    (27) declaracionFuncionParametros2 -> COMA CHAR np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (98) np_agregarFondo -> .

    ID              reduce using rule 98 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 282

state 275

    (84) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion . CCORCH
    (63) expresion -> expresion . LOGIC np_insertarOperador expresion
    (64) expresion -> expresion . RELOP np_insertarOperador expresion

    CCORCH          shift and go to state 283
    LOGIC           shift and go to state 126
    RELOP           shift and go to state 127


state 276

    (88) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .

    REGRESA         reduce using rule 88 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    VAR             reduce using rule 88 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    DESDE           reduce using rule 88 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    MIENTRAS        reduce using rule 88 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    LEE             reduce using rule 88 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    ESCRIBE         reduce using rule 88 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    SI              reduce using rule 88 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    ID              reduce using rule 88 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    CBRACKET        reduce using rule 88 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)


state 277

    (81) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo . expresion np_quitarFondo CCORCH
    (63) expresion -> . expresion LOGIC np_insertarOperador expresion
    (64) expresion -> . expresion RELOP np_insertarOperador expresion
    (65) expresion -> . termino
    (66) termino -> . termino PLUS np_insertarOperador termino
    (67) termino -> . termino MINUS np_insertarOperador termino
    (68) termino -> . termino MULTIPLY np_insertarOperador termino
    (69) termino -> . termino DIVIDE np_insertarOperador termino
    (71) termino -> . termino1 OPMATRIZ np_insertarOperador
    (72) termino -> . termino1
    (73) termino1 -> . posibleID
    (74) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (75) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (76) termino1 -> . llamadaFuncion
    (77) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (78) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    OPAREN          shift and go to state 99
    QUOT            shift and go to state 100
    ID              shift and go to state 101

    expresion                      shift and go to state 284
    termino                        shift and go to state 93
    termino1                       shift and go to state 94
    posibleID                      shift and go to state 95
    llamadaFuncion                 shift and go to state 98

state 278

    (62) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .

    REGRESA         reduce using rule 62 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    VAR             reduce using rule 62 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    DESDE           reduce using rule 62 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    MIENTRAS        reduce using rule 62 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    LEE             reduce using rule 62 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    ESCRIBE         reduce using rule 62 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    SI              reduce using rule 62 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    ID              reduce using rule 62 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    CBRACKET        reduce using rule 62 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)


state 279

    (48) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET . estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET . estatutos CBRACKET np_terminaIf
    (31) estatutos -> . empty
    (32) estatutos -> . return
    (33) estatutos -> . declaracion estatutos
    (34) estatutos -> . estatutoRepeticionIncondicional estatutos
    (35) estatutos -> . estatutoRepeticionCondicional estatutos
    (36) estatutos -> . lectura estatutos
    (37) estatutos -> . asignacion estatutos
    (38) estatutos -> . escritura estatutos
    (39) estatutos -> . decision estatutos
    (40) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (59) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (62) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (41) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (48) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    CBRACKET        reduce using rule 101 (empty -> .)
    REGRESA         shift and go to state 61
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 285
    empty                          shift and go to state 51
    return                         shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 280

    (25) declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (82) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (83) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (84) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (85) np_updateCurrentDimension0 -> .
    (86) np_updateCurrentDimension1 -> .
    (87) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 85 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 85 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 85 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 86 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 87 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 286
    np_updateCurrentDimension0     shift and go to state 47
    np_updateCurrentDimension1     shift and go to state 48
    np_updateCurrentDimension2     shift and go to state 49

state 281

    (26) declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (82) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (83) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (84) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (85) np_updateCurrentDimension0 -> .
    (86) np_updateCurrentDimension1 -> .
    (87) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 85 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 85 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 85 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 86 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 87 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 287
    np_updateCurrentDimension0     shift and go to state 47
    np_updateCurrentDimension1     shift and go to state 48
    np_updateCurrentDimension2     shift and go to state 49

state 282

    (27) declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (82) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (83) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (84) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (85) np_updateCurrentDimension0 -> .
    (86) np_updateCurrentDimension1 -> .
    (87) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 85 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 85 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 85 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 86 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 87 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 288
    np_updateCurrentDimension0     shift and go to state 47
    np_updateCurrentDimension1     shift and go to state 48
    np_updateCurrentDimension2     shift and go to state 49

state 283

    (84) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH .

    ASSIGN          reduce using rule 84 (posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH .)
    SEMICOLON       reduce using rule 84 (posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH .)
    COMA            reduce using rule 84 (posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH .)
    CPAREN          reduce using rule 84 (posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH .)


state 284

    (81) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion . np_quitarFondo CCORCH
    (63) expresion -> expresion . LOGIC np_insertarOperador expresion
    (64) expresion -> expresion . RELOP np_insertarOperador expresion
    (99) np_quitarFondo -> .

    LOGIC           shift and go to state 126
    RELOP           shift and go to state 127
    CCORCH          reduce using rule 99 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 289

state 285

    (48) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos . CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos . CBRACKET np_terminaIf

    CBRACKET        shift and go to state 290


state 286

    (25) declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (99) np_quitarFondo -> .

    COMA            reduce using rule 99 (np_quitarFondo -> .)
    CPAREN          reduce using rule 99 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 291

state 287

    (26) declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (99) np_quitarFondo -> .

    COMA            reduce using rule 99 (np_quitarFondo -> .)
    CPAREN          reduce using rule 99 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 292

state 288

    (27) declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (99) np_quitarFondo -> .

    COMA            reduce using rule 99 (np_quitarFondo -> .)
    CPAREN          reduce using rule 99 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 293

state 289

    (81) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo . CCORCH

    CCORCH          shift and go to state 294


state 290

    (48) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET . SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET . np_terminaIf
    (51) np_terminaIf -> .

    SINO            shift and go to state 295
    REGRESA         reduce using rule 51 (np_terminaIf -> .)
    VAR             reduce using rule 51 (np_terminaIf -> .)
    DESDE           reduce using rule 51 (np_terminaIf -> .)
    MIENTRAS        reduce using rule 51 (np_terminaIf -> .)
    LEE             reduce using rule 51 (np_terminaIf -> .)
    ESCRIBE         reduce using rule 51 (np_terminaIf -> .)
    SI              reduce using rule 51 (np_terminaIf -> .)
    ID              reduce using rule 51 (np_terminaIf -> .)
    CBRACKET        reduce using rule 51 (np_terminaIf -> .)

    np_terminaIf                   shift and go to state 296

state 291

    (25) declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (24) declaracionFuncionParametros2 -> . empty
    (25) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (26) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (27) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (101) empty -> .

    COMA            shift and go to state 245
    CPAREN          reduce using rule 101 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 297
    empty                          shift and go to state 244

state 292

    (26) declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (24) declaracionFuncionParametros2 -> . empty
    (25) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (26) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (27) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (101) empty -> .

    COMA            shift and go to state 245
    CPAREN          reduce using rule 101 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 298
    empty                          shift and go to state 244

state 293

    (27) declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (24) declaracionFuncionParametros2 -> . empty
    (25) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (26) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (27) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (101) empty -> .

    COMA            shift and go to state 245
    CPAREN          reduce using rule 101 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 299
    empty                          shift and go to state 244

state 294

    (81) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .

    ASSIGN          reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    OPMATRIZ        reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    PLUS            reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    MINUS           reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    MULTIPLY        reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    DIVIDE          reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    SEMICOLON       reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    LOGIC           reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    RELOP           reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    COMA            reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    CPAREN          reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    HAZ             reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    CCORCH          reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)


state 295

    (48) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO . OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET

    OBRACKET        shift and go to state 300


state 296

    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .

    REGRESA         reduce using rule 49 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    VAR             reduce using rule 49 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    DESDE           reduce using rule 49 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    MIENTRAS        reduce using rule 49 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    LEE             reduce using rule 49 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    ESCRIBE         reduce using rule 49 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    SI              reduce using rule 49 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    ID              reduce using rule 49 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    CBRACKET        reduce using rule 49 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)


state 297

    (25) declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 25 (declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 298

    (26) declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 26 (declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 299

    (27) declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 27 (declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 300

    (48) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET . np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (52) np_iniciaElse -> .

    REGRESA         reduce using rule 52 (np_iniciaElse -> .)
    VAR             reduce using rule 52 (np_iniciaElse -> .)
    DESDE           reduce using rule 52 (np_iniciaElse -> .)
    MIENTRAS        reduce using rule 52 (np_iniciaElse -> .)
    LEE             reduce using rule 52 (np_iniciaElse -> .)
    ESCRIBE         reduce using rule 52 (np_iniciaElse -> .)
    SI              reduce using rule 52 (np_iniciaElse -> .)
    ID              reduce using rule 52 (np_iniciaElse -> .)
    CBRACKET        reduce using rule 52 (np_iniciaElse -> .)

    np_iniciaElse                  shift and go to state 301

state 301

    (48) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse . np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (98) np_agregarFondo -> .

    REGRESA         reduce using rule 98 (np_agregarFondo -> .)
    VAR             reduce using rule 98 (np_agregarFondo -> .)
    DESDE           reduce using rule 98 (np_agregarFondo -> .)
    MIENTRAS        reduce using rule 98 (np_agregarFondo -> .)
    LEE             reduce using rule 98 (np_agregarFondo -> .)
    ESCRIBE         reduce using rule 98 (np_agregarFondo -> .)
    SI              reduce using rule 98 (np_agregarFondo -> .)
    ID              reduce using rule 98 (np_agregarFondo -> .)
    CBRACKET        reduce using rule 98 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 302

state 302

    (48) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo . estatutos np_quitarFondo np_terminaElse CBRACKET
    (31) estatutos -> . empty
    (32) estatutos -> . return
    (33) estatutos -> . declaracion estatutos
    (34) estatutos -> . estatutoRepeticionIncondicional estatutos
    (35) estatutos -> . estatutoRepeticionCondicional estatutos
    (36) estatutos -> . lectura estatutos
    (37) estatutos -> . asignacion estatutos
    (38) estatutos -> . escritura estatutos
    (39) estatutos -> . decision estatutos
    (40) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (59) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (62) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (41) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (48) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (54) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    CBRACKET        reduce using rule 101 (empty -> .)
    REGRESA         shift and go to state 61
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 303
    empty                          shift and go to state 51
    return                         shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 303

    (48) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos . np_quitarFondo np_terminaElse CBRACKET
    (99) np_quitarFondo -> .

    CBRACKET        reduce using rule 99 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 304

state 304

    (48) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo . np_terminaElse CBRACKET
    (53) np_terminaElse -> .

    CBRACKET        reduce using rule 53 (np_terminaElse -> .)

    np_terminaElse                 shift and go to state 305

state 305

    (48) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse . CBRACKET

    CBRACKET        shift and go to state 306


state 306

    (48) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .

    REGRESA         reduce using rule 48 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    VAR             reduce using rule 48 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    DESDE           reduce using rule 48 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    MIENTRAS        reduce using rule 48 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    LEE             reduce using rule 48 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    ESCRIBE         reduce using rule 48 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    SI              reduce using rule 48 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    ID              reduce using rule 48 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    CBRACKET        reduce using rule 48 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LOGIC in state 201 resolved as shift
WARNING: shift/reduce conflict for RELOP in state 201 resolved as shift
WARNING: shift/reduce conflict for LOGIC in state 202 resolved as shift
WARNING: shift/reduce conflict for RELOP in state 202 resolved as shift
WARNING: reduce/reduce conflict in state 38 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 38
WARNING: reduce/reduce conflict in state 38 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 38
WARNING: reduce/reduce conflict in state 152 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 152
WARNING: reduce/reduce conflict in state 152 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 152
WARNING: reduce/reduce conflict in state 153 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 153
WARNING: reduce/reduce conflict in state 153 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 153
WARNING: reduce/reduce conflict in state 154 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 154
WARNING: reduce/reduce conflict in state 154 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 154
WARNING: reduce/reduce conflict in state 280 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 280
WARNING: reduce/reduce conflict in state 280 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 280
WARNING: reduce/reduce conflict in state 281 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 281
WARNING: reduce/reduce conflict in state 281 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 281
WARNING: reduce/reduce conflict in state 282 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 282
WARNING: reduce/reduce conflict in state 282 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 282
WARNING: Rule (np_updateCurrentDimension1 -> <empty>) is never reduced
WARNING: Rule (np_updateCurrentDimension2 -> <empty>) is never reduced
