Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMENTARIO
    IGNORE
    NEWLINE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMICOLON programa2
Rule 2     programa2 -> declaracion programa2
Rule 3     programa2 -> programa3
Rule 4     programa3 -> declaracionFuncion programa3
Rule 5     programa3 -> principal
Rule 6     principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos
Rule 7     declaracion -> VAR INT np_defineTipo COLON declaracion2
Rule 8     declaracion -> VAR FLOAT np_defineTipo COLON declaracion2
Rule 9     declaracion -> VAR CHAR np_defineTipo COLON declaracion2
Rule 10    np_defineTipo -> <empty>
Rule 11    declaracion2 -> posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3
Rule 12    declaracion3 -> SEMICOLON
Rule 13    declaracion3 -> COMA declaracion2
Rule 14    declaracion3 -> ASSIGN expresion SEMICOLON
Rule 15    declaracion3 -> ASSIGN expresion COMA declaracion2
Rule 16    declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
Rule 17    declaracionFuncionParametros -> empty
Rule 18    declaracionFuncionParametros -> INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
Rule 19    declaracionFuncionParametros -> FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
Rule 20    declaracionFuncionParametros -> CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
Rule 21    declaracionFuncionParametros2 -> empty
Rule 22    declaracionFuncionParametros2 -> COMA INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
Rule 23    declaracionFuncionParametros2 -> COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
Rule 24    declaracionFuncionParametros2 -> COMA CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
Rule 25    declaracionFuncionVariables -> empty
Rule 26    declaracionFuncionVariables -> declaracion
Rule 27    npdeclfunc -> <empty>
Rule 28    estatutos -> empty
Rule 29    estatutos -> return
Rule 30    estatutos -> declaracion estatutos
Rule 31    estatutos -> estatutoRepeticionIncondicional estatutos
Rule 32    estatutos -> estatutoRepeticionCondicional estatutos
Rule 33    estatutos -> lectura estatutos
Rule 34    estatutos -> asignacion estatutos
Rule 35    estatutos -> escritura estatutos
Rule 36    estatutos -> decision estatutos
Rule 37    estatutos -> llamadaFuncion SEMICOLON estatutos
Rule 38    escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
Rule 39    escritura2 -> empty
Rule 40    escritura2 -> posibleID escritura3
Rule 41    escritura2 -> STRING escritura3
Rule 42    escritura3 -> empty
Rule 43    escritura3 -> COMA expresion escritura3
Rule 44    escritura3 -> COMA STRING escritura3
Rule 45    decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
Rule 46    decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
Rule 47    np_iniciaIf -> <empty>
Rule 48    np_terminaIf -> <empty>
Rule 49    np_iniciaElse -> <empty>
Rule 50    np_terminaElse -> <empty>
Rule 51    llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN
Rule 52    primerParametro -> expresion
Rule 53    primerParametro -> empty
Rule 54    extraParametros -> COMA expresion extraParametros
Rule 55    extraParametros -> empty
Rule 56    lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
Rule 57    lectura2 -> empty
Rule 58    lectura2 -> COMA posibleID lectura2
Rule 59    asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON
Rule 60    expresion -> expresion LOGIC np_insertarOperador expresion
Rule 61    expresion -> expresion RELOP np_insertarOperador expresion
Rule 62    expresion -> termino
Rule 63    termino -> termino PLUS np_insertarOperador termino
Rule 64    termino -> termino MINUS np_insertarOperador termino
Rule 65    termino -> termino MULTIPLY np_insertarOperador termino
Rule 66    termino -> termino DIVIDE np_insertarOperador termino
Rule 67    np_insertarOperador -> <empty>
Rule 68    termino -> termino1 OPMATRIZ np_insertarOperador
Rule 69    termino -> termino1
Rule 70    termino1 -> posibleID
Rule 71    termino1 -> ENTERO np_contieneID_Constante_Entero
Rule 72    termino1 -> FLOTANTE np_contieneID_Constante_Flotante
Rule 73    termino1 -> llamadaFuncion
Rule 74    posibleID -> ID np_contieneID np_enviarACuadruplos
Rule 75    posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
Rule 76    posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
Rule 77    np_enviarACuadruplos -> <empty>
Rule 78    posibleIDDeclaracion -> ID
Rule 79    posibleIDDeclaracion -> ID OCORCH expresion CCORCH
Rule 80    posibleIDDeclaracion -> ID OCORCH expresion COMA expresion CCORCH
Rule 81    termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
Rule 82    termino1 -> QUOT CARACTER QUOT
Rule 83    estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
Rule 84    estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
Rule 85    return -> REGRESA expresion SEMICOLON
Rule 86    np_contieneID -> <empty>
Rule 87    np_contieneID_Constante_Entero -> <empty>
Rule 88    np_contieneID_Constante_Flotante -> <empty>
Rule 89    np_addVariableParametro -> <empty>
Rule 90    np_addVariable -> <empty>
Rule 91    np_actualizarDimensiones -> <empty>
Rule 92    np_printCuadruplos -> <empty>
Rule 93    empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 14 15 59
CARACTER             : 82
CBRACKET             : 6 16 45 45 46 83 84
CCORCH               : 75 76 79 80
CHAR                 : 9 20 24
COLON                : 7 8 9
COMA                 : 13 15 22 23 24 43 44 54 58 76 80
COMENTARIO           : 
CPAREN               : 6 16 38 45 46 51 56 81 84
DESDE                : 83
DIVIDE               : 66
ENTERO               : 71
ENTONCES             : 45 46
ESCRIBE              : 38
FLOAT                : 8 19 23
FLOTANTE             : 72
FUNCION              : 16
HASTA                : 83
HAZ                  : 83 84
ID                   : 1 16 18 19 20 22 23 24 51 74 75 76 78 79 80 83
IGNORE               : 
INT                  : 7 18 22
LEE                  : 56
LOGIC                : 60
MIENTRAS             : 84
MINUS                : 64
MULTIPLY             : 65
NEWLINE              : 
OBRACKET             : 6 16 45 45 46 83 84
OCORCH               : 75 76 79 80
OPAREN               : 6 16 38 45 46 51 56 81 84
OPMATRIZ             : 68
PLUS                 : 63
PRINCIPAL            : 6
PROGRAMA             : 1
QUOT                 : 82 82
REGRESA              : 85
RELOP                : 61
SEMICOLON            : 1 12 14 37 38 56 59 85
SI                   : 45 46
SINO                 : 45
STRING               : 41 44
VAR                  : 7 8 9
VOID                 : 16
error                : 

Nonterminals, with rules where they appear

asignacion           : 34
decision             : 36
declaracion          : 2 26 30
declaracion2         : 7 8 9 13 15
declaracion3         : 11
declaracionFuncion   : 4
declaracionFuncionParametros : 16
declaracionFuncionParametros2 : 18 19 20 22 23 24
declaracionFuncionVariables : 16
empty                : 17 21 25 28 39 42 53 55 57
escritura            : 35
escritura2           : 38
escritura3           : 40 41 43 44
estatutoRepeticionCondicional : 32
estatutoRepeticionIncondicional : 31
estatutos            : 6 16 30 31 32 33 34 35 36 37 45 45 46 83 84
expresion            : 14 15 43 45 46 52 54 59 60 60 61 61 75 76 76 79 80 80 81 83 84 85
extraParametros      : 51 54
lectura              : 33
lectura2             : 56 58
llamadaFuncion       : 37 73
np_actualizarDimensiones : 11 18 19 20 22 23 24
np_addVariable       : 11
np_addVariableParametro : 18 19 20 22 23 24
np_contieneID        : 74 75 76 83
np_contieneID_Constante_Entero : 71
np_contieneID_Constante_Flotante : 72
np_defineTipo        : 7 8 9
np_enviarACuadruplos : 74 75 76
np_iniciaElse        : 45
np_iniciaIf          : 45 46
np_insertarOperador  : 59 60 61 63 64 65 66 68 81 81
np_printCuadruplos   : 6
np_terminaElse       : 45
np_terminaIf         : 46
npdeclfunc           : 16
posibleID            : 40 56 58 59 70
posibleIDDeclaracion : 11
primerParametro      : 51
principal            : 5
programa             : 0
programa2            : 1 2
programa3            : 3 4
return               : 29
termino              : 62 63 63 64 64 65 65 66 66
termino1             : 68 69

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMICOLON programa2

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMICOLON programa2

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMICOLON programa2

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMICOLON . programa2
    (2) programa2 -> . declaracion programa2
    (3) programa2 -> . programa3
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (4) programa3 -> . declaracionFuncion programa3
    (5) programa3 -> . principal
    (16) declaracionFuncion -> . FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (6) principal -> . PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos

    VAR             shift and go to state 8
    FUNCION         shift and go to state 11
    PRINCIPAL       shift and go to state 12

    programa2                      shift and go to state 5
    declaracion                    shift and go to state 6
    programa3                      shift and go to state 7
    declaracionFuncion             shift and go to state 9
    principal                      shift and go to state 10

state 5

    (1) programa -> PROGRAMA ID SEMICOLON programa2 .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMICOLON programa2 .)


state 6

    (2) programa2 -> declaracion . programa2
    (2) programa2 -> . declaracion programa2
    (3) programa2 -> . programa3
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (4) programa3 -> . declaracionFuncion programa3
    (5) programa3 -> . principal
    (16) declaracionFuncion -> . FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (6) principal -> . PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos

    VAR             shift and go to state 8
    FUNCION         shift and go to state 11
    PRINCIPAL       shift and go to state 12

    declaracion                    shift and go to state 6
    programa2                      shift and go to state 13
    programa3                      shift and go to state 7
    declaracionFuncion             shift and go to state 9
    principal                      shift and go to state 10

state 7

    (3) programa2 -> programa3 .

    $end            reduce using rule 3 (programa2 -> programa3 .)


state 8

    (7) declaracion -> VAR . INT np_defineTipo COLON declaracion2
    (8) declaracion -> VAR . FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> VAR . CHAR np_defineTipo COLON declaracion2

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16


state 9

    (4) programa3 -> declaracionFuncion . programa3
    (4) programa3 -> . declaracionFuncion programa3
    (5) programa3 -> . principal
    (16) declaracionFuncion -> . FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (6) principal -> . PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos

    FUNCION         shift and go to state 11
    PRINCIPAL       shift and go to state 12

    declaracionFuncion             shift and go to state 9
    programa3                      shift and go to state 17
    principal                      shift and go to state 10

state 10

    (5) programa3 -> principal .

    $end            reduce using rule 5 (programa3 -> principal .)


state 11

    (16) declaracionFuncion -> FUNCION . VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    VOID            shift and go to state 18


state 12

    (6) principal -> PRINCIPAL . OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos

    OPAREN          shift and go to state 19


state 13

    (2) programa2 -> declaracion programa2 .

    $end            reduce using rule 2 (programa2 -> declaracion programa2 .)


state 14

    (7) declaracion -> VAR INT . np_defineTipo COLON declaracion2
    (10) np_defineTipo -> .

    COLON           reduce using rule 10 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 20

state 15

    (8) declaracion -> VAR FLOAT . np_defineTipo COLON declaracion2
    (10) np_defineTipo -> .

    COLON           reduce using rule 10 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 21

state 16

    (9) declaracion -> VAR CHAR . np_defineTipo COLON declaracion2
    (10) np_defineTipo -> .

    COLON           reduce using rule 10 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 22

state 17

    (4) programa3 -> declaracionFuncion programa3 .

    $end            reduce using rule 4 (programa3 -> declaracionFuncion programa3 .)


state 18

    (16) declaracionFuncion -> FUNCION VOID . ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    ID              shift and go to state 23


state 19

    (6) principal -> PRINCIPAL OPAREN . CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos

    CPAREN          shift and go to state 24


state 20

    (7) declaracion -> VAR INT np_defineTipo . COLON declaracion2

    COLON           shift and go to state 25


state 21

    (8) declaracion -> VAR FLOAT np_defineTipo . COLON declaracion2

    COLON           shift and go to state 26


state 22

    (9) declaracion -> VAR CHAR np_defineTipo . COLON declaracion2

    COLON           shift and go to state 27


state 23

    (16) declaracionFuncion -> FUNCION VOID ID . npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (27) npdeclfunc -> .

    OPAREN          reduce using rule 27 (npdeclfunc -> .)

    npdeclfunc                     shift and go to state 28

state 24

    (6) principal -> PRINCIPAL OPAREN CPAREN . OBRACKET estatutos CBRACKET np_printCuadruplos

    OBRACKET        shift and go to state 29


state 25

    (7) declaracion -> VAR INT np_defineTipo COLON . declaracion2
    (11) declaracion2 -> . posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3
    (78) posibleIDDeclaracion -> . ID
    (79) posibleIDDeclaracion -> . ID OCORCH expresion CCORCH
    (80) posibleIDDeclaracion -> . ID OCORCH expresion COMA expresion CCORCH

    ID              shift and go to state 32

    declaracion2                   shift and go to state 30
    posibleIDDeclaracion           shift and go to state 31

state 26

    (8) declaracion -> VAR FLOAT np_defineTipo COLON . declaracion2
    (11) declaracion2 -> . posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3
    (78) posibleIDDeclaracion -> . ID
    (79) posibleIDDeclaracion -> . ID OCORCH expresion CCORCH
    (80) posibleIDDeclaracion -> . ID OCORCH expresion COMA expresion CCORCH

    ID              shift and go to state 32

    declaracion2                   shift and go to state 33
    posibleIDDeclaracion           shift and go to state 31

state 27

    (9) declaracion -> VAR CHAR np_defineTipo COLON . declaracion2
    (11) declaracion2 -> . posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3
    (78) posibleIDDeclaracion -> . ID
    (79) posibleIDDeclaracion -> . ID OCORCH expresion CCORCH
    (80) posibleIDDeclaracion -> . ID OCORCH expresion COMA expresion CCORCH

    ID              shift and go to state 32

    declaracion2                   shift and go to state 34
    posibleIDDeclaracion           shift and go to state 31

state 28

    (16) declaracionFuncion -> FUNCION VOID ID npdeclfunc . OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    OPAREN          shift and go to state 35


state 29

    (6) principal -> PRINCIPAL OPAREN CPAREN OBRACKET . estatutos CBRACKET np_printCuadruplos
    (28) estatutos -> . empty
    (29) estatutos -> . return
    (30) estatutos -> . declaracion estatutos
    (31) estatutos -> . estatutoRepeticionIncondicional estatutos
    (32) estatutos -> . estatutoRepeticionCondicional estatutos
    (33) estatutos -> . lectura estatutos
    (34) estatutos -> . asignacion estatutos
    (35) estatutos -> . escritura estatutos
    (36) estatutos -> . decision estatutos
    (37) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (93) empty -> .
    (85) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (83) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (84) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (56) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (59) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (38) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (45) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 93 (empty -> .)
    REGRESA         shift and go to state 47
    VAR             shift and go to state 8
    DESDE           shift and go to state 48
    MIENTRAS        shift and go to state 50
    LEE             shift and go to state 51
    ESCRIBE         shift and go to state 53
    SI              shift and go to state 54
    ID              shift and go to state 49

    estatutos                      shift and go to state 36
    empty                          shift and go to state 37
    return                         shift and go to state 38
    declaracion                    shift and go to state 39
    estatutoRepeticionIncondicional shift and go to state 40
    estatutoRepeticionCondicional  shift and go to state 41
    lectura                        shift and go to state 42
    asignacion                     shift and go to state 43
    escritura                      shift and go to state 44
    decision                       shift and go to state 45
    llamadaFuncion                 shift and go to state 46
    posibleID                      shift and go to state 52

state 30

    (7) declaracion -> VAR INT np_defineTipo COLON declaracion2 .

    VAR             reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    FUNCION         reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    PRINCIPAL       reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    REGRESA         reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    DESDE           reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    MIENTRAS        reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    LEE             reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    ESCRIBE         reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    SI              reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    ID              reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    CBRACKET        reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    OBRACKET        reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)


state 31

    (11) declaracion2 -> posibleIDDeclaracion . np_addVariable np_actualizarDimensiones declaracion3
    (90) np_addVariable -> .

    SEMICOLON       reduce using rule 90 (np_addVariable -> .)
    COMA            reduce using rule 90 (np_addVariable -> .)
    ASSIGN          reduce using rule 90 (np_addVariable -> .)

    np_addVariable                 shift and go to state 55

state 32

    (78) posibleIDDeclaracion -> ID .
    (79) posibleIDDeclaracion -> ID . OCORCH expresion CCORCH
    (80) posibleIDDeclaracion -> ID . OCORCH expresion COMA expresion CCORCH

    SEMICOLON       reduce using rule 78 (posibleIDDeclaracion -> ID .)
    COMA            reduce using rule 78 (posibleIDDeclaracion -> ID .)
    ASSIGN          reduce using rule 78 (posibleIDDeclaracion -> ID .)
    OCORCH          shift and go to state 56


state 33

    (8) declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .

    VAR             reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    FUNCION         reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    PRINCIPAL       reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    REGRESA         reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    DESDE           reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    MIENTRAS        reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    LEE             reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    ESCRIBE         reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    SI              reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    ID              reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    CBRACKET        reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    OBRACKET        reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)


state 34

    (9) declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .

    VAR             reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    FUNCION         reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    PRINCIPAL       reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    REGRESA         reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    DESDE           reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    MIENTRAS        reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    LEE             reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    ESCRIBE         reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    SI              reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    ID              reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    CBRACKET        reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    OBRACKET        reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)


state 35

    (16) declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN . declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (17) declaracionFuncionParametros -> . empty
    (18) declaracionFuncionParametros -> . INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (19) declaracionFuncionParametros -> . FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (20) declaracionFuncionParametros -> . CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (93) empty -> .

    INT             shift and go to state 59
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 61
    CPAREN          reduce using rule 93 (empty -> .)

    declaracionFuncionParametros   shift and go to state 57
    empty                          shift and go to state 58

state 36

    (6) principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos . CBRACKET np_printCuadruplos

    CBRACKET        shift and go to state 62


state 37

    (28) estatutos -> empty .

    CBRACKET        reduce using rule 28 (estatutos -> empty .)


state 38

    (29) estatutos -> return .

    CBRACKET        reduce using rule 29 (estatutos -> return .)


state 39

    (30) estatutos -> declaracion . estatutos
    (28) estatutos -> . empty
    (29) estatutos -> . return
    (30) estatutos -> . declaracion estatutos
    (31) estatutos -> . estatutoRepeticionIncondicional estatutos
    (32) estatutos -> . estatutoRepeticionCondicional estatutos
    (33) estatutos -> . lectura estatutos
    (34) estatutos -> . asignacion estatutos
    (35) estatutos -> . escritura estatutos
    (36) estatutos -> . decision estatutos
    (37) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (93) empty -> .
    (85) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (83) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (84) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (56) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (59) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (38) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (45) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 93 (empty -> .)
    REGRESA         shift and go to state 47
    VAR             shift and go to state 8
    DESDE           shift and go to state 48
    MIENTRAS        shift and go to state 50
    LEE             shift and go to state 51
    ESCRIBE         shift and go to state 53
    SI              shift and go to state 54
    ID              shift and go to state 49

    declaracion                    shift and go to state 39
    estatutos                      shift and go to state 63
    empty                          shift and go to state 37
    return                         shift and go to state 38
    estatutoRepeticionIncondicional shift and go to state 40
    estatutoRepeticionCondicional  shift and go to state 41
    lectura                        shift and go to state 42
    asignacion                     shift and go to state 43
    escritura                      shift and go to state 44
    decision                       shift and go to state 45
    llamadaFuncion                 shift and go to state 46
    posibleID                      shift and go to state 52

state 40

    (31) estatutos -> estatutoRepeticionIncondicional . estatutos
    (28) estatutos -> . empty
    (29) estatutos -> . return
    (30) estatutos -> . declaracion estatutos
    (31) estatutos -> . estatutoRepeticionIncondicional estatutos
    (32) estatutos -> . estatutoRepeticionCondicional estatutos
    (33) estatutos -> . lectura estatutos
    (34) estatutos -> . asignacion estatutos
    (35) estatutos -> . escritura estatutos
    (36) estatutos -> . decision estatutos
    (37) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (93) empty -> .
    (85) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (83) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (84) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (56) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (59) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (38) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (45) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 93 (empty -> .)
    REGRESA         shift and go to state 47
    VAR             shift and go to state 8
    DESDE           shift and go to state 48
    MIENTRAS        shift and go to state 50
    LEE             shift and go to state 51
    ESCRIBE         shift and go to state 53
    SI              shift and go to state 54
    ID              shift and go to state 49

    estatutoRepeticionIncondicional shift and go to state 40
    estatutos                      shift and go to state 64
    empty                          shift and go to state 37
    return                         shift and go to state 38
    declaracion                    shift and go to state 39
    estatutoRepeticionCondicional  shift and go to state 41
    lectura                        shift and go to state 42
    asignacion                     shift and go to state 43
    escritura                      shift and go to state 44
    decision                       shift and go to state 45
    llamadaFuncion                 shift and go to state 46
    posibleID                      shift and go to state 52

state 41

    (32) estatutos -> estatutoRepeticionCondicional . estatutos
    (28) estatutos -> . empty
    (29) estatutos -> . return
    (30) estatutos -> . declaracion estatutos
    (31) estatutos -> . estatutoRepeticionIncondicional estatutos
    (32) estatutos -> . estatutoRepeticionCondicional estatutos
    (33) estatutos -> . lectura estatutos
    (34) estatutos -> . asignacion estatutos
    (35) estatutos -> . escritura estatutos
    (36) estatutos -> . decision estatutos
    (37) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (93) empty -> .
    (85) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (83) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (84) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (56) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (59) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (38) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (45) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 93 (empty -> .)
    REGRESA         shift and go to state 47
    VAR             shift and go to state 8
    DESDE           shift and go to state 48
    MIENTRAS        shift and go to state 50
    LEE             shift and go to state 51
    ESCRIBE         shift and go to state 53
    SI              shift and go to state 54
    ID              shift and go to state 49

    estatutoRepeticionCondicional  shift and go to state 41
    estatutos                      shift and go to state 65
    empty                          shift and go to state 37
    return                         shift and go to state 38
    declaracion                    shift and go to state 39
    estatutoRepeticionIncondicional shift and go to state 40
    lectura                        shift and go to state 42
    asignacion                     shift and go to state 43
    escritura                      shift and go to state 44
    decision                       shift and go to state 45
    llamadaFuncion                 shift and go to state 46
    posibleID                      shift and go to state 52

state 42

    (33) estatutos -> lectura . estatutos
    (28) estatutos -> . empty
    (29) estatutos -> . return
    (30) estatutos -> . declaracion estatutos
    (31) estatutos -> . estatutoRepeticionIncondicional estatutos
    (32) estatutos -> . estatutoRepeticionCondicional estatutos
    (33) estatutos -> . lectura estatutos
    (34) estatutos -> . asignacion estatutos
    (35) estatutos -> . escritura estatutos
    (36) estatutos -> . decision estatutos
    (37) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (93) empty -> .
    (85) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (83) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (84) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (56) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (59) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (38) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (45) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 93 (empty -> .)
    REGRESA         shift and go to state 47
    VAR             shift and go to state 8
    DESDE           shift and go to state 48
    MIENTRAS        shift and go to state 50
    LEE             shift and go to state 51
    ESCRIBE         shift and go to state 53
    SI              shift and go to state 54
    ID              shift and go to state 49

    lectura                        shift and go to state 42
    estatutos                      shift and go to state 66
    empty                          shift and go to state 37
    return                         shift and go to state 38
    declaracion                    shift and go to state 39
    estatutoRepeticionIncondicional shift and go to state 40
    estatutoRepeticionCondicional  shift and go to state 41
    asignacion                     shift and go to state 43
    escritura                      shift and go to state 44
    decision                       shift and go to state 45
    llamadaFuncion                 shift and go to state 46
    posibleID                      shift and go to state 52

state 43

    (34) estatutos -> asignacion . estatutos
    (28) estatutos -> . empty
    (29) estatutos -> . return
    (30) estatutos -> . declaracion estatutos
    (31) estatutos -> . estatutoRepeticionIncondicional estatutos
    (32) estatutos -> . estatutoRepeticionCondicional estatutos
    (33) estatutos -> . lectura estatutos
    (34) estatutos -> . asignacion estatutos
    (35) estatutos -> . escritura estatutos
    (36) estatutos -> . decision estatutos
    (37) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (93) empty -> .
    (85) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (83) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (84) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (56) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (59) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (38) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (45) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 93 (empty -> .)
    REGRESA         shift and go to state 47
    VAR             shift and go to state 8
    DESDE           shift and go to state 48
    MIENTRAS        shift and go to state 50
    LEE             shift and go to state 51
    ESCRIBE         shift and go to state 53
    SI              shift and go to state 54
    ID              shift and go to state 49

    asignacion                     shift and go to state 43
    estatutos                      shift and go to state 67
    empty                          shift and go to state 37
    return                         shift and go to state 38
    declaracion                    shift and go to state 39
    estatutoRepeticionIncondicional shift and go to state 40
    estatutoRepeticionCondicional  shift and go to state 41
    lectura                        shift and go to state 42
    escritura                      shift and go to state 44
    decision                       shift and go to state 45
    llamadaFuncion                 shift and go to state 46
    posibleID                      shift and go to state 52

state 44

    (35) estatutos -> escritura . estatutos
    (28) estatutos -> . empty
    (29) estatutos -> . return
    (30) estatutos -> . declaracion estatutos
    (31) estatutos -> . estatutoRepeticionIncondicional estatutos
    (32) estatutos -> . estatutoRepeticionCondicional estatutos
    (33) estatutos -> . lectura estatutos
    (34) estatutos -> . asignacion estatutos
    (35) estatutos -> . escritura estatutos
    (36) estatutos -> . decision estatutos
    (37) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (93) empty -> .
    (85) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (83) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (84) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (56) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (59) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (38) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (45) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 93 (empty -> .)
    REGRESA         shift and go to state 47
    VAR             shift and go to state 8
    DESDE           shift and go to state 48
    MIENTRAS        shift and go to state 50
    LEE             shift and go to state 51
    ESCRIBE         shift and go to state 53
    SI              shift and go to state 54
    ID              shift and go to state 49

    escritura                      shift and go to state 44
    estatutos                      shift and go to state 68
    empty                          shift and go to state 37
    return                         shift and go to state 38
    declaracion                    shift and go to state 39
    estatutoRepeticionIncondicional shift and go to state 40
    estatutoRepeticionCondicional  shift and go to state 41
    lectura                        shift and go to state 42
    asignacion                     shift and go to state 43
    decision                       shift and go to state 45
    llamadaFuncion                 shift and go to state 46
    posibleID                      shift and go to state 52

state 45

    (36) estatutos -> decision . estatutos
    (28) estatutos -> . empty
    (29) estatutos -> . return
    (30) estatutos -> . declaracion estatutos
    (31) estatutos -> . estatutoRepeticionIncondicional estatutos
    (32) estatutos -> . estatutoRepeticionCondicional estatutos
    (33) estatutos -> . lectura estatutos
    (34) estatutos -> . asignacion estatutos
    (35) estatutos -> . escritura estatutos
    (36) estatutos -> . decision estatutos
    (37) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (93) empty -> .
    (85) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (83) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (84) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (56) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (59) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (38) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (45) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 93 (empty -> .)
    REGRESA         shift and go to state 47
    VAR             shift and go to state 8
    DESDE           shift and go to state 48
    MIENTRAS        shift and go to state 50
    LEE             shift and go to state 51
    ESCRIBE         shift and go to state 53
    SI              shift and go to state 54
    ID              shift and go to state 49

    decision                       shift and go to state 45
    estatutos                      shift and go to state 69
    empty                          shift and go to state 37
    return                         shift and go to state 38
    declaracion                    shift and go to state 39
    estatutoRepeticionIncondicional shift and go to state 40
    estatutoRepeticionCondicional  shift and go to state 41
    lectura                        shift and go to state 42
    asignacion                     shift and go to state 43
    escritura                      shift and go to state 44
    llamadaFuncion                 shift and go to state 46
    posibleID                      shift and go to state 52

state 46

    (37) estatutos -> llamadaFuncion . SEMICOLON estatutos

    SEMICOLON       shift and go to state 70


state 47

    (85) return -> REGRESA . expresion SEMICOLON
    (60) expresion -> . expresion LOGIC np_insertarOperador expresion
    (61) expresion -> . expresion RELOP np_insertarOperador expresion
    (62) expresion -> . termino
    (63) termino -> . termino PLUS np_insertarOperador termino
    (64) termino -> . termino MINUS np_insertarOperador termino
    (65) termino -> . termino MULTIPLY np_insertarOperador termino
    (66) termino -> . termino DIVIDE np_insertarOperador termino
    (68) termino -> . termino1 OPMATRIZ np_insertarOperador
    (69) termino -> . termino1
    (70) termino1 -> . posibleID
    (71) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (72) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (73) termino1 -> . llamadaFuncion
    (81) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (82) termino1 -> . QUOT CARACTER QUOT
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    OPAREN          shift and go to state 78
    QUOT            shift and go to state 79
    ID              shift and go to state 80

    expresion                      shift and go to state 71
    termino                        shift and go to state 72
    termino1                       shift and go to state 73
    posibleID                      shift and go to state 74
    llamadaFuncion                 shift and go to state 77

state 48

    (83) estatutoRepeticionIncondicional -> DESDE . ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET

    ID              shift and go to state 81


state 49

    (51) llamadaFuncion -> ID . OPAREN primerParametro extraParametros CPAREN
    (74) posibleID -> ID . np_contieneID np_enviarACuadruplos
    (75) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (86) np_contieneID -> .

    OPAREN          shift and go to state 82
    OCORCH          reduce using rule 86 (np_contieneID -> .)
    ASSIGN          reduce using rule 86 (np_contieneID -> .)

    np_contieneID                  shift and go to state 83

state 50

    (84) estatutoRepeticionCondicional -> MIENTRAS . OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET

    OPAREN          shift and go to state 84


state 51

    (56) lectura -> LEE . OPAREN posibleID lectura2 CPAREN SEMICOLON

    OPAREN          shift and go to state 85


state 52

    (59) asignacion -> posibleID . ASSIGN np_insertarOperador expresion SEMICOLON

    ASSIGN          shift and go to state 86


state 53

    (38) escritura -> ESCRIBE . OPAREN escritura2 CPAREN SEMICOLON

    OPAREN          shift and go to state 87


state 54

    (45) decision -> SI . OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> SI . OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf

    OPAREN          shift and go to state 88


state 55

    (11) declaracion2 -> posibleIDDeclaracion np_addVariable . np_actualizarDimensiones declaracion3
    (91) np_actualizarDimensiones -> .

    SEMICOLON       reduce using rule 91 (np_actualizarDimensiones -> .)
    COMA            reduce using rule 91 (np_actualizarDimensiones -> .)
    ASSIGN          reduce using rule 91 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 89

state 56

    (79) posibleIDDeclaracion -> ID OCORCH . expresion CCORCH
    (80) posibleIDDeclaracion -> ID OCORCH . expresion COMA expresion CCORCH
    (60) expresion -> . expresion LOGIC np_insertarOperador expresion
    (61) expresion -> . expresion RELOP np_insertarOperador expresion
    (62) expresion -> . termino
    (63) termino -> . termino PLUS np_insertarOperador termino
    (64) termino -> . termino MINUS np_insertarOperador termino
    (65) termino -> . termino MULTIPLY np_insertarOperador termino
    (66) termino -> . termino DIVIDE np_insertarOperador termino
    (68) termino -> . termino1 OPMATRIZ np_insertarOperador
    (69) termino -> . termino1
    (70) termino1 -> . posibleID
    (71) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (72) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (73) termino1 -> . llamadaFuncion
    (81) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (82) termino1 -> . QUOT CARACTER QUOT
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    OPAREN          shift and go to state 78
    QUOT            shift and go to state 79
    ID              shift and go to state 80

    expresion                      shift and go to state 90
    termino                        shift and go to state 72
    termino1                       shift and go to state 73
    posibleID                      shift and go to state 74
    llamadaFuncion                 shift and go to state 77

state 57

    (16) declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros . CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    CPAREN          shift and go to state 91


state 58

    (17) declaracionFuncionParametros -> empty .

    CPAREN          reduce using rule 17 (declaracionFuncionParametros -> empty .)


state 59

    (18) declaracionFuncionParametros -> INT . ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2

    ID              shift and go to state 92


state 60

    (19) declaracionFuncionParametros -> FLOAT . ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2

    ID              shift and go to state 93


state 61

    (20) declaracionFuncionParametros -> CHAR . ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2

    ID              shift and go to state 94


state 62

    (6) principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET . np_printCuadruplos
    (92) np_printCuadruplos -> .

    $end            reduce using rule 92 (np_printCuadruplos -> .)

    np_printCuadruplos             shift and go to state 95

state 63

    (30) estatutos -> declaracion estatutos .

    CBRACKET        reduce using rule 30 (estatutos -> declaracion estatutos .)


state 64

    (31) estatutos -> estatutoRepeticionIncondicional estatutos .

    CBRACKET        reduce using rule 31 (estatutos -> estatutoRepeticionIncondicional estatutos .)


state 65

    (32) estatutos -> estatutoRepeticionCondicional estatutos .

    CBRACKET        reduce using rule 32 (estatutos -> estatutoRepeticionCondicional estatutos .)


state 66

    (33) estatutos -> lectura estatutos .

    CBRACKET        reduce using rule 33 (estatutos -> lectura estatutos .)


state 67

    (34) estatutos -> asignacion estatutos .

    CBRACKET        reduce using rule 34 (estatutos -> asignacion estatutos .)


state 68

    (35) estatutos -> escritura estatutos .

    CBRACKET        reduce using rule 35 (estatutos -> escritura estatutos .)


state 69

    (36) estatutos -> decision estatutos .

    CBRACKET        reduce using rule 36 (estatutos -> decision estatutos .)


state 70

    (37) estatutos -> llamadaFuncion SEMICOLON . estatutos
    (28) estatutos -> . empty
    (29) estatutos -> . return
    (30) estatutos -> . declaracion estatutos
    (31) estatutos -> . estatutoRepeticionIncondicional estatutos
    (32) estatutos -> . estatutoRepeticionCondicional estatutos
    (33) estatutos -> . lectura estatutos
    (34) estatutos -> . asignacion estatutos
    (35) estatutos -> . escritura estatutos
    (36) estatutos -> . decision estatutos
    (37) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (93) empty -> .
    (85) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (83) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (84) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (56) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (59) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (38) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (45) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 93 (empty -> .)
    REGRESA         shift and go to state 47
    VAR             shift and go to state 8
    DESDE           shift and go to state 48
    MIENTRAS        shift and go to state 50
    LEE             shift and go to state 51
    ESCRIBE         shift and go to state 53
    SI              shift and go to state 54
    ID              shift and go to state 49

    llamadaFuncion                 shift and go to state 46
    estatutos                      shift and go to state 96
    empty                          shift and go to state 37
    return                         shift and go to state 38
    declaracion                    shift and go to state 39
    estatutoRepeticionIncondicional shift and go to state 40
    estatutoRepeticionCondicional  shift and go to state 41
    lectura                        shift and go to state 42
    asignacion                     shift and go to state 43
    escritura                      shift and go to state 44
    decision                       shift and go to state 45
    posibleID                      shift and go to state 52

state 71

    (85) return -> REGRESA expresion . SEMICOLON
    (60) expresion -> expresion . LOGIC np_insertarOperador expresion
    (61) expresion -> expresion . RELOP np_insertarOperador expresion

    SEMICOLON       shift and go to state 97
    LOGIC           shift and go to state 98
    RELOP           shift and go to state 99


state 72

    (62) expresion -> termino .
    (63) termino -> termino . PLUS np_insertarOperador termino
    (64) termino -> termino . MINUS np_insertarOperador termino
    (65) termino -> termino . MULTIPLY np_insertarOperador termino
    (66) termino -> termino . DIVIDE np_insertarOperador termino

    SEMICOLON       reduce using rule 62 (expresion -> termino .)
    LOGIC           reduce using rule 62 (expresion -> termino .)
    RELOP           reduce using rule 62 (expresion -> termino .)
    CCORCH          reduce using rule 62 (expresion -> termino .)
    COMA            reduce using rule 62 (expresion -> termino .)
    CPAREN          reduce using rule 62 (expresion -> termino .)
    HAZ             reduce using rule 62 (expresion -> termino .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MULTIPLY        shift and go to state 102
    DIVIDE          shift and go to state 103


state 73

    (68) termino -> termino1 . OPMATRIZ np_insertarOperador
    (69) termino -> termino1 .

    OPMATRIZ        shift and go to state 104
    PLUS            reduce using rule 69 (termino -> termino1 .)
    MINUS           reduce using rule 69 (termino -> termino1 .)
    MULTIPLY        reduce using rule 69 (termino -> termino1 .)
    DIVIDE          reduce using rule 69 (termino -> termino1 .)
    SEMICOLON       reduce using rule 69 (termino -> termino1 .)
    LOGIC           reduce using rule 69 (termino -> termino1 .)
    RELOP           reduce using rule 69 (termino -> termino1 .)
    CCORCH          reduce using rule 69 (termino -> termino1 .)
    COMA            reduce using rule 69 (termino -> termino1 .)
    CPAREN          reduce using rule 69 (termino -> termino1 .)
    HAZ             reduce using rule 69 (termino -> termino1 .)


state 74

    (70) termino1 -> posibleID .

    OPMATRIZ        reduce using rule 70 (termino1 -> posibleID .)
    PLUS            reduce using rule 70 (termino1 -> posibleID .)
    MINUS           reduce using rule 70 (termino1 -> posibleID .)
    MULTIPLY        reduce using rule 70 (termino1 -> posibleID .)
    DIVIDE          reduce using rule 70 (termino1 -> posibleID .)
    SEMICOLON       reduce using rule 70 (termino1 -> posibleID .)
    LOGIC           reduce using rule 70 (termino1 -> posibleID .)
    RELOP           reduce using rule 70 (termino1 -> posibleID .)
    CCORCH          reduce using rule 70 (termino1 -> posibleID .)
    COMA            reduce using rule 70 (termino1 -> posibleID .)
    CPAREN          reduce using rule 70 (termino1 -> posibleID .)
    HAZ             reduce using rule 70 (termino1 -> posibleID .)


state 75

    (71) termino1 -> ENTERO . np_contieneID_Constante_Entero
    (87) np_contieneID_Constante_Entero -> .

    OPMATRIZ        reduce using rule 87 (np_contieneID_Constante_Entero -> .)
    PLUS            reduce using rule 87 (np_contieneID_Constante_Entero -> .)
    MINUS           reduce using rule 87 (np_contieneID_Constante_Entero -> .)
    MULTIPLY        reduce using rule 87 (np_contieneID_Constante_Entero -> .)
    DIVIDE          reduce using rule 87 (np_contieneID_Constante_Entero -> .)
    SEMICOLON       reduce using rule 87 (np_contieneID_Constante_Entero -> .)
    LOGIC           reduce using rule 87 (np_contieneID_Constante_Entero -> .)
    RELOP           reduce using rule 87 (np_contieneID_Constante_Entero -> .)
    CCORCH          reduce using rule 87 (np_contieneID_Constante_Entero -> .)
    COMA            reduce using rule 87 (np_contieneID_Constante_Entero -> .)
    CPAREN          reduce using rule 87 (np_contieneID_Constante_Entero -> .)
    HAZ             reduce using rule 87 (np_contieneID_Constante_Entero -> .)

    np_contieneID_Constante_Entero shift and go to state 105

state 76

    (72) termino1 -> FLOTANTE . np_contieneID_Constante_Flotante
    (88) np_contieneID_Constante_Flotante -> .

    OPMATRIZ        reduce using rule 88 (np_contieneID_Constante_Flotante -> .)
    PLUS            reduce using rule 88 (np_contieneID_Constante_Flotante -> .)
    MINUS           reduce using rule 88 (np_contieneID_Constante_Flotante -> .)
    MULTIPLY        reduce using rule 88 (np_contieneID_Constante_Flotante -> .)
    DIVIDE          reduce using rule 88 (np_contieneID_Constante_Flotante -> .)
    SEMICOLON       reduce using rule 88 (np_contieneID_Constante_Flotante -> .)
    LOGIC           reduce using rule 88 (np_contieneID_Constante_Flotante -> .)
    RELOP           reduce using rule 88 (np_contieneID_Constante_Flotante -> .)
    CCORCH          reduce using rule 88 (np_contieneID_Constante_Flotante -> .)
    COMA            reduce using rule 88 (np_contieneID_Constante_Flotante -> .)
    CPAREN          reduce using rule 88 (np_contieneID_Constante_Flotante -> .)
    HAZ             reduce using rule 88 (np_contieneID_Constante_Flotante -> .)

    np_contieneID_Constante_Flotante shift and go to state 106

state 77

    (73) termino1 -> llamadaFuncion .

    OPMATRIZ        reduce using rule 73 (termino1 -> llamadaFuncion .)
    PLUS            reduce using rule 73 (termino1 -> llamadaFuncion .)
    MINUS           reduce using rule 73 (termino1 -> llamadaFuncion .)
    MULTIPLY        reduce using rule 73 (termino1 -> llamadaFuncion .)
    DIVIDE          reduce using rule 73 (termino1 -> llamadaFuncion .)
    SEMICOLON       reduce using rule 73 (termino1 -> llamadaFuncion .)
    LOGIC           reduce using rule 73 (termino1 -> llamadaFuncion .)
    RELOP           reduce using rule 73 (termino1 -> llamadaFuncion .)
    CCORCH          reduce using rule 73 (termino1 -> llamadaFuncion .)
    COMA            reduce using rule 73 (termino1 -> llamadaFuncion .)
    CPAREN          reduce using rule 73 (termino1 -> llamadaFuncion .)
    HAZ             reduce using rule 73 (termino1 -> llamadaFuncion .)


state 78

    (81) termino1 -> OPAREN . np_insertarOperador expresion CPAREN np_insertarOperador
    (67) np_insertarOperador -> .

    ENTERO          reduce using rule 67 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 67 (np_insertarOperador -> .)
    OPAREN          reduce using rule 67 (np_insertarOperador -> .)
    QUOT            reduce using rule 67 (np_insertarOperador -> .)
    ID              reduce using rule 67 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 107

state 79

    (82) termino1 -> QUOT . CARACTER QUOT

    CARACTER        shift and go to state 108


state 80

    (74) posibleID -> ID . np_contieneID np_enviarACuadruplos
    (75) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (51) llamadaFuncion -> ID . OPAREN primerParametro extraParametros CPAREN
    (86) np_contieneID -> .

    OPAREN          shift and go to state 82
    OCORCH          reduce using rule 86 (np_contieneID -> .)
    OPMATRIZ        reduce using rule 86 (np_contieneID -> .)
    PLUS            reduce using rule 86 (np_contieneID -> .)
    MINUS           reduce using rule 86 (np_contieneID -> .)
    MULTIPLY        reduce using rule 86 (np_contieneID -> .)
    DIVIDE          reduce using rule 86 (np_contieneID -> .)
    SEMICOLON       reduce using rule 86 (np_contieneID -> .)
    LOGIC           reduce using rule 86 (np_contieneID -> .)
    RELOP           reduce using rule 86 (np_contieneID -> .)
    CCORCH          reduce using rule 86 (np_contieneID -> .)
    COMA            reduce using rule 86 (np_contieneID -> .)
    CPAREN          reduce using rule 86 (np_contieneID -> .)
    HAZ             reduce using rule 86 (np_contieneID -> .)

    np_contieneID                  shift and go to state 83

state 81

    (83) estatutoRepeticionIncondicional -> DESDE ID . np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (86) np_contieneID -> .

    HASTA           reduce using rule 86 (np_contieneID -> .)

    np_contieneID                  shift and go to state 109

state 82

    (51) llamadaFuncion -> ID OPAREN . primerParametro extraParametros CPAREN
    (52) primerParametro -> . expresion
    (53) primerParametro -> . empty
    (60) expresion -> . expresion LOGIC np_insertarOperador expresion
    (61) expresion -> . expresion RELOP np_insertarOperador expresion
    (62) expresion -> . termino
    (93) empty -> .
    (63) termino -> . termino PLUS np_insertarOperador termino
    (64) termino -> . termino MINUS np_insertarOperador termino
    (65) termino -> . termino MULTIPLY np_insertarOperador termino
    (66) termino -> . termino DIVIDE np_insertarOperador termino
    (68) termino -> . termino1 OPMATRIZ np_insertarOperador
    (69) termino -> . termino1
    (70) termino1 -> . posibleID
    (71) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (72) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (73) termino1 -> . llamadaFuncion
    (81) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (82) termino1 -> . QUOT CARACTER QUOT
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    COMA            reduce using rule 93 (empty -> .)
    CPAREN          reduce using rule 93 (empty -> .)
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    OPAREN          shift and go to state 78
    QUOT            shift and go to state 79
    ID              shift and go to state 80

    primerParametro                shift and go to state 110
    expresion                      shift and go to state 111
    empty                          shift and go to state 112
    termino                        shift and go to state 72
    termino1                       shift and go to state 73
    posibleID                      shift and go to state 74
    llamadaFuncion                 shift and go to state 77

state 83

    (74) posibleID -> ID np_contieneID . np_enviarACuadruplos
    (75) posibleID -> ID np_contieneID . np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> ID np_contieneID . np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (77) np_enviarACuadruplos -> .

    OCORCH          reduce using rule 77 (np_enviarACuadruplos -> .)
    ASSIGN          reduce using rule 77 (np_enviarACuadruplos -> .)
    OPMATRIZ        reduce using rule 77 (np_enviarACuadruplos -> .)
    PLUS            reduce using rule 77 (np_enviarACuadruplos -> .)
    MINUS           reduce using rule 77 (np_enviarACuadruplos -> .)
    MULTIPLY        reduce using rule 77 (np_enviarACuadruplos -> .)
    DIVIDE          reduce using rule 77 (np_enviarACuadruplos -> .)
    SEMICOLON       reduce using rule 77 (np_enviarACuadruplos -> .)
    LOGIC           reduce using rule 77 (np_enviarACuadruplos -> .)
    RELOP           reduce using rule 77 (np_enviarACuadruplos -> .)
    CCORCH          reduce using rule 77 (np_enviarACuadruplos -> .)
    COMA            reduce using rule 77 (np_enviarACuadruplos -> .)
    CPAREN          reduce using rule 77 (np_enviarACuadruplos -> .)
    HAZ             reduce using rule 77 (np_enviarACuadruplos -> .)

    np_enviarACuadruplos           shift and go to state 113

state 84

    (84) estatutoRepeticionCondicional -> MIENTRAS OPAREN . expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (60) expresion -> . expresion LOGIC np_insertarOperador expresion
    (61) expresion -> . expresion RELOP np_insertarOperador expresion
    (62) expresion -> . termino
    (63) termino -> . termino PLUS np_insertarOperador termino
    (64) termino -> . termino MINUS np_insertarOperador termino
    (65) termino -> . termino MULTIPLY np_insertarOperador termino
    (66) termino -> . termino DIVIDE np_insertarOperador termino
    (68) termino -> . termino1 OPMATRIZ np_insertarOperador
    (69) termino -> . termino1
    (70) termino1 -> . posibleID
    (71) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (72) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (73) termino1 -> . llamadaFuncion
    (81) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (82) termino1 -> . QUOT CARACTER QUOT
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    OPAREN          shift and go to state 78
    QUOT            shift and go to state 79
    ID              shift and go to state 80

    expresion                      shift and go to state 114
    termino                        shift and go to state 72
    termino1                       shift and go to state 73
    posibleID                      shift and go to state 74
    llamadaFuncion                 shift and go to state 77

state 85

    (56) lectura -> LEE OPAREN . posibleID lectura2 CPAREN SEMICOLON
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    ID              shift and go to state 116

    posibleID                      shift and go to state 115

state 86

    (59) asignacion -> posibleID ASSIGN . np_insertarOperador expresion SEMICOLON
    (67) np_insertarOperador -> .

    ENTERO          reduce using rule 67 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 67 (np_insertarOperador -> .)
    OPAREN          reduce using rule 67 (np_insertarOperador -> .)
    QUOT            reduce using rule 67 (np_insertarOperador -> .)
    ID              reduce using rule 67 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 117

state 87

    (38) escritura -> ESCRIBE OPAREN . escritura2 CPAREN SEMICOLON
    (39) escritura2 -> . empty
    (40) escritura2 -> . posibleID escritura3
    (41) escritura2 -> . STRING escritura3
    (93) empty -> .
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    STRING          shift and go to state 121
    CPAREN          reduce using rule 93 (empty -> .)
    ID              shift and go to state 116

    escritura2                     shift and go to state 118
    empty                          shift and go to state 119
    posibleID                      shift and go to state 120

state 88

    (45) decision -> SI OPAREN . expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> SI OPAREN . expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (60) expresion -> . expresion LOGIC np_insertarOperador expresion
    (61) expresion -> . expresion RELOP np_insertarOperador expresion
    (62) expresion -> . termino
    (63) termino -> . termino PLUS np_insertarOperador termino
    (64) termino -> . termino MINUS np_insertarOperador termino
    (65) termino -> . termino MULTIPLY np_insertarOperador termino
    (66) termino -> . termino DIVIDE np_insertarOperador termino
    (68) termino -> . termino1 OPMATRIZ np_insertarOperador
    (69) termino -> . termino1
    (70) termino1 -> . posibleID
    (71) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (72) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (73) termino1 -> . llamadaFuncion
    (81) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (82) termino1 -> . QUOT CARACTER QUOT
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    OPAREN          shift and go to state 78
    QUOT            shift and go to state 79
    ID              shift and go to state 80

    expresion                      shift and go to state 122
    termino                        shift and go to state 72
    termino1                       shift and go to state 73
    posibleID                      shift and go to state 74
    llamadaFuncion                 shift and go to state 77

state 89

    (11) declaracion2 -> posibleIDDeclaracion np_addVariable np_actualizarDimensiones . declaracion3
    (12) declaracion3 -> . SEMICOLON
    (13) declaracion3 -> . COMA declaracion2
    (14) declaracion3 -> . ASSIGN expresion SEMICOLON
    (15) declaracion3 -> . ASSIGN expresion COMA declaracion2

    SEMICOLON       shift and go to state 124
    COMA            shift and go to state 125
    ASSIGN          shift and go to state 126

    declaracion3                   shift and go to state 123

state 90

    (79) posibleIDDeclaracion -> ID OCORCH expresion . CCORCH
    (80) posibleIDDeclaracion -> ID OCORCH expresion . COMA expresion CCORCH
    (60) expresion -> expresion . LOGIC np_insertarOperador expresion
    (61) expresion -> expresion . RELOP np_insertarOperador expresion

    CCORCH          shift and go to state 127
    COMA            shift and go to state 128
    LOGIC           shift and go to state 98
    RELOP           shift and go to state 99


state 91

    (16) declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN . declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (25) declaracionFuncionVariables -> . empty
    (26) declaracionFuncionVariables -> . declaracion
    (93) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2

    OBRACKET        reduce using rule 93 (empty -> .)
    VAR             shift and go to state 8

    declaracionFuncionVariables    shift and go to state 129
    empty                          shift and go to state 130
    declaracion                    shift and go to state 131

state 92

    (18) declaracionFuncionParametros -> INT ID . np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (89) np_addVariableParametro -> .

    COMA            reduce using rule 89 (np_addVariableParametro -> .)
    CPAREN          reduce using rule 89 (np_addVariableParametro -> .)

    np_addVariableParametro        shift and go to state 132

state 93

    (19) declaracionFuncionParametros -> FLOAT ID . np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (89) np_addVariableParametro -> .

    COMA            reduce using rule 89 (np_addVariableParametro -> .)
    CPAREN          reduce using rule 89 (np_addVariableParametro -> .)

    np_addVariableParametro        shift and go to state 133

state 94

    (20) declaracionFuncionParametros -> CHAR ID . np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (89) np_addVariableParametro -> .

    COMA            reduce using rule 89 (np_addVariableParametro -> .)
    CPAREN          reduce using rule 89 (np_addVariableParametro -> .)

    np_addVariableParametro        shift and go to state 134

state 95

    (6) principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos .

    $end            reduce using rule 6 (principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos .)


state 96

    (37) estatutos -> llamadaFuncion SEMICOLON estatutos .

    CBRACKET        reduce using rule 37 (estatutos -> llamadaFuncion SEMICOLON estatutos .)


state 97

    (85) return -> REGRESA expresion SEMICOLON .

    CBRACKET        reduce using rule 85 (return -> REGRESA expresion SEMICOLON .)


state 98

    (60) expresion -> expresion LOGIC . np_insertarOperador expresion
    (67) np_insertarOperador -> .

    ENTERO          reduce using rule 67 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 67 (np_insertarOperador -> .)
    OPAREN          reduce using rule 67 (np_insertarOperador -> .)
    QUOT            reduce using rule 67 (np_insertarOperador -> .)
    ID              reduce using rule 67 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 135

state 99

    (61) expresion -> expresion RELOP . np_insertarOperador expresion
    (67) np_insertarOperador -> .

    ENTERO          reduce using rule 67 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 67 (np_insertarOperador -> .)
    OPAREN          reduce using rule 67 (np_insertarOperador -> .)
    QUOT            reduce using rule 67 (np_insertarOperador -> .)
    ID              reduce using rule 67 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 136

state 100

    (63) termino -> termino PLUS . np_insertarOperador termino
    (67) np_insertarOperador -> .

    ENTERO          reduce using rule 67 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 67 (np_insertarOperador -> .)
    OPAREN          reduce using rule 67 (np_insertarOperador -> .)
    QUOT            reduce using rule 67 (np_insertarOperador -> .)
    ID              reduce using rule 67 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 137

state 101

    (64) termino -> termino MINUS . np_insertarOperador termino
    (67) np_insertarOperador -> .

    ENTERO          reduce using rule 67 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 67 (np_insertarOperador -> .)
    OPAREN          reduce using rule 67 (np_insertarOperador -> .)
    QUOT            reduce using rule 67 (np_insertarOperador -> .)
    ID              reduce using rule 67 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 138

state 102

    (65) termino -> termino MULTIPLY . np_insertarOperador termino
    (67) np_insertarOperador -> .

    ENTERO          reduce using rule 67 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 67 (np_insertarOperador -> .)
    OPAREN          reduce using rule 67 (np_insertarOperador -> .)
    QUOT            reduce using rule 67 (np_insertarOperador -> .)
    ID              reduce using rule 67 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 139

state 103

    (66) termino -> termino DIVIDE . np_insertarOperador termino
    (67) np_insertarOperador -> .

    ENTERO          reduce using rule 67 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 67 (np_insertarOperador -> .)
    OPAREN          reduce using rule 67 (np_insertarOperador -> .)
    QUOT            reduce using rule 67 (np_insertarOperador -> .)
    ID              reduce using rule 67 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 140

state 104

    (68) termino -> termino1 OPMATRIZ . np_insertarOperador
    (67) np_insertarOperador -> .

    PLUS            reduce using rule 67 (np_insertarOperador -> .)
    MINUS           reduce using rule 67 (np_insertarOperador -> .)
    MULTIPLY        reduce using rule 67 (np_insertarOperador -> .)
    DIVIDE          reduce using rule 67 (np_insertarOperador -> .)
    SEMICOLON       reduce using rule 67 (np_insertarOperador -> .)
    LOGIC           reduce using rule 67 (np_insertarOperador -> .)
    RELOP           reduce using rule 67 (np_insertarOperador -> .)
    CCORCH          reduce using rule 67 (np_insertarOperador -> .)
    COMA            reduce using rule 67 (np_insertarOperador -> .)
    CPAREN          reduce using rule 67 (np_insertarOperador -> .)
    HAZ             reduce using rule 67 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 141

state 105

    (71) termino1 -> ENTERO np_contieneID_Constante_Entero .

    OPMATRIZ        reduce using rule 71 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    PLUS            reduce using rule 71 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    MINUS           reduce using rule 71 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    MULTIPLY        reduce using rule 71 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    DIVIDE          reduce using rule 71 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    SEMICOLON       reduce using rule 71 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    LOGIC           reduce using rule 71 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    RELOP           reduce using rule 71 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    CCORCH          reduce using rule 71 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    COMA            reduce using rule 71 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    CPAREN          reduce using rule 71 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    HAZ             reduce using rule 71 (termino1 -> ENTERO np_contieneID_Constante_Entero .)


state 106

    (72) termino1 -> FLOTANTE np_contieneID_Constante_Flotante .

    OPMATRIZ        reduce using rule 72 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    PLUS            reduce using rule 72 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    MINUS           reduce using rule 72 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    MULTIPLY        reduce using rule 72 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    DIVIDE          reduce using rule 72 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    SEMICOLON       reduce using rule 72 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    LOGIC           reduce using rule 72 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    RELOP           reduce using rule 72 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    CCORCH          reduce using rule 72 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    COMA            reduce using rule 72 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    CPAREN          reduce using rule 72 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    HAZ             reduce using rule 72 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)


state 107

    (81) termino1 -> OPAREN np_insertarOperador . expresion CPAREN np_insertarOperador
    (60) expresion -> . expresion LOGIC np_insertarOperador expresion
    (61) expresion -> . expresion RELOP np_insertarOperador expresion
    (62) expresion -> . termino
    (63) termino -> . termino PLUS np_insertarOperador termino
    (64) termino -> . termino MINUS np_insertarOperador termino
    (65) termino -> . termino MULTIPLY np_insertarOperador termino
    (66) termino -> . termino DIVIDE np_insertarOperador termino
    (68) termino -> . termino1 OPMATRIZ np_insertarOperador
    (69) termino -> . termino1
    (70) termino1 -> . posibleID
    (71) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (72) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (73) termino1 -> . llamadaFuncion
    (81) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (82) termino1 -> . QUOT CARACTER QUOT
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    OPAREN          shift and go to state 78
    QUOT            shift and go to state 79
    ID              shift and go to state 80

    expresion                      shift and go to state 142
    termino                        shift and go to state 72
    termino1                       shift and go to state 73
    posibleID                      shift and go to state 74
    llamadaFuncion                 shift and go to state 77

state 108

    (82) termino1 -> QUOT CARACTER . QUOT

    QUOT            shift and go to state 143


state 109

    (83) estatutoRepeticionIncondicional -> DESDE ID np_contieneID . HASTA expresion HAZ OBRACKET estatutos CBRACKET

    HASTA           shift and go to state 144


state 110

    (51) llamadaFuncion -> ID OPAREN primerParametro . extraParametros CPAREN
    (54) extraParametros -> . COMA expresion extraParametros
    (55) extraParametros -> . empty
    (93) empty -> .

    COMA            shift and go to state 146
    CPAREN          reduce using rule 93 (empty -> .)

    extraParametros                shift and go to state 145
    empty                          shift and go to state 147

state 111

    (52) primerParametro -> expresion .
    (60) expresion -> expresion . LOGIC np_insertarOperador expresion
    (61) expresion -> expresion . RELOP np_insertarOperador expresion

    COMA            reduce using rule 52 (primerParametro -> expresion .)
    CPAREN          reduce using rule 52 (primerParametro -> expresion .)
    LOGIC           shift and go to state 98
    RELOP           shift and go to state 99


state 112

    (53) primerParametro -> empty .

    COMA            reduce using rule 53 (primerParametro -> empty .)
    CPAREN          reduce using rule 53 (primerParametro -> empty .)


state 113

    (74) posibleID -> ID np_contieneID np_enviarACuadruplos .
    (75) posibleID -> ID np_contieneID np_enviarACuadruplos . OCORCH expresion CCORCH
    (76) posibleID -> ID np_contieneID np_enviarACuadruplos . OCORCH expresion COMA expresion CCORCH

    ASSIGN          reduce using rule 74 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    OPMATRIZ        reduce using rule 74 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    PLUS            reduce using rule 74 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    MINUS           reduce using rule 74 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    MULTIPLY        reduce using rule 74 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    DIVIDE          reduce using rule 74 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    SEMICOLON       reduce using rule 74 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    LOGIC           reduce using rule 74 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    RELOP           reduce using rule 74 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    CCORCH          reduce using rule 74 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    COMA            reduce using rule 74 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    CPAREN          reduce using rule 74 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    HAZ             reduce using rule 74 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    OCORCH          shift and go to state 148


state 114

    (84) estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion . CPAREN HAZ OBRACKET estatutos CBRACKET
    (60) expresion -> expresion . LOGIC np_insertarOperador expresion
    (61) expresion -> expresion . RELOP np_insertarOperador expresion

    CPAREN          shift and go to state 149
    LOGIC           shift and go to state 98
    RELOP           shift and go to state 99


state 115

    (56) lectura -> LEE OPAREN posibleID . lectura2 CPAREN SEMICOLON
    (57) lectura2 -> . empty
    (58) lectura2 -> . COMA posibleID lectura2
    (93) empty -> .

    COMA            shift and go to state 152
    CPAREN          reduce using rule 93 (empty -> .)

    lectura2                       shift and go to state 150
    empty                          shift and go to state 151

state 116

    (74) posibleID -> ID . np_contieneID np_enviarACuadruplos
    (75) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (86) np_contieneID -> .

    OCORCH          reduce using rule 86 (np_contieneID -> .)
    COMA            reduce using rule 86 (np_contieneID -> .)
    CPAREN          reduce using rule 86 (np_contieneID -> .)

    np_contieneID                  shift and go to state 83

state 117

    (59) asignacion -> posibleID ASSIGN np_insertarOperador . expresion SEMICOLON
    (60) expresion -> . expresion LOGIC np_insertarOperador expresion
    (61) expresion -> . expresion RELOP np_insertarOperador expresion
    (62) expresion -> . termino
    (63) termino -> . termino PLUS np_insertarOperador termino
    (64) termino -> . termino MINUS np_insertarOperador termino
    (65) termino -> . termino MULTIPLY np_insertarOperador termino
    (66) termino -> . termino DIVIDE np_insertarOperador termino
    (68) termino -> . termino1 OPMATRIZ np_insertarOperador
    (69) termino -> . termino1
    (70) termino1 -> . posibleID
    (71) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (72) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (73) termino1 -> . llamadaFuncion
    (81) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (82) termino1 -> . QUOT CARACTER QUOT
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    OPAREN          shift and go to state 78
    QUOT            shift and go to state 79
    ID              shift and go to state 80

    posibleID                      shift and go to state 74
    expresion                      shift and go to state 153
    termino                        shift and go to state 72
    termino1                       shift and go to state 73
    llamadaFuncion                 shift and go to state 77

state 118

    (38) escritura -> ESCRIBE OPAREN escritura2 . CPAREN SEMICOLON

    CPAREN          shift and go to state 154


state 119

    (39) escritura2 -> empty .

    CPAREN          reduce using rule 39 (escritura2 -> empty .)


state 120

    (40) escritura2 -> posibleID . escritura3
    (42) escritura3 -> . empty
    (43) escritura3 -> . COMA expresion escritura3
    (44) escritura3 -> . COMA STRING escritura3
    (93) empty -> .

    COMA            shift and go to state 157
    CPAREN          reduce using rule 93 (empty -> .)

    escritura3                     shift and go to state 155
    empty                          shift and go to state 156

state 121

    (41) escritura2 -> STRING . escritura3
    (42) escritura3 -> . empty
    (43) escritura3 -> . COMA expresion escritura3
    (44) escritura3 -> . COMA STRING escritura3
    (93) empty -> .

    COMA            shift and go to state 157
    CPAREN          reduce using rule 93 (empty -> .)

    escritura3                     shift and go to state 158
    empty                          shift and go to state 156

state 122

    (45) decision -> SI OPAREN expresion . np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> SI OPAREN expresion . np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (60) expresion -> expresion . LOGIC np_insertarOperador expresion
    (61) expresion -> expresion . RELOP np_insertarOperador expresion
    (47) np_iniciaIf -> .

    LOGIC           shift and go to state 98
    RELOP           shift and go to state 99
    CPAREN          reduce using rule 47 (np_iniciaIf -> .)

    np_iniciaIf                    shift and go to state 159

state 123

    (11) declaracion2 -> posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .

    VAR             reduce using rule 11 (declaracion2 -> posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    FUNCION         reduce using rule 11 (declaracion2 -> posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    PRINCIPAL       reduce using rule 11 (declaracion2 -> posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    REGRESA         reduce using rule 11 (declaracion2 -> posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    DESDE           reduce using rule 11 (declaracion2 -> posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    MIENTRAS        reduce using rule 11 (declaracion2 -> posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    LEE             reduce using rule 11 (declaracion2 -> posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    ESCRIBE         reduce using rule 11 (declaracion2 -> posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    SI              reduce using rule 11 (declaracion2 -> posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    ID              reduce using rule 11 (declaracion2 -> posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    CBRACKET        reduce using rule 11 (declaracion2 -> posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    OBRACKET        reduce using rule 11 (declaracion2 -> posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)


state 124

    (12) declaracion3 -> SEMICOLON .

    VAR             reduce using rule 12 (declaracion3 -> SEMICOLON .)
    FUNCION         reduce using rule 12 (declaracion3 -> SEMICOLON .)
    PRINCIPAL       reduce using rule 12 (declaracion3 -> SEMICOLON .)
    REGRESA         reduce using rule 12 (declaracion3 -> SEMICOLON .)
    DESDE           reduce using rule 12 (declaracion3 -> SEMICOLON .)
    MIENTRAS        reduce using rule 12 (declaracion3 -> SEMICOLON .)
    LEE             reduce using rule 12 (declaracion3 -> SEMICOLON .)
    ESCRIBE         reduce using rule 12 (declaracion3 -> SEMICOLON .)
    SI              reduce using rule 12 (declaracion3 -> SEMICOLON .)
    ID              reduce using rule 12 (declaracion3 -> SEMICOLON .)
    CBRACKET        reduce using rule 12 (declaracion3 -> SEMICOLON .)
    OBRACKET        reduce using rule 12 (declaracion3 -> SEMICOLON .)


state 125

    (13) declaracion3 -> COMA . declaracion2
    (11) declaracion2 -> . posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3
    (78) posibleIDDeclaracion -> . ID
    (79) posibleIDDeclaracion -> . ID OCORCH expresion CCORCH
    (80) posibleIDDeclaracion -> . ID OCORCH expresion COMA expresion CCORCH

    ID              shift and go to state 32

    declaracion2                   shift and go to state 160
    posibleIDDeclaracion           shift and go to state 31

state 126

    (14) declaracion3 -> ASSIGN . expresion SEMICOLON
    (15) declaracion3 -> ASSIGN . expresion COMA declaracion2
    (60) expresion -> . expresion LOGIC np_insertarOperador expresion
    (61) expresion -> . expresion RELOP np_insertarOperador expresion
    (62) expresion -> . termino
    (63) termino -> . termino PLUS np_insertarOperador termino
    (64) termino -> . termino MINUS np_insertarOperador termino
    (65) termino -> . termino MULTIPLY np_insertarOperador termino
    (66) termino -> . termino DIVIDE np_insertarOperador termino
    (68) termino -> . termino1 OPMATRIZ np_insertarOperador
    (69) termino -> . termino1
    (70) termino1 -> . posibleID
    (71) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (72) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (73) termino1 -> . llamadaFuncion
    (81) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (82) termino1 -> . QUOT CARACTER QUOT
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    OPAREN          shift and go to state 78
    QUOT            shift and go to state 79
    ID              shift and go to state 80

    expresion                      shift and go to state 161
    termino                        shift and go to state 72
    termino1                       shift and go to state 73
    posibleID                      shift and go to state 74
    llamadaFuncion                 shift and go to state 77

state 127

    (79) posibleIDDeclaracion -> ID OCORCH expresion CCORCH .

    SEMICOLON       reduce using rule 79 (posibleIDDeclaracion -> ID OCORCH expresion CCORCH .)
    COMA            reduce using rule 79 (posibleIDDeclaracion -> ID OCORCH expresion CCORCH .)
    ASSIGN          reduce using rule 79 (posibleIDDeclaracion -> ID OCORCH expresion CCORCH .)


state 128

    (80) posibleIDDeclaracion -> ID OCORCH expresion COMA . expresion CCORCH
    (60) expresion -> . expresion LOGIC np_insertarOperador expresion
    (61) expresion -> . expresion RELOP np_insertarOperador expresion
    (62) expresion -> . termino
    (63) termino -> . termino PLUS np_insertarOperador termino
    (64) termino -> . termino MINUS np_insertarOperador termino
    (65) termino -> . termino MULTIPLY np_insertarOperador termino
    (66) termino -> . termino DIVIDE np_insertarOperador termino
    (68) termino -> . termino1 OPMATRIZ np_insertarOperador
    (69) termino -> . termino1
    (70) termino1 -> . posibleID
    (71) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (72) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (73) termino1 -> . llamadaFuncion
    (81) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (82) termino1 -> . QUOT CARACTER QUOT
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    OPAREN          shift and go to state 78
    QUOT            shift and go to state 79
    ID              shift and go to state 80

    expresion                      shift and go to state 162
    termino                        shift and go to state 72
    termino1                       shift and go to state 73
    posibleID                      shift and go to state 74
    llamadaFuncion                 shift and go to state 77

state 129

    (16) declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables . OBRACKET estatutos CBRACKET

    OBRACKET        shift and go to state 163


state 130

    (25) declaracionFuncionVariables -> empty .

    OBRACKET        reduce using rule 25 (declaracionFuncionVariables -> empty .)


state 131

    (26) declaracionFuncionVariables -> declaracion .

    OBRACKET        reduce using rule 26 (declaracionFuncionVariables -> declaracion .)


state 132

    (18) declaracionFuncionParametros -> INT ID np_addVariableParametro . np_actualizarDimensiones declaracionFuncionParametros2
    (91) np_actualizarDimensiones -> .

    COMA            reduce using rule 91 (np_actualizarDimensiones -> .)
    CPAREN          reduce using rule 91 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 164

state 133

    (19) declaracionFuncionParametros -> FLOAT ID np_addVariableParametro . np_actualizarDimensiones declaracionFuncionParametros2
    (91) np_actualizarDimensiones -> .

    COMA            reduce using rule 91 (np_actualizarDimensiones -> .)
    CPAREN          reduce using rule 91 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 165

state 134

    (20) declaracionFuncionParametros -> CHAR ID np_addVariableParametro . np_actualizarDimensiones declaracionFuncionParametros2
    (91) np_actualizarDimensiones -> .

    COMA            reduce using rule 91 (np_actualizarDimensiones -> .)
    CPAREN          reduce using rule 91 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 166

state 135

    (60) expresion -> expresion LOGIC np_insertarOperador . expresion
    (60) expresion -> . expresion LOGIC np_insertarOperador expresion
    (61) expresion -> . expresion RELOP np_insertarOperador expresion
    (62) expresion -> . termino
    (63) termino -> . termino PLUS np_insertarOperador termino
    (64) termino -> . termino MINUS np_insertarOperador termino
    (65) termino -> . termino MULTIPLY np_insertarOperador termino
    (66) termino -> . termino DIVIDE np_insertarOperador termino
    (68) termino -> . termino1 OPMATRIZ np_insertarOperador
    (69) termino -> . termino1
    (70) termino1 -> . posibleID
    (71) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (72) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (73) termino1 -> . llamadaFuncion
    (81) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (82) termino1 -> . QUOT CARACTER QUOT
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    OPAREN          shift and go to state 78
    QUOT            shift and go to state 79
    ID              shift and go to state 80

    expresion                      shift and go to state 167
    termino                        shift and go to state 72
    termino1                       shift and go to state 73
    posibleID                      shift and go to state 74
    llamadaFuncion                 shift and go to state 77

state 136

    (61) expresion -> expresion RELOP np_insertarOperador . expresion
    (60) expresion -> . expresion LOGIC np_insertarOperador expresion
    (61) expresion -> . expresion RELOP np_insertarOperador expresion
    (62) expresion -> . termino
    (63) termino -> . termino PLUS np_insertarOperador termino
    (64) termino -> . termino MINUS np_insertarOperador termino
    (65) termino -> . termino MULTIPLY np_insertarOperador termino
    (66) termino -> . termino DIVIDE np_insertarOperador termino
    (68) termino -> . termino1 OPMATRIZ np_insertarOperador
    (69) termino -> . termino1
    (70) termino1 -> . posibleID
    (71) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (72) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (73) termino1 -> . llamadaFuncion
    (81) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (82) termino1 -> . QUOT CARACTER QUOT
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    OPAREN          shift and go to state 78
    QUOT            shift and go to state 79
    ID              shift and go to state 80

    expresion                      shift and go to state 168
    termino                        shift and go to state 72
    termino1                       shift and go to state 73
    posibleID                      shift and go to state 74
    llamadaFuncion                 shift and go to state 77

state 137

    (63) termino -> termino PLUS np_insertarOperador . termino
    (63) termino -> . termino PLUS np_insertarOperador termino
    (64) termino -> . termino MINUS np_insertarOperador termino
    (65) termino -> . termino MULTIPLY np_insertarOperador termino
    (66) termino -> . termino DIVIDE np_insertarOperador termino
    (68) termino -> . termino1 OPMATRIZ np_insertarOperador
    (69) termino -> . termino1
    (70) termino1 -> . posibleID
    (71) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (72) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (73) termino1 -> . llamadaFuncion
    (81) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (82) termino1 -> . QUOT CARACTER QUOT
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    OPAREN          shift and go to state 78
    QUOT            shift and go to state 79
    ID              shift and go to state 80

    termino                        shift and go to state 169
    termino1                       shift and go to state 73
    posibleID                      shift and go to state 74
    llamadaFuncion                 shift and go to state 77

state 138

    (64) termino -> termino MINUS np_insertarOperador . termino
    (63) termino -> . termino PLUS np_insertarOperador termino
    (64) termino -> . termino MINUS np_insertarOperador termino
    (65) termino -> . termino MULTIPLY np_insertarOperador termino
    (66) termino -> . termino DIVIDE np_insertarOperador termino
    (68) termino -> . termino1 OPMATRIZ np_insertarOperador
    (69) termino -> . termino1
    (70) termino1 -> . posibleID
    (71) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (72) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (73) termino1 -> . llamadaFuncion
    (81) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (82) termino1 -> . QUOT CARACTER QUOT
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    OPAREN          shift and go to state 78
    QUOT            shift and go to state 79
    ID              shift and go to state 80

    termino                        shift and go to state 170
    termino1                       shift and go to state 73
    posibleID                      shift and go to state 74
    llamadaFuncion                 shift and go to state 77

state 139

    (65) termino -> termino MULTIPLY np_insertarOperador . termino
    (63) termino -> . termino PLUS np_insertarOperador termino
    (64) termino -> . termino MINUS np_insertarOperador termino
    (65) termino -> . termino MULTIPLY np_insertarOperador termino
    (66) termino -> . termino DIVIDE np_insertarOperador termino
    (68) termino -> . termino1 OPMATRIZ np_insertarOperador
    (69) termino -> . termino1
    (70) termino1 -> . posibleID
    (71) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (72) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (73) termino1 -> . llamadaFuncion
    (81) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (82) termino1 -> . QUOT CARACTER QUOT
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    OPAREN          shift and go to state 78
    QUOT            shift and go to state 79
    ID              shift and go to state 80

    termino                        shift and go to state 171
    termino1                       shift and go to state 73
    posibleID                      shift and go to state 74
    llamadaFuncion                 shift and go to state 77

state 140

    (66) termino -> termino DIVIDE np_insertarOperador . termino
    (63) termino -> . termino PLUS np_insertarOperador termino
    (64) termino -> . termino MINUS np_insertarOperador termino
    (65) termino -> . termino MULTIPLY np_insertarOperador termino
    (66) termino -> . termino DIVIDE np_insertarOperador termino
    (68) termino -> . termino1 OPMATRIZ np_insertarOperador
    (69) termino -> . termino1
    (70) termino1 -> . posibleID
    (71) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (72) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (73) termino1 -> . llamadaFuncion
    (81) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (82) termino1 -> . QUOT CARACTER QUOT
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    OPAREN          shift and go to state 78
    QUOT            shift and go to state 79
    ID              shift and go to state 80

    termino                        shift and go to state 172
    termino1                       shift and go to state 73
    posibleID                      shift and go to state 74
    llamadaFuncion                 shift and go to state 77

state 141

    (68) termino -> termino1 OPMATRIZ np_insertarOperador .

    PLUS            reduce using rule 68 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    MINUS           reduce using rule 68 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    MULTIPLY        reduce using rule 68 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    DIVIDE          reduce using rule 68 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    SEMICOLON       reduce using rule 68 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    LOGIC           reduce using rule 68 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    RELOP           reduce using rule 68 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    CCORCH          reduce using rule 68 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    COMA            reduce using rule 68 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    CPAREN          reduce using rule 68 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    HAZ             reduce using rule 68 (termino -> termino1 OPMATRIZ np_insertarOperador .)


state 142

    (81) termino1 -> OPAREN np_insertarOperador expresion . CPAREN np_insertarOperador
    (60) expresion -> expresion . LOGIC np_insertarOperador expresion
    (61) expresion -> expresion . RELOP np_insertarOperador expresion

    CPAREN          shift and go to state 173
    LOGIC           shift and go to state 98
    RELOP           shift and go to state 99


state 143

    (82) termino1 -> QUOT CARACTER QUOT .

    OPMATRIZ        reduce using rule 82 (termino1 -> QUOT CARACTER QUOT .)
    PLUS            reduce using rule 82 (termino1 -> QUOT CARACTER QUOT .)
    MINUS           reduce using rule 82 (termino1 -> QUOT CARACTER QUOT .)
    MULTIPLY        reduce using rule 82 (termino1 -> QUOT CARACTER QUOT .)
    DIVIDE          reduce using rule 82 (termino1 -> QUOT CARACTER QUOT .)
    SEMICOLON       reduce using rule 82 (termino1 -> QUOT CARACTER QUOT .)
    LOGIC           reduce using rule 82 (termino1 -> QUOT CARACTER QUOT .)
    RELOP           reduce using rule 82 (termino1 -> QUOT CARACTER QUOT .)
    CCORCH          reduce using rule 82 (termino1 -> QUOT CARACTER QUOT .)
    COMA            reduce using rule 82 (termino1 -> QUOT CARACTER QUOT .)
    CPAREN          reduce using rule 82 (termino1 -> QUOT CARACTER QUOT .)
    HAZ             reduce using rule 82 (termino1 -> QUOT CARACTER QUOT .)


state 144

    (83) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA . expresion HAZ OBRACKET estatutos CBRACKET
    (60) expresion -> . expresion LOGIC np_insertarOperador expresion
    (61) expresion -> . expresion RELOP np_insertarOperador expresion
    (62) expresion -> . termino
    (63) termino -> . termino PLUS np_insertarOperador termino
    (64) termino -> . termino MINUS np_insertarOperador termino
    (65) termino -> . termino MULTIPLY np_insertarOperador termino
    (66) termino -> . termino DIVIDE np_insertarOperador termino
    (68) termino -> . termino1 OPMATRIZ np_insertarOperador
    (69) termino -> . termino1
    (70) termino1 -> . posibleID
    (71) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (72) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (73) termino1 -> . llamadaFuncion
    (81) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (82) termino1 -> . QUOT CARACTER QUOT
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    OPAREN          shift and go to state 78
    QUOT            shift and go to state 79
    ID              shift and go to state 80

    expresion                      shift and go to state 174
    termino                        shift and go to state 72
    termino1                       shift and go to state 73
    posibleID                      shift and go to state 74
    llamadaFuncion                 shift and go to state 77

state 145

    (51) llamadaFuncion -> ID OPAREN primerParametro extraParametros . CPAREN

    CPAREN          shift and go to state 175


state 146

    (54) extraParametros -> COMA . expresion extraParametros
    (60) expresion -> . expresion LOGIC np_insertarOperador expresion
    (61) expresion -> . expresion RELOP np_insertarOperador expresion
    (62) expresion -> . termino
    (63) termino -> . termino PLUS np_insertarOperador termino
    (64) termino -> . termino MINUS np_insertarOperador termino
    (65) termino -> . termino MULTIPLY np_insertarOperador termino
    (66) termino -> . termino DIVIDE np_insertarOperador termino
    (68) termino -> . termino1 OPMATRIZ np_insertarOperador
    (69) termino -> . termino1
    (70) termino1 -> . posibleID
    (71) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (72) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (73) termino1 -> . llamadaFuncion
    (81) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (82) termino1 -> . QUOT CARACTER QUOT
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    OPAREN          shift and go to state 78
    QUOT            shift and go to state 79
    ID              shift and go to state 80

    expresion                      shift and go to state 176
    termino                        shift and go to state 72
    termino1                       shift and go to state 73
    posibleID                      shift and go to state 74
    llamadaFuncion                 shift and go to state 77

state 147

    (55) extraParametros -> empty .

    CPAREN          reduce using rule 55 (extraParametros -> empty .)


state 148

    (75) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH . expresion CCORCH
    (76) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH . expresion COMA expresion CCORCH
    (60) expresion -> . expresion LOGIC np_insertarOperador expresion
    (61) expresion -> . expresion RELOP np_insertarOperador expresion
    (62) expresion -> . termino
    (63) termino -> . termino PLUS np_insertarOperador termino
    (64) termino -> . termino MINUS np_insertarOperador termino
    (65) termino -> . termino MULTIPLY np_insertarOperador termino
    (66) termino -> . termino DIVIDE np_insertarOperador termino
    (68) termino -> . termino1 OPMATRIZ np_insertarOperador
    (69) termino -> . termino1
    (70) termino1 -> . posibleID
    (71) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (72) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (73) termino1 -> . llamadaFuncion
    (81) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (82) termino1 -> . QUOT CARACTER QUOT
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    OPAREN          shift and go to state 78
    QUOT            shift and go to state 79
    ID              shift and go to state 80

    expresion                      shift and go to state 177
    termino                        shift and go to state 72
    termino1                       shift and go to state 73
    posibleID                      shift and go to state 74
    llamadaFuncion                 shift and go to state 77

state 149

    (84) estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN . HAZ OBRACKET estatutos CBRACKET

    HAZ             shift and go to state 178


state 150

    (56) lectura -> LEE OPAREN posibleID lectura2 . CPAREN SEMICOLON

    CPAREN          shift and go to state 179


state 151

    (57) lectura2 -> empty .

    CPAREN          reduce using rule 57 (lectura2 -> empty .)


state 152

    (58) lectura2 -> COMA . posibleID lectura2
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    ID              shift and go to state 116

    posibleID                      shift and go to state 180

state 153

    (59) asignacion -> posibleID ASSIGN np_insertarOperador expresion . SEMICOLON
    (60) expresion -> expresion . LOGIC np_insertarOperador expresion
    (61) expresion -> expresion . RELOP np_insertarOperador expresion

    SEMICOLON       shift and go to state 181
    LOGIC           shift and go to state 98
    RELOP           shift and go to state 99


state 154

    (38) escritura -> ESCRIBE OPAREN escritura2 CPAREN . SEMICOLON

    SEMICOLON       shift and go to state 182


state 155

    (40) escritura2 -> posibleID escritura3 .

    CPAREN          reduce using rule 40 (escritura2 -> posibleID escritura3 .)


state 156

    (42) escritura3 -> empty .

    CPAREN          reduce using rule 42 (escritura3 -> empty .)


state 157

    (43) escritura3 -> COMA . expresion escritura3
    (44) escritura3 -> COMA . STRING escritura3
    (60) expresion -> . expresion LOGIC np_insertarOperador expresion
    (61) expresion -> . expresion RELOP np_insertarOperador expresion
    (62) expresion -> . termino
    (63) termino -> . termino PLUS np_insertarOperador termino
    (64) termino -> . termino MINUS np_insertarOperador termino
    (65) termino -> . termino MULTIPLY np_insertarOperador termino
    (66) termino -> . termino DIVIDE np_insertarOperador termino
    (68) termino -> . termino1 OPMATRIZ np_insertarOperador
    (69) termino -> . termino1
    (70) termino1 -> . posibleID
    (71) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (72) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (73) termino1 -> . llamadaFuncion
    (81) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (82) termino1 -> . QUOT CARACTER QUOT
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    STRING          shift and go to state 184
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    OPAREN          shift and go to state 78
    QUOT            shift and go to state 79
    ID              shift and go to state 80

    expresion                      shift and go to state 183
    termino                        shift and go to state 72
    termino1                       shift and go to state 73
    posibleID                      shift and go to state 74
    llamadaFuncion                 shift and go to state 77

state 158

    (41) escritura2 -> STRING escritura3 .

    CPAREN          reduce using rule 41 (escritura2 -> STRING escritura3 .)


state 159

    (45) decision -> SI OPAREN expresion np_iniciaIf . CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> SI OPAREN expresion np_iniciaIf . CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf

    CPAREN          shift and go to state 185


state 160

    (13) declaracion3 -> COMA declaracion2 .

    VAR             reduce using rule 13 (declaracion3 -> COMA declaracion2 .)
    FUNCION         reduce using rule 13 (declaracion3 -> COMA declaracion2 .)
    PRINCIPAL       reduce using rule 13 (declaracion3 -> COMA declaracion2 .)
    REGRESA         reduce using rule 13 (declaracion3 -> COMA declaracion2 .)
    DESDE           reduce using rule 13 (declaracion3 -> COMA declaracion2 .)
    MIENTRAS        reduce using rule 13 (declaracion3 -> COMA declaracion2 .)
    LEE             reduce using rule 13 (declaracion3 -> COMA declaracion2 .)
    ESCRIBE         reduce using rule 13 (declaracion3 -> COMA declaracion2 .)
    SI              reduce using rule 13 (declaracion3 -> COMA declaracion2 .)
    ID              reduce using rule 13 (declaracion3 -> COMA declaracion2 .)
    CBRACKET        reduce using rule 13 (declaracion3 -> COMA declaracion2 .)
    OBRACKET        reduce using rule 13 (declaracion3 -> COMA declaracion2 .)


state 161

    (14) declaracion3 -> ASSIGN expresion . SEMICOLON
    (15) declaracion3 -> ASSIGN expresion . COMA declaracion2
    (60) expresion -> expresion . LOGIC np_insertarOperador expresion
    (61) expresion -> expresion . RELOP np_insertarOperador expresion

    SEMICOLON       shift and go to state 186
    COMA            shift and go to state 187
    LOGIC           shift and go to state 98
    RELOP           shift and go to state 99


state 162

    (80) posibleIDDeclaracion -> ID OCORCH expresion COMA expresion . CCORCH
    (60) expresion -> expresion . LOGIC np_insertarOperador expresion
    (61) expresion -> expresion . RELOP np_insertarOperador expresion

    CCORCH          shift and go to state 188
    LOGIC           shift and go to state 98
    RELOP           shift and go to state 99


state 163

    (16) declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET . estatutos CBRACKET
    (28) estatutos -> . empty
    (29) estatutos -> . return
    (30) estatutos -> . declaracion estatutos
    (31) estatutos -> . estatutoRepeticionIncondicional estatutos
    (32) estatutos -> . estatutoRepeticionCondicional estatutos
    (33) estatutos -> . lectura estatutos
    (34) estatutos -> . asignacion estatutos
    (35) estatutos -> . escritura estatutos
    (36) estatutos -> . decision estatutos
    (37) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (93) empty -> .
    (85) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (83) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (84) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (56) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (59) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (38) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (45) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 93 (empty -> .)
    REGRESA         shift and go to state 47
    VAR             shift and go to state 8
    DESDE           shift and go to state 48
    MIENTRAS        shift and go to state 50
    LEE             shift and go to state 51
    ESCRIBE         shift and go to state 53
    SI              shift and go to state 54
    ID              shift and go to state 49

    estatutos                      shift and go to state 189
    empty                          shift and go to state 37
    return                         shift and go to state 38
    declaracion                    shift and go to state 39
    estatutoRepeticionIncondicional shift and go to state 40
    estatutoRepeticionCondicional  shift and go to state 41
    lectura                        shift and go to state 42
    asignacion                     shift and go to state 43
    escritura                      shift and go to state 44
    decision                       shift and go to state 45
    llamadaFuncion                 shift and go to state 46
    posibleID                      shift and go to state 52

state 164

    (18) declaracionFuncionParametros -> INT ID np_addVariableParametro np_actualizarDimensiones . declaracionFuncionParametros2
    (21) declaracionFuncionParametros2 -> . empty
    (22) declaracionFuncionParametros2 -> . COMA INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (23) declaracionFuncionParametros2 -> . COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (24) declaracionFuncionParametros2 -> . COMA CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (93) empty -> .

    COMA            shift and go to state 192
    CPAREN          reduce using rule 93 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 190
    empty                          shift and go to state 191

state 165

    (19) declaracionFuncionParametros -> FLOAT ID np_addVariableParametro np_actualizarDimensiones . declaracionFuncionParametros2
    (21) declaracionFuncionParametros2 -> . empty
    (22) declaracionFuncionParametros2 -> . COMA INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (23) declaracionFuncionParametros2 -> . COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (24) declaracionFuncionParametros2 -> . COMA CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (93) empty -> .

    COMA            shift and go to state 192
    CPAREN          reduce using rule 93 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 193
    empty                          shift and go to state 191

state 166

    (20) declaracionFuncionParametros -> CHAR ID np_addVariableParametro np_actualizarDimensiones . declaracionFuncionParametros2
    (21) declaracionFuncionParametros2 -> . empty
    (22) declaracionFuncionParametros2 -> . COMA INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (23) declaracionFuncionParametros2 -> . COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (24) declaracionFuncionParametros2 -> . COMA CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (93) empty -> .

    COMA            shift and go to state 192
    CPAREN          reduce using rule 93 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 194
    empty                          shift and go to state 191

state 167

    (60) expresion -> expresion LOGIC np_insertarOperador expresion .
    (60) expresion -> expresion . LOGIC np_insertarOperador expresion
    (61) expresion -> expresion . RELOP np_insertarOperador expresion

  ! shift/reduce conflict for LOGIC resolved as shift
  ! shift/reduce conflict for RELOP resolved as shift
    SEMICOLON       reduce using rule 60 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    CCORCH          reduce using rule 60 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    COMA            reduce using rule 60 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    CPAREN          reduce using rule 60 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    HAZ             reduce using rule 60 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    LOGIC           shift and go to state 98
    RELOP           shift and go to state 99

  ! LOGIC           [ reduce using rule 60 (expresion -> expresion LOGIC np_insertarOperador expresion .) ]
  ! RELOP           [ reduce using rule 60 (expresion -> expresion LOGIC np_insertarOperador expresion .) ]


state 168

    (61) expresion -> expresion RELOP np_insertarOperador expresion .
    (60) expresion -> expresion . LOGIC np_insertarOperador expresion
    (61) expresion -> expresion . RELOP np_insertarOperador expresion

  ! shift/reduce conflict for LOGIC resolved as shift
  ! shift/reduce conflict for RELOP resolved as shift
    SEMICOLON       reduce using rule 61 (expresion -> expresion RELOP np_insertarOperador expresion .)
    CCORCH          reduce using rule 61 (expresion -> expresion RELOP np_insertarOperador expresion .)
    COMA            reduce using rule 61 (expresion -> expresion RELOP np_insertarOperador expresion .)
    CPAREN          reduce using rule 61 (expresion -> expresion RELOP np_insertarOperador expresion .)
    HAZ             reduce using rule 61 (expresion -> expresion RELOP np_insertarOperador expresion .)
    LOGIC           shift and go to state 98
    RELOP           shift and go to state 99

  ! LOGIC           [ reduce using rule 61 (expresion -> expresion RELOP np_insertarOperador expresion .) ]
  ! RELOP           [ reduce using rule 61 (expresion -> expresion RELOP np_insertarOperador expresion .) ]


state 169

    (63) termino -> termino PLUS np_insertarOperador termino .
    (63) termino -> termino . PLUS np_insertarOperador termino
    (64) termino -> termino . MINUS np_insertarOperador termino
    (65) termino -> termino . MULTIPLY np_insertarOperador termino
    (66) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 63 (termino -> termino PLUS np_insertarOperador termino .)
    MINUS           reduce using rule 63 (termino -> termino PLUS np_insertarOperador termino .)
    SEMICOLON       reduce using rule 63 (termino -> termino PLUS np_insertarOperador termino .)
    LOGIC           reduce using rule 63 (termino -> termino PLUS np_insertarOperador termino .)
    RELOP           reduce using rule 63 (termino -> termino PLUS np_insertarOperador termino .)
    CCORCH          reduce using rule 63 (termino -> termino PLUS np_insertarOperador termino .)
    COMA            reduce using rule 63 (termino -> termino PLUS np_insertarOperador termino .)
    CPAREN          reduce using rule 63 (termino -> termino PLUS np_insertarOperador termino .)
    HAZ             reduce using rule 63 (termino -> termino PLUS np_insertarOperador termino .)
    MULTIPLY        shift and go to state 102
    DIVIDE          shift and go to state 103

  ! MULTIPLY        [ reduce using rule 63 (termino -> termino PLUS np_insertarOperador termino .) ]
  ! DIVIDE          [ reduce using rule 63 (termino -> termino PLUS np_insertarOperador termino .) ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]


state 170

    (64) termino -> termino MINUS np_insertarOperador termino .
    (63) termino -> termino . PLUS np_insertarOperador termino
    (64) termino -> termino . MINUS np_insertarOperador termino
    (65) termino -> termino . MULTIPLY np_insertarOperador termino
    (66) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 64 (termino -> termino MINUS np_insertarOperador termino .)
    MINUS           reduce using rule 64 (termino -> termino MINUS np_insertarOperador termino .)
    SEMICOLON       reduce using rule 64 (termino -> termino MINUS np_insertarOperador termino .)
    LOGIC           reduce using rule 64 (termino -> termino MINUS np_insertarOperador termino .)
    RELOP           reduce using rule 64 (termino -> termino MINUS np_insertarOperador termino .)
    CCORCH          reduce using rule 64 (termino -> termino MINUS np_insertarOperador termino .)
    COMA            reduce using rule 64 (termino -> termino MINUS np_insertarOperador termino .)
    CPAREN          reduce using rule 64 (termino -> termino MINUS np_insertarOperador termino .)
    HAZ             reduce using rule 64 (termino -> termino MINUS np_insertarOperador termino .)
    MULTIPLY        shift and go to state 102
    DIVIDE          shift and go to state 103

  ! MULTIPLY        [ reduce using rule 64 (termino -> termino MINUS np_insertarOperador termino .) ]
  ! DIVIDE          [ reduce using rule 64 (termino -> termino MINUS np_insertarOperador termino .) ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]


state 171

    (65) termino -> termino MULTIPLY np_insertarOperador termino .
    (63) termino -> termino . PLUS np_insertarOperador termino
    (64) termino -> termino . MINUS np_insertarOperador termino
    (65) termino -> termino . MULTIPLY np_insertarOperador termino
    (66) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 65 (termino -> termino MULTIPLY np_insertarOperador termino .)
    MINUS           reduce using rule 65 (termino -> termino MULTIPLY np_insertarOperador termino .)
    MULTIPLY        reduce using rule 65 (termino -> termino MULTIPLY np_insertarOperador termino .)
    DIVIDE          reduce using rule 65 (termino -> termino MULTIPLY np_insertarOperador termino .)
    SEMICOLON       reduce using rule 65 (termino -> termino MULTIPLY np_insertarOperador termino .)
    LOGIC           reduce using rule 65 (termino -> termino MULTIPLY np_insertarOperador termino .)
    RELOP           reduce using rule 65 (termino -> termino MULTIPLY np_insertarOperador termino .)
    CCORCH          reduce using rule 65 (termino -> termino MULTIPLY np_insertarOperador termino .)
    COMA            reduce using rule 65 (termino -> termino MULTIPLY np_insertarOperador termino .)
    CPAREN          reduce using rule 65 (termino -> termino MULTIPLY np_insertarOperador termino .)
    HAZ             reduce using rule 65 (termino -> termino MULTIPLY np_insertarOperador termino .)

  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! MULTIPLY        [ shift and go to state 102 ]
  ! DIVIDE          [ shift and go to state 103 ]


state 172

    (66) termino -> termino DIVIDE np_insertarOperador termino .
    (63) termino -> termino . PLUS np_insertarOperador termino
    (64) termino -> termino . MINUS np_insertarOperador termino
    (65) termino -> termino . MULTIPLY np_insertarOperador termino
    (66) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 66 (termino -> termino DIVIDE np_insertarOperador termino .)
    MINUS           reduce using rule 66 (termino -> termino DIVIDE np_insertarOperador termino .)
    MULTIPLY        reduce using rule 66 (termino -> termino DIVIDE np_insertarOperador termino .)
    DIVIDE          reduce using rule 66 (termino -> termino DIVIDE np_insertarOperador termino .)
    SEMICOLON       reduce using rule 66 (termino -> termino DIVIDE np_insertarOperador termino .)
    LOGIC           reduce using rule 66 (termino -> termino DIVIDE np_insertarOperador termino .)
    RELOP           reduce using rule 66 (termino -> termino DIVIDE np_insertarOperador termino .)
    CCORCH          reduce using rule 66 (termino -> termino DIVIDE np_insertarOperador termino .)
    COMA            reduce using rule 66 (termino -> termino DIVIDE np_insertarOperador termino .)
    CPAREN          reduce using rule 66 (termino -> termino DIVIDE np_insertarOperador termino .)
    HAZ             reduce using rule 66 (termino -> termino DIVIDE np_insertarOperador termino .)

  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! MULTIPLY        [ shift and go to state 102 ]
  ! DIVIDE          [ shift and go to state 103 ]


state 173

    (81) termino1 -> OPAREN np_insertarOperador expresion CPAREN . np_insertarOperador
    (67) np_insertarOperador -> .

    OPMATRIZ        reduce using rule 67 (np_insertarOperador -> .)
    PLUS            reduce using rule 67 (np_insertarOperador -> .)
    MINUS           reduce using rule 67 (np_insertarOperador -> .)
    MULTIPLY        reduce using rule 67 (np_insertarOperador -> .)
    DIVIDE          reduce using rule 67 (np_insertarOperador -> .)
    SEMICOLON       reduce using rule 67 (np_insertarOperador -> .)
    LOGIC           reduce using rule 67 (np_insertarOperador -> .)
    RELOP           reduce using rule 67 (np_insertarOperador -> .)
    CCORCH          reduce using rule 67 (np_insertarOperador -> .)
    COMA            reduce using rule 67 (np_insertarOperador -> .)
    CPAREN          reduce using rule 67 (np_insertarOperador -> .)
    HAZ             reduce using rule 67 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 195

state 174

    (83) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion . HAZ OBRACKET estatutos CBRACKET
    (60) expresion -> expresion . LOGIC np_insertarOperador expresion
    (61) expresion -> expresion . RELOP np_insertarOperador expresion

    HAZ             shift and go to state 196
    LOGIC           shift and go to state 98
    RELOP           shift and go to state 99


state 175

    (51) llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .

    SEMICOLON       reduce using rule 51 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    OPMATRIZ        reduce using rule 51 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    PLUS            reduce using rule 51 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    MINUS           reduce using rule 51 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    MULTIPLY        reduce using rule 51 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    DIVIDE          reduce using rule 51 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    LOGIC           reduce using rule 51 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    RELOP           reduce using rule 51 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    CCORCH          reduce using rule 51 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    COMA            reduce using rule 51 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    CPAREN          reduce using rule 51 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    HAZ             reduce using rule 51 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)


state 176

    (54) extraParametros -> COMA expresion . extraParametros
    (60) expresion -> expresion . LOGIC np_insertarOperador expresion
    (61) expresion -> expresion . RELOP np_insertarOperador expresion
    (54) extraParametros -> . COMA expresion extraParametros
    (55) extraParametros -> . empty
    (93) empty -> .

    LOGIC           shift and go to state 98
    RELOP           shift and go to state 99
    COMA            shift and go to state 146
    CPAREN          reduce using rule 93 (empty -> .)

    extraParametros                shift and go to state 197
    empty                          shift and go to state 147

state 177

    (75) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion . CCORCH
    (76) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion . COMA expresion CCORCH
    (60) expresion -> expresion . LOGIC np_insertarOperador expresion
    (61) expresion -> expresion . RELOP np_insertarOperador expresion

    CCORCH          shift and go to state 198
    COMA            shift and go to state 199
    LOGIC           shift and go to state 98
    RELOP           shift and go to state 99


state 178

    (84) estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ . OBRACKET estatutos CBRACKET

    OBRACKET        shift and go to state 200


state 179

    (56) lectura -> LEE OPAREN posibleID lectura2 CPAREN . SEMICOLON

    SEMICOLON       shift and go to state 201


state 180

    (58) lectura2 -> COMA posibleID . lectura2
    (57) lectura2 -> . empty
    (58) lectura2 -> . COMA posibleID lectura2
    (93) empty -> .

    COMA            shift and go to state 152
    CPAREN          reduce using rule 93 (empty -> .)

    lectura2                       shift and go to state 202
    empty                          shift and go to state 151

state 181

    (59) asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON .

    REGRESA         reduce using rule 59 (asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON .)
    VAR             reduce using rule 59 (asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON .)
    DESDE           reduce using rule 59 (asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON .)
    MIENTRAS        reduce using rule 59 (asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON .)
    LEE             reduce using rule 59 (asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON .)
    ESCRIBE         reduce using rule 59 (asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON .)
    SI              reduce using rule 59 (asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON .)
    ID              reduce using rule 59 (asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON .)
    CBRACKET        reduce using rule 59 (asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON .)


state 182

    (38) escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .

    REGRESA         reduce using rule 38 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    VAR             reduce using rule 38 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    DESDE           reduce using rule 38 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 38 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    LEE             reduce using rule 38 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 38 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    SI              reduce using rule 38 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    ID              reduce using rule 38 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    CBRACKET        reduce using rule 38 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)


state 183

    (43) escritura3 -> COMA expresion . escritura3
    (60) expresion -> expresion . LOGIC np_insertarOperador expresion
    (61) expresion -> expresion . RELOP np_insertarOperador expresion
    (42) escritura3 -> . empty
    (43) escritura3 -> . COMA expresion escritura3
    (44) escritura3 -> . COMA STRING escritura3
    (93) empty -> .

    LOGIC           shift and go to state 98
    RELOP           shift and go to state 99
    COMA            shift and go to state 157
    CPAREN          reduce using rule 93 (empty -> .)

    escritura3                     shift and go to state 203
    empty                          shift and go to state 156

state 184

    (44) escritura3 -> COMA STRING . escritura3
    (42) escritura3 -> . empty
    (43) escritura3 -> . COMA expresion escritura3
    (44) escritura3 -> . COMA STRING escritura3
    (93) empty -> .

    COMA            shift and go to state 157
    CPAREN          reduce using rule 93 (empty -> .)

    escritura3                     shift and go to state 204
    empty                          shift and go to state 156

state 185

    (45) decision -> SI OPAREN expresion np_iniciaIf CPAREN . ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> SI OPAREN expresion np_iniciaIf CPAREN . ENTONCES OBRACKET estatutos CBRACKET np_terminaIf

    ENTONCES        shift and go to state 205


state 186

    (14) declaracion3 -> ASSIGN expresion SEMICOLON .

    VAR             reduce using rule 14 (declaracion3 -> ASSIGN expresion SEMICOLON .)
    FUNCION         reduce using rule 14 (declaracion3 -> ASSIGN expresion SEMICOLON .)
    PRINCIPAL       reduce using rule 14 (declaracion3 -> ASSIGN expresion SEMICOLON .)
    REGRESA         reduce using rule 14 (declaracion3 -> ASSIGN expresion SEMICOLON .)
    DESDE           reduce using rule 14 (declaracion3 -> ASSIGN expresion SEMICOLON .)
    MIENTRAS        reduce using rule 14 (declaracion3 -> ASSIGN expresion SEMICOLON .)
    LEE             reduce using rule 14 (declaracion3 -> ASSIGN expresion SEMICOLON .)
    ESCRIBE         reduce using rule 14 (declaracion3 -> ASSIGN expresion SEMICOLON .)
    SI              reduce using rule 14 (declaracion3 -> ASSIGN expresion SEMICOLON .)
    ID              reduce using rule 14 (declaracion3 -> ASSIGN expresion SEMICOLON .)
    CBRACKET        reduce using rule 14 (declaracion3 -> ASSIGN expresion SEMICOLON .)
    OBRACKET        reduce using rule 14 (declaracion3 -> ASSIGN expresion SEMICOLON .)


state 187

    (15) declaracion3 -> ASSIGN expresion COMA . declaracion2
    (11) declaracion2 -> . posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3
    (78) posibleIDDeclaracion -> . ID
    (79) posibleIDDeclaracion -> . ID OCORCH expresion CCORCH
    (80) posibleIDDeclaracion -> . ID OCORCH expresion COMA expresion CCORCH

    ID              shift and go to state 32

    declaracion2                   shift and go to state 206
    posibleIDDeclaracion           shift and go to state 31

state 188

    (80) posibleIDDeclaracion -> ID OCORCH expresion COMA expresion CCORCH .

    SEMICOLON       reduce using rule 80 (posibleIDDeclaracion -> ID OCORCH expresion COMA expresion CCORCH .)
    COMA            reduce using rule 80 (posibleIDDeclaracion -> ID OCORCH expresion COMA expresion CCORCH .)
    ASSIGN          reduce using rule 80 (posibleIDDeclaracion -> ID OCORCH expresion COMA expresion CCORCH .)


state 189

    (16) declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos . CBRACKET

    CBRACKET        shift and go to state 207


state 190

    (18) declaracionFuncionParametros -> INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .

    CPAREN          reduce using rule 18 (declaracionFuncionParametros -> INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .)


state 191

    (21) declaracionFuncionParametros2 -> empty .

    CPAREN          reduce using rule 21 (declaracionFuncionParametros2 -> empty .)


state 192

    (22) declaracionFuncionParametros2 -> COMA . INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (23) declaracionFuncionParametros2 -> COMA . FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (24) declaracionFuncionParametros2 -> COMA . CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2

    INT             shift and go to state 208
    FLOAT           shift and go to state 209
    CHAR            shift and go to state 210


state 193

    (19) declaracionFuncionParametros -> FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .

    CPAREN          reduce using rule 19 (declaracionFuncionParametros -> FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .)


state 194

    (20) declaracionFuncionParametros -> CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .

    CPAREN          reduce using rule 20 (declaracionFuncionParametros -> CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .)


state 195

    (81) termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .

    OPMATRIZ        reduce using rule 81 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    PLUS            reduce using rule 81 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    MINUS           reduce using rule 81 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    MULTIPLY        reduce using rule 81 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    DIVIDE          reduce using rule 81 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    SEMICOLON       reduce using rule 81 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    LOGIC           reduce using rule 81 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    RELOP           reduce using rule 81 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    CCORCH          reduce using rule 81 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    COMA            reduce using rule 81 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    CPAREN          reduce using rule 81 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    HAZ             reduce using rule 81 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)


state 196

    (83) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ . OBRACKET estatutos CBRACKET

    OBRACKET        shift and go to state 211


state 197

    (54) extraParametros -> COMA expresion extraParametros .

    CPAREN          reduce using rule 54 (extraParametros -> COMA expresion extraParametros .)


state 198

    (75) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .

    ASSIGN          reduce using rule 75 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    OPMATRIZ        reduce using rule 75 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    PLUS            reduce using rule 75 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    MINUS           reduce using rule 75 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    MULTIPLY        reduce using rule 75 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    DIVIDE          reduce using rule 75 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    SEMICOLON       reduce using rule 75 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    LOGIC           reduce using rule 75 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    RELOP           reduce using rule 75 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    CCORCH          reduce using rule 75 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    COMA            reduce using rule 75 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    CPAREN          reduce using rule 75 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    HAZ             reduce using rule 75 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)


state 199

    (76) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA . expresion CCORCH
    (60) expresion -> . expresion LOGIC np_insertarOperador expresion
    (61) expresion -> . expresion RELOP np_insertarOperador expresion
    (62) expresion -> . termino
    (63) termino -> . termino PLUS np_insertarOperador termino
    (64) termino -> . termino MINUS np_insertarOperador termino
    (65) termino -> . termino MULTIPLY np_insertarOperador termino
    (66) termino -> . termino DIVIDE np_insertarOperador termino
    (68) termino -> . termino1 OPMATRIZ np_insertarOperador
    (69) termino -> . termino1
    (70) termino1 -> . posibleID
    (71) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (72) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (73) termino1 -> . llamadaFuncion
    (81) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (82) termino1 -> . QUOT CARACTER QUOT
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    OPAREN          shift and go to state 78
    QUOT            shift and go to state 79
    ID              shift and go to state 80

    expresion                      shift and go to state 212
    termino                        shift and go to state 72
    termino1                       shift and go to state 73
    posibleID                      shift and go to state 74
    llamadaFuncion                 shift and go to state 77

state 200

    (84) estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET . estatutos CBRACKET
    (28) estatutos -> . empty
    (29) estatutos -> . return
    (30) estatutos -> . declaracion estatutos
    (31) estatutos -> . estatutoRepeticionIncondicional estatutos
    (32) estatutos -> . estatutoRepeticionCondicional estatutos
    (33) estatutos -> . lectura estatutos
    (34) estatutos -> . asignacion estatutos
    (35) estatutos -> . escritura estatutos
    (36) estatutos -> . decision estatutos
    (37) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (93) empty -> .
    (85) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (83) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (84) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (56) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (59) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (38) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (45) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 93 (empty -> .)
    REGRESA         shift and go to state 47
    VAR             shift and go to state 8
    DESDE           shift and go to state 48
    MIENTRAS        shift and go to state 50
    LEE             shift and go to state 51
    ESCRIBE         shift and go to state 53
    SI              shift and go to state 54
    ID              shift and go to state 49

    estatutos                      shift and go to state 213
    empty                          shift and go to state 37
    return                         shift and go to state 38
    declaracion                    shift and go to state 39
    estatutoRepeticionIncondicional shift and go to state 40
    estatutoRepeticionCondicional  shift and go to state 41
    lectura                        shift and go to state 42
    asignacion                     shift and go to state 43
    escritura                      shift and go to state 44
    decision                       shift and go to state 45
    llamadaFuncion                 shift and go to state 46
    posibleID                      shift and go to state 52

state 201

    (56) lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .

    REGRESA         reduce using rule 56 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    VAR             reduce using rule 56 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    DESDE           reduce using rule 56 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 56 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    LEE             reduce using rule 56 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 56 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    SI              reduce using rule 56 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    ID              reduce using rule 56 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    CBRACKET        reduce using rule 56 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)


state 202

    (58) lectura2 -> COMA posibleID lectura2 .

    CPAREN          reduce using rule 58 (lectura2 -> COMA posibleID lectura2 .)


state 203

    (43) escritura3 -> COMA expresion escritura3 .

    CPAREN          reduce using rule 43 (escritura3 -> COMA expresion escritura3 .)


state 204

    (44) escritura3 -> COMA STRING escritura3 .

    CPAREN          reduce using rule 44 (escritura3 -> COMA STRING escritura3 .)


state 205

    (45) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES . OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES . OBRACKET estatutos CBRACKET np_terminaIf

    OBRACKET        shift and go to state 214


state 206

    (15) declaracion3 -> ASSIGN expresion COMA declaracion2 .

    VAR             reduce using rule 15 (declaracion3 -> ASSIGN expresion COMA declaracion2 .)
    FUNCION         reduce using rule 15 (declaracion3 -> ASSIGN expresion COMA declaracion2 .)
    PRINCIPAL       reduce using rule 15 (declaracion3 -> ASSIGN expresion COMA declaracion2 .)
    REGRESA         reduce using rule 15 (declaracion3 -> ASSIGN expresion COMA declaracion2 .)
    DESDE           reduce using rule 15 (declaracion3 -> ASSIGN expresion COMA declaracion2 .)
    MIENTRAS        reduce using rule 15 (declaracion3 -> ASSIGN expresion COMA declaracion2 .)
    LEE             reduce using rule 15 (declaracion3 -> ASSIGN expresion COMA declaracion2 .)
    ESCRIBE         reduce using rule 15 (declaracion3 -> ASSIGN expresion COMA declaracion2 .)
    SI              reduce using rule 15 (declaracion3 -> ASSIGN expresion COMA declaracion2 .)
    ID              reduce using rule 15 (declaracion3 -> ASSIGN expresion COMA declaracion2 .)
    CBRACKET        reduce using rule 15 (declaracion3 -> ASSIGN expresion COMA declaracion2 .)
    OBRACKET        reduce using rule 15 (declaracion3 -> ASSIGN expresion COMA declaracion2 .)


state 207

    (16) declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET .

    FUNCION         reduce using rule 16 (declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET .)
    PRINCIPAL       reduce using rule 16 (declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET .)


state 208

    (22) declaracionFuncionParametros2 -> COMA INT . ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2

    ID              shift and go to state 215


state 209

    (23) declaracionFuncionParametros2 -> COMA FLOAT . ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2

    ID              shift and go to state 216


state 210

    (24) declaracionFuncionParametros2 -> COMA CHAR . ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2

    ID              shift and go to state 217


state 211

    (83) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET . estatutos CBRACKET
    (28) estatutos -> . empty
    (29) estatutos -> . return
    (30) estatutos -> . declaracion estatutos
    (31) estatutos -> . estatutoRepeticionIncondicional estatutos
    (32) estatutos -> . estatutoRepeticionCondicional estatutos
    (33) estatutos -> . lectura estatutos
    (34) estatutos -> . asignacion estatutos
    (35) estatutos -> . escritura estatutos
    (36) estatutos -> . decision estatutos
    (37) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (93) empty -> .
    (85) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (83) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (84) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (56) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (59) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (38) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (45) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 93 (empty -> .)
    REGRESA         shift and go to state 47
    VAR             shift and go to state 8
    DESDE           shift and go to state 48
    MIENTRAS        shift and go to state 50
    LEE             shift and go to state 51
    ESCRIBE         shift and go to state 53
    SI              shift and go to state 54
    ID              shift and go to state 49

    estatutos                      shift and go to state 218
    empty                          shift and go to state 37
    return                         shift and go to state 38
    declaracion                    shift and go to state 39
    estatutoRepeticionIncondicional shift and go to state 40
    estatutoRepeticionCondicional  shift and go to state 41
    lectura                        shift and go to state 42
    asignacion                     shift and go to state 43
    escritura                      shift and go to state 44
    decision                       shift and go to state 45
    llamadaFuncion                 shift and go to state 46
    posibleID                      shift and go to state 52

state 212

    (76) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion . CCORCH
    (60) expresion -> expresion . LOGIC np_insertarOperador expresion
    (61) expresion -> expresion . RELOP np_insertarOperador expresion

    CCORCH          shift and go to state 219
    LOGIC           shift and go to state 98
    RELOP           shift and go to state 99


state 213

    (84) estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos . CBRACKET

    CBRACKET        shift and go to state 220


state 214

    (45) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET . estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET . estatutos CBRACKET np_terminaIf
    (28) estatutos -> . empty
    (29) estatutos -> . return
    (30) estatutos -> . declaracion estatutos
    (31) estatutos -> . estatutoRepeticionIncondicional estatutos
    (32) estatutos -> . estatutoRepeticionCondicional estatutos
    (33) estatutos -> . lectura estatutos
    (34) estatutos -> . asignacion estatutos
    (35) estatutos -> . escritura estatutos
    (36) estatutos -> . decision estatutos
    (37) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (93) empty -> .
    (85) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (83) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (84) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (56) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (59) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (38) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (45) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 93 (empty -> .)
    REGRESA         shift and go to state 47
    VAR             shift and go to state 8
    DESDE           shift and go to state 48
    MIENTRAS        shift and go to state 50
    LEE             shift and go to state 51
    ESCRIBE         shift and go to state 53
    SI              shift and go to state 54
    ID              shift and go to state 49

    estatutos                      shift and go to state 221
    empty                          shift and go to state 37
    return                         shift and go to state 38
    declaracion                    shift and go to state 39
    estatutoRepeticionIncondicional shift and go to state 40
    estatutoRepeticionCondicional  shift and go to state 41
    lectura                        shift and go to state 42
    asignacion                     shift and go to state 43
    escritura                      shift and go to state 44
    decision                       shift and go to state 45
    llamadaFuncion                 shift and go to state 46
    posibleID                      shift and go to state 52

state 215

    (22) declaracionFuncionParametros2 -> COMA INT ID . np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (89) np_addVariableParametro -> .

    COMA            reduce using rule 89 (np_addVariableParametro -> .)
    CPAREN          reduce using rule 89 (np_addVariableParametro -> .)

    np_addVariableParametro        shift and go to state 222

state 216

    (23) declaracionFuncionParametros2 -> COMA FLOAT ID . np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (89) np_addVariableParametro -> .

    COMA            reduce using rule 89 (np_addVariableParametro -> .)
    CPAREN          reduce using rule 89 (np_addVariableParametro -> .)

    np_addVariableParametro        shift and go to state 223

state 217

    (24) declaracionFuncionParametros2 -> COMA CHAR ID . np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (89) np_addVariableParametro -> .

    COMA            reduce using rule 89 (np_addVariableParametro -> .)
    CPAREN          reduce using rule 89 (np_addVariableParametro -> .)

    np_addVariableParametro        shift and go to state 224

state 218

    (83) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos . CBRACKET

    CBRACKET        shift and go to state 225


state 219

    (76) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .

    ASSIGN          reduce using rule 76 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    OPMATRIZ        reduce using rule 76 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    PLUS            reduce using rule 76 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    MINUS           reduce using rule 76 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    MULTIPLY        reduce using rule 76 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    DIVIDE          reduce using rule 76 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    SEMICOLON       reduce using rule 76 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    LOGIC           reduce using rule 76 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    RELOP           reduce using rule 76 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    CCORCH          reduce using rule 76 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    COMA            reduce using rule 76 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    CPAREN          reduce using rule 76 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    HAZ             reduce using rule 76 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)


state 220

    (84) estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .

    REGRESA         reduce using rule 84 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    VAR             reduce using rule 84 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    DESDE           reduce using rule 84 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    MIENTRAS        reduce using rule 84 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    LEE             reduce using rule 84 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    ESCRIBE         reduce using rule 84 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    SI              reduce using rule 84 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    ID              reduce using rule 84 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    CBRACKET        reduce using rule 84 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)


state 221

    (45) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos . CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos . CBRACKET np_terminaIf

    CBRACKET        shift and go to state 226


state 222

    (22) declaracionFuncionParametros2 -> COMA INT ID np_addVariableParametro . np_actualizarDimensiones declaracionFuncionParametros2
    (91) np_actualizarDimensiones -> .

    COMA            reduce using rule 91 (np_actualizarDimensiones -> .)
    CPAREN          reduce using rule 91 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 227

state 223

    (23) declaracionFuncionParametros2 -> COMA FLOAT ID np_addVariableParametro . np_actualizarDimensiones declaracionFuncionParametros2
    (91) np_actualizarDimensiones -> .

    COMA            reduce using rule 91 (np_actualizarDimensiones -> .)
    CPAREN          reduce using rule 91 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 228

state 224

    (24) declaracionFuncionParametros2 -> COMA CHAR ID np_addVariableParametro . np_actualizarDimensiones declaracionFuncionParametros2
    (91) np_actualizarDimensiones -> .

    COMA            reduce using rule 91 (np_actualizarDimensiones -> .)
    CPAREN          reduce using rule 91 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 229

state 225

    (83) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .

    REGRESA         reduce using rule 83 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    VAR             reduce using rule 83 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    DESDE           reduce using rule 83 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    MIENTRAS        reduce using rule 83 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    LEE             reduce using rule 83 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    ESCRIBE         reduce using rule 83 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    SI              reduce using rule 83 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    ID              reduce using rule 83 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    CBRACKET        reduce using rule 83 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)


state 226

    (45) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET . SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET . np_terminaIf
    (48) np_terminaIf -> .

    SINO            shift and go to state 230
    REGRESA         reduce using rule 48 (np_terminaIf -> .)
    VAR             reduce using rule 48 (np_terminaIf -> .)
    DESDE           reduce using rule 48 (np_terminaIf -> .)
    MIENTRAS        reduce using rule 48 (np_terminaIf -> .)
    LEE             reduce using rule 48 (np_terminaIf -> .)
    ESCRIBE         reduce using rule 48 (np_terminaIf -> .)
    SI              reduce using rule 48 (np_terminaIf -> .)
    ID              reduce using rule 48 (np_terminaIf -> .)
    CBRACKET        reduce using rule 48 (np_terminaIf -> .)

    np_terminaIf                   shift and go to state 231

state 227

    (22) declaracionFuncionParametros2 -> COMA INT ID np_addVariableParametro np_actualizarDimensiones . declaracionFuncionParametros2
    (21) declaracionFuncionParametros2 -> . empty
    (22) declaracionFuncionParametros2 -> . COMA INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (23) declaracionFuncionParametros2 -> . COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (24) declaracionFuncionParametros2 -> . COMA CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (93) empty -> .

    COMA            shift and go to state 192
    CPAREN          reduce using rule 93 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 232
    empty                          shift and go to state 191

state 228

    (23) declaracionFuncionParametros2 -> COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones . declaracionFuncionParametros2
    (21) declaracionFuncionParametros2 -> . empty
    (22) declaracionFuncionParametros2 -> . COMA INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (23) declaracionFuncionParametros2 -> . COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (24) declaracionFuncionParametros2 -> . COMA CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (93) empty -> .

    COMA            shift and go to state 192
    CPAREN          reduce using rule 93 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 233
    empty                          shift and go to state 191

state 229

    (24) declaracionFuncionParametros2 -> COMA CHAR ID np_addVariableParametro np_actualizarDimensiones . declaracionFuncionParametros2
    (21) declaracionFuncionParametros2 -> . empty
    (22) declaracionFuncionParametros2 -> . COMA INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (23) declaracionFuncionParametros2 -> . COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (24) declaracionFuncionParametros2 -> . COMA CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (93) empty -> .

    COMA            shift and go to state 192
    CPAREN          reduce using rule 93 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 234
    empty                          shift and go to state 191

state 230

    (45) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO . OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET

    OBRACKET        shift and go to state 235


state 231

    (46) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .

    REGRESA         reduce using rule 46 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    VAR             reduce using rule 46 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    DESDE           reduce using rule 46 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    MIENTRAS        reduce using rule 46 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    LEE             reduce using rule 46 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    ESCRIBE         reduce using rule 46 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    SI              reduce using rule 46 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    ID              reduce using rule 46 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    CBRACKET        reduce using rule 46 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)


state 232

    (22) declaracionFuncionParametros2 -> COMA INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .

    CPAREN          reduce using rule 22 (declaracionFuncionParametros2 -> COMA INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .)


state 233

    (23) declaracionFuncionParametros2 -> COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .

    CPAREN          reduce using rule 23 (declaracionFuncionParametros2 -> COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .)


state 234

    (24) declaracionFuncionParametros2 -> COMA CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .

    CPAREN          reduce using rule 24 (declaracionFuncionParametros2 -> COMA CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .)


state 235

    (45) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET . np_iniciaElse estatutos np_terminaElse CBRACKET
    (49) np_iniciaElse -> .

    REGRESA         reduce using rule 49 (np_iniciaElse -> .)
    VAR             reduce using rule 49 (np_iniciaElse -> .)
    DESDE           reduce using rule 49 (np_iniciaElse -> .)
    MIENTRAS        reduce using rule 49 (np_iniciaElse -> .)
    LEE             reduce using rule 49 (np_iniciaElse -> .)
    ESCRIBE         reduce using rule 49 (np_iniciaElse -> .)
    SI              reduce using rule 49 (np_iniciaElse -> .)
    ID              reduce using rule 49 (np_iniciaElse -> .)
    CBRACKET        reduce using rule 49 (np_iniciaElse -> .)

    np_iniciaElse                  shift and go to state 236

state 236

    (45) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse . estatutos np_terminaElse CBRACKET
    (28) estatutos -> . empty
    (29) estatutos -> . return
    (30) estatutos -> . declaracion estatutos
    (31) estatutos -> . estatutoRepeticionIncondicional estatutos
    (32) estatutos -> . estatutoRepeticionCondicional estatutos
    (33) estatutos -> . lectura estatutos
    (34) estatutos -> . asignacion estatutos
    (35) estatutos -> . escritura estatutos
    (36) estatutos -> . decision estatutos
    (37) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (93) empty -> .
    (85) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (83) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (84) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (56) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (59) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (38) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (45) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (46) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (51) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (74) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (75) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (76) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 93 (empty -> .)
    REGRESA         shift and go to state 47
    VAR             shift and go to state 8
    DESDE           shift and go to state 48
    MIENTRAS        shift and go to state 50
    LEE             shift and go to state 51
    ESCRIBE         shift and go to state 53
    SI              shift and go to state 54
    ID              shift and go to state 49

    estatutos                      shift and go to state 237
    empty                          shift and go to state 37
    return                         shift and go to state 38
    declaracion                    shift and go to state 39
    estatutoRepeticionIncondicional shift and go to state 40
    estatutoRepeticionCondicional  shift and go to state 41
    lectura                        shift and go to state 42
    asignacion                     shift and go to state 43
    escritura                      shift and go to state 44
    decision                       shift and go to state 45
    llamadaFuncion                 shift and go to state 46
    posibleID                      shift and go to state 52

state 237

    (45) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos . np_terminaElse CBRACKET
    (50) np_terminaElse -> .

    CBRACKET        reduce using rule 50 (np_terminaElse -> .)

    np_terminaElse                 shift and go to state 238

state 238

    (45) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse . CBRACKET

    CBRACKET        shift and go to state 239


state 239

    (45) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET .

    REGRESA         reduce using rule 45 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET .)
    VAR             reduce using rule 45 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET .)
    DESDE           reduce using rule 45 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET .)
    MIENTRAS        reduce using rule 45 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET .)
    LEE             reduce using rule 45 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET .)
    ESCRIBE         reduce using rule 45 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET .)
    SI              reduce using rule 45 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET .)
    ID              reduce using rule 45 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET .)
    CBRACKET        reduce using rule 45 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LOGIC in state 167 resolved as shift
WARNING: shift/reduce conflict for RELOP in state 167 resolved as shift
WARNING: shift/reduce conflict for LOGIC in state 168 resolved as shift
WARNING: shift/reduce conflict for RELOP in state 168 resolved as shift
