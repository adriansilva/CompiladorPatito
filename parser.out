Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NEWLINE
    LEE
    SI
    ESCRIBE
    MIENTRAS
    COMENTARIO
    IGNORE
    CCORCH
    NUMBER
    REGRESA
    OCORCH
    ENTONCES
    VOID
    SINO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMICOLON programa2
Rule 2     programa2 -> declaracion programa2
Rule 3     programa2 -> programa3
Rule 4     programa3 -> declaracionFuncion programa3
Rule 5     programa3 -> principal
Rule 6     principal -> PRINCIPAL OPAREN CPAREN OBRACKET principal1 CBRACKET
Rule 7     principal1 -> estatutos principal1
Rule 8     principal1 -> empty
Rule 9     declaracion -> VAR INT COLON declaracion2
Rule 10    declaracion -> VAR FLOAT COLON declaracion2
Rule 11    declaracion -> VAR CHAR COLON declaracion2
Rule 12    declaracion2 -> SEMICOLON
Rule 13    declaracion2 -> ID declaracion3
Rule 14    declaracion3 -> SEMICOLON
Rule 15    declaracion3 -> COMA declaracion2
Rule 16    declaracion3 -> ASSIGN expresion SEMICOLON
Rule 17    declaracion3 -> ASSIGN expresion COMA declaracion2
Rule 18    declaracionFuncion -> FUNCION
Rule 19    asignacion -> ID ASSIGN expresion SEMICOLON
Rule 20    expresion -> expresion LOGIC expresion
Rule 21    expresion -> expresion RELOP expresion
Rule 22    expresion -> termino1 OPMATRIZ
Rule 23    expresion -> termino
Rule 24    termino -> termino PLUS termino
Rule 25    termino -> termino MINUS termino
Rule 26    termino -> termino MULTIPLY termino
Rule 27    termino -> termino DIVIDE termino
Rule 28    termino -> termino1 OPMATRIZ
Rule 29    termino -> termino1
Rule 30    termino1 -> ID
Rule 31    termino1 -> ENTERO
Rule 32    termino1 -> FLOTANTE
Rule 33    termino1 -> CARACTER
Rule 34    termino1 -> OPAREN expresion CPAREN
Rule 35    estatutos -> estatutoRepeticionIncondicional
Rule 36    estatutoRepeticionIncondicional -> DESDE ID ASSIGN expresion HASTA expresion HAZ OBRACKET CBRACKET
Rule 37    empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 16 17 19 36
CARACTER             : 33
CBRACKET             : 6 36
CCORCH               : 
CHAR                 : 11
COLON                : 9 10 11
COMA                 : 15 17
COMENTARIO           : 
CPAREN               : 6 34
DESDE                : 36
DIVIDE               : 27
ENTERO               : 31
ENTONCES             : 
ESCRIBE              : 
FLOAT                : 10
FLOTANTE             : 32
FUNCION              : 18
HASTA                : 36
HAZ                  : 36
ID                   : 1 13 19 30 36
IGNORE               : 
INT                  : 9
LEE                  : 
LOGIC                : 20
MIENTRAS             : 
MINUS                : 25
MULTIPLY             : 26
NEWLINE              : 
NUMBER               : 
OBRACKET             : 6 36
OCORCH               : 
OPAREN               : 6 34
OPMATRIZ             : 22 28
PLUS                 : 24
PRINCIPAL            : 6
PROGRAMA             : 1
REGRESA              : 
RELOP                : 21
SEMICOLON            : 1 12 14 16 19
SI                   : 
SINO                 : 
VAR                  : 9 10 11
VOID                 : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 
declaracion          : 2
declaracion2         : 9 10 11 15 17
declaracion3         : 13
declaracionFuncion   : 4
empty                : 8
estatutoRepeticionIncondicional : 35
estatutos            : 7
expresion            : 16 17 19 20 20 21 21 34 36 36
principal            : 5
principal1           : 6 7
programa             : 0
programa2            : 1 2
programa3            : 3 4
termino              : 23 24 24 25 25 26 26 27 27
termino1             : 22 28 29

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMICOLON programa2

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMICOLON programa2

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMICOLON programa2

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMICOLON . programa2
    (2) programa2 -> . declaracion programa2
    (3) programa2 -> . programa3
    (9) declaracion -> . VAR INT COLON declaracion2
    (10) declaracion -> . VAR FLOAT COLON declaracion2
    (11) declaracion -> . VAR CHAR COLON declaracion2
    (4) programa3 -> . declaracionFuncion programa3
    (5) programa3 -> . principal
    (18) declaracionFuncion -> . FUNCION
    (6) principal -> . PRINCIPAL OPAREN CPAREN OBRACKET principal1 CBRACKET

    VAR             shift and go to state 12
    FUNCION         shift and go to state 5
    PRINCIPAL       shift and go to state 6

    programa2                      shift and go to state 9
    principal                      shift and go to state 10
    declaracion                    shift and go to state 11
    programa3                      shift and go to state 7
    declaracionFuncion             shift and go to state 8

state 5

    (18) declaracionFuncion -> FUNCION .

    FUNCION         reduce using rule 18 (declaracionFuncion -> FUNCION .)
    PRINCIPAL       reduce using rule 18 (declaracionFuncion -> FUNCION .)


state 6

    (6) principal -> PRINCIPAL . OPAREN CPAREN OBRACKET principal1 CBRACKET

    OPAREN          shift and go to state 13


state 7

    (3) programa2 -> programa3 .

    $end            reduce using rule 3 (programa2 -> programa3 .)


state 8

    (4) programa3 -> declaracionFuncion . programa3
    (4) programa3 -> . declaracionFuncion programa3
    (5) programa3 -> . principal
    (18) declaracionFuncion -> . FUNCION
    (6) principal -> . PRINCIPAL OPAREN CPAREN OBRACKET principal1 CBRACKET

    FUNCION         shift and go to state 5
    PRINCIPAL       shift and go to state 6

    principal                      shift and go to state 10
    declaracionFuncion             shift and go to state 8
    programa3                      shift and go to state 14

state 9

    (1) programa -> PROGRAMA ID SEMICOLON programa2 .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMICOLON programa2 .)


state 10

    (5) programa3 -> principal .

    $end            reduce using rule 5 (programa3 -> principal .)


state 11

    (2) programa2 -> declaracion . programa2
    (2) programa2 -> . declaracion programa2
    (3) programa2 -> . programa3
    (9) declaracion -> . VAR INT COLON declaracion2
    (10) declaracion -> . VAR FLOAT COLON declaracion2
    (11) declaracion -> . VAR CHAR COLON declaracion2
    (4) programa3 -> . declaracionFuncion programa3
    (5) programa3 -> . principal
    (18) declaracionFuncion -> . FUNCION
    (6) principal -> . PRINCIPAL OPAREN CPAREN OBRACKET principal1 CBRACKET

    VAR             shift and go to state 12
    FUNCION         shift and go to state 5
    PRINCIPAL       shift and go to state 6

    programa2                      shift and go to state 15
    principal                      shift and go to state 10
    declaracion                    shift and go to state 11
    programa3                      shift and go to state 7
    declaracionFuncion             shift and go to state 8

state 12

    (9) declaracion -> VAR . INT COLON declaracion2
    (10) declaracion -> VAR . FLOAT COLON declaracion2
    (11) declaracion -> VAR . CHAR COLON declaracion2

    INT             shift and go to state 18
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17


state 13

    (6) principal -> PRINCIPAL OPAREN . CPAREN OBRACKET principal1 CBRACKET

    CPAREN          shift and go to state 19


state 14

    (4) programa3 -> declaracionFuncion programa3 .

    $end            reduce using rule 4 (programa3 -> declaracionFuncion programa3 .)


state 15

    (2) programa2 -> declaracion programa2 .

    $end            reduce using rule 2 (programa2 -> declaracion programa2 .)


state 16

    (10) declaracion -> VAR FLOAT . COLON declaracion2

    COLON           shift and go to state 20


state 17

    (11) declaracion -> VAR CHAR . COLON declaracion2

    COLON           shift and go to state 21


state 18

    (9) declaracion -> VAR INT . COLON declaracion2

    COLON           shift and go to state 22


state 19

    (6) principal -> PRINCIPAL OPAREN CPAREN . OBRACKET principal1 CBRACKET

    OBRACKET        shift and go to state 23


state 20

    (10) declaracion -> VAR FLOAT COLON . declaracion2
    (12) declaracion2 -> . SEMICOLON
    (13) declaracion2 -> . ID declaracion3

    SEMICOLON       shift and go to state 24
    ID              shift and go to state 25

    declaracion2                   shift and go to state 26

state 21

    (11) declaracion -> VAR CHAR COLON . declaracion2
    (12) declaracion2 -> . SEMICOLON
    (13) declaracion2 -> . ID declaracion3

    SEMICOLON       shift and go to state 24
    ID              shift and go to state 25

    declaracion2                   shift and go to state 27

state 22

    (9) declaracion -> VAR INT COLON . declaracion2
    (12) declaracion2 -> . SEMICOLON
    (13) declaracion2 -> . ID declaracion3

    SEMICOLON       shift and go to state 24
    ID              shift and go to state 25

    declaracion2                   shift and go to state 28

state 23

    (6) principal -> PRINCIPAL OPAREN CPAREN OBRACKET . principal1 CBRACKET
    (7) principal1 -> . estatutos principal1
    (8) principal1 -> . empty
    (35) estatutos -> . estatutoRepeticionIncondicional
    (37) empty -> .
    (36) estatutoRepeticionIncondicional -> . DESDE ID ASSIGN expresion HASTA expresion HAZ OBRACKET CBRACKET

    CBRACKET        reduce using rule 37 (empty -> .)
    DESDE           shift and go to state 33

    estatutos                      shift and go to state 29
    principal1                     shift and go to state 30
    estatutoRepeticionIncondicional shift and go to state 31
    empty                          shift and go to state 32

state 24

    (12) declaracion2 -> SEMICOLON .

    VAR             reduce using rule 12 (declaracion2 -> SEMICOLON .)
    FUNCION         reduce using rule 12 (declaracion2 -> SEMICOLON .)
    PRINCIPAL       reduce using rule 12 (declaracion2 -> SEMICOLON .)


state 25

    (13) declaracion2 -> ID . declaracion3
    (14) declaracion3 -> . SEMICOLON
    (15) declaracion3 -> . COMA declaracion2
    (16) declaracion3 -> . ASSIGN expresion SEMICOLON
    (17) declaracion3 -> . ASSIGN expresion COMA declaracion2

    SEMICOLON       shift and go to state 37
    COMA            shift and go to state 34
    ASSIGN          shift and go to state 36

    declaracion3                   shift and go to state 35

state 26

    (10) declaracion -> VAR FLOAT COLON declaracion2 .

    VAR             reduce using rule 10 (declaracion -> VAR FLOAT COLON declaracion2 .)
    FUNCION         reduce using rule 10 (declaracion -> VAR FLOAT COLON declaracion2 .)
    PRINCIPAL       reduce using rule 10 (declaracion -> VAR FLOAT COLON declaracion2 .)


state 27

    (11) declaracion -> VAR CHAR COLON declaracion2 .

    VAR             reduce using rule 11 (declaracion -> VAR CHAR COLON declaracion2 .)
    FUNCION         reduce using rule 11 (declaracion -> VAR CHAR COLON declaracion2 .)
    PRINCIPAL       reduce using rule 11 (declaracion -> VAR CHAR COLON declaracion2 .)


state 28

    (9) declaracion -> VAR INT COLON declaracion2 .

    VAR             reduce using rule 9 (declaracion -> VAR INT COLON declaracion2 .)
    FUNCION         reduce using rule 9 (declaracion -> VAR INT COLON declaracion2 .)
    PRINCIPAL       reduce using rule 9 (declaracion -> VAR INT COLON declaracion2 .)


state 29

    (7) principal1 -> estatutos . principal1
    (7) principal1 -> . estatutos principal1
    (8) principal1 -> . empty
    (35) estatutos -> . estatutoRepeticionIncondicional
    (37) empty -> .
    (36) estatutoRepeticionIncondicional -> . DESDE ID ASSIGN expresion HASTA expresion HAZ OBRACKET CBRACKET

    CBRACKET        reduce using rule 37 (empty -> .)
    DESDE           shift and go to state 33

    estatutos                      shift and go to state 29
    principal1                     shift and go to state 38
    estatutoRepeticionIncondicional shift and go to state 31
    empty                          shift and go to state 32

state 30

    (6) principal -> PRINCIPAL OPAREN CPAREN OBRACKET principal1 . CBRACKET

    CBRACKET        shift and go to state 39


state 31

    (35) estatutos -> estatutoRepeticionIncondicional .

    DESDE           reduce using rule 35 (estatutos -> estatutoRepeticionIncondicional .)
    CBRACKET        reduce using rule 35 (estatutos -> estatutoRepeticionIncondicional .)


state 32

    (8) principal1 -> empty .

    CBRACKET        reduce using rule 8 (principal1 -> empty .)


state 33

    (36) estatutoRepeticionIncondicional -> DESDE . ID ASSIGN expresion HASTA expresion HAZ OBRACKET CBRACKET

    ID              shift and go to state 40


state 34

    (15) declaracion3 -> COMA . declaracion2
    (12) declaracion2 -> . SEMICOLON
    (13) declaracion2 -> . ID declaracion3

    SEMICOLON       shift and go to state 24
    ID              shift and go to state 25

    declaracion2                   shift and go to state 41

state 35

    (13) declaracion2 -> ID declaracion3 .

    VAR             reduce using rule 13 (declaracion2 -> ID declaracion3 .)
    FUNCION         reduce using rule 13 (declaracion2 -> ID declaracion3 .)
    PRINCIPAL       reduce using rule 13 (declaracion2 -> ID declaracion3 .)


state 36

    (16) declaracion3 -> ASSIGN . expresion SEMICOLON
    (17) declaracion3 -> ASSIGN . expresion COMA declaracion2
    (20) expresion -> . expresion LOGIC expresion
    (21) expresion -> . expresion RELOP expresion
    (22) expresion -> . termino1 OPMATRIZ
    (23) expresion -> . termino
    (30) termino1 -> . ID
    (31) termino1 -> . ENTERO
    (32) termino1 -> . FLOTANTE
    (33) termino1 -> . CARACTER
    (34) termino1 -> . OPAREN expresion CPAREN
    (24) termino -> . termino PLUS termino
    (25) termino -> . termino MINUS termino
    (26) termino -> . termino MULTIPLY termino
    (27) termino -> . termino DIVIDE termino
    (28) termino -> . termino1 OPMATRIZ
    (29) termino -> . termino1

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 42
    CARACTER        shift and go to state 44
    OPAREN          shift and go to state 43

    expresion                      shift and go to state 46
    termino1                       shift and go to state 49
    termino                        shift and go to state 45

state 37

    (14) declaracion3 -> SEMICOLON .

    VAR             reduce using rule 14 (declaracion3 -> SEMICOLON .)
    FUNCION         reduce using rule 14 (declaracion3 -> SEMICOLON .)
    PRINCIPAL       reduce using rule 14 (declaracion3 -> SEMICOLON .)


state 38

    (7) principal1 -> estatutos principal1 .

    CBRACKET        reduce using rule 7 (principal1 -> estatutos principal1 .)


state 39

    (6) principal -> PRINCIPAL OPAREN CPAREN OBRACKET principal1 CBRACKET .

    $end            reduce using rule 6 (principal -> PRINCIPAL OPAREN CPAREN OBRACKET principal1 CBRACKET .)


state 40

    (36) estatutoRepeticionIncondicional -> DESDE ID . ASSIGN expresion HASTA expresion HAZ OBRACKET CBRACKET

    ASSIGN          shift and go to state 50


state 41

    (15) declaracion3 -> COMA declaracion2 .

    VAR             reduce using rule 15 (declaracion3 -> COMA declaracion2 .)
    FUNCION         reduce using rule 15 (declaracion3 -> COMA declaracion2 .)
    PRINCIPAL       reduce using rule 15 (declaracion3 -> COMA declaracion2 .)


state 42

    (32) termino1 -> FLOTANTE .

    OPMATRIZ        reduce using rule 32 (termino1 -> FLOTANTE .)
    PLUS            reduce using rule 32 (termino1 -> FLOTANTE .)
    MINUS           reduce using rule 32 (termino1 -> FLOTANTE .)
    MULTIPLY        reduce using rule 32 (termino1 -> FLOTANTE .)
    DIVIDE          reduce using rule 32 (termino1 -> FLOTANTE .)
    HAZ             reduce using rule 32 (termino1 -> FLOTANTE .)
    LOGIC           reduce using rule 32 (termino1 -> FLOTANTE .)
    RELOP           reduce using rule 32 (termino1 -> FLOTANTE .)
    SEMICOLON       reduce using rule 32 (termino1 -> FLOTANTE .)
    COMA            reduce using rule 32 (termino1 -> FLOTANTE .)
    CPAREN          reduce using rule 32 (termino1 -> FLOTANTE .)
    HASTA           reduce using rule 32 (termino1 -> FLOTANTE .)


state 43

    (34) termino1 -> OPAREN . expresion CPAREN
    (20) expresion -> . expresion LOGIC expresion
    (21) expresion -> . expresion RELOP expresion
    (22) expresion -> . termino1 OPMATRIZ
    (23) expresion -> . termino
    (30) termino1 -> . ID
    (31) termino1 -> . ENTERO
    (32) termino1 -> . FLOTANTE
    (33) termino1 -> . CARACTER
    (34) termino1 -> . OPAREN expresion CPAREN
    (24) termino -> . termino PLUS termino
    (25) termino -> . termino MINUS termino
    (26) termino -> . termino MULTIPLY termino
    (27) termino -> . termino DIVIDE termino
    (28) termino -> . termino1 OPMATRIZ
    (29) termino -> . termino1

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 42
    CARACTER        shift and go to state 44
    OPAREN          shift and go to state 43

    expresion                      shift and go to state 51
    termino1                       shift and go to state 49
    termino                        shift and go to state 45

state 44

    (33) termino1 -> CARACTER .

    OPMATRIZ        reduce using rule 33 (termino1 -> CARACTER .)
    PLUS            reduce using rule 33 (termino1 -> CARACTER .)
    MINUS           reduce using rule 33 (termino1 -> CARACTER .)
    MULTIPLY        reduce using rule 33 (termino1 -> CARACTER .)
    DIVIDE          reduce using rule 33 (termino1 -> CARACTER .)
    HAZ             reduce using rule 33 (termino1 -> CARACTER .)
    LOGIC           reduce using rule 33 (termino1 -> CARACTER .)
    RELOP           reduce using rule 33 (termino1 -> CARACTER .)
    SEMICOLON       reduce using rule 33 (termino1 -> CARACTER .)
    COMA            reduce using rule 33 (termino1 -> CARACTER .)
    CPAREN          reduce using rule 33 (termino1 -> CARACTER .)
    HASTA           reduce using rule 33 (termino1 -> CARACTER .)


state 45

    (23) expresion -> termino .
    (24) termino -> termino . PLUS termino
    (25) termino -> termino . MINUS termino
    (26) termino -> termino . MULTIPLY termino
    (27) termino -> termino . DIVIDE termino

    SEMICOLON       reduce using rule 23 (expresion -> termino .)
    COMA            reduce using rule 23 (expresion -> termino .)
    LOGIC           reduce using rule 23 (expresion -> termino .)
    RELOP           reduce using rule 23 (expresion -> termino .)
    CPAREN          reduce using rule 23 (expresion -> termino .)
    HASTA           reduce using rule 23 (expresion -> termino .)
    HAZ             reduce using rule 23 (expresion -> termino .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 55
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 54


state 46

    (16) declaracion3 -> ASSIGN expresion . SEMICOLON
    (17) declaracion3 -> ASSIGN expresion . COMA declaracion2
    (20) expresion -> expresion . LOGIC expresion
    (21) expresion -> expresion . RELOP expresion

    SEMICOLON       shift and go to state 58
    COMA            shift and go to state 56
    LOGIC           shift and go to state 59
    RELOP           shift and go to state 57


state 47

    (30) termino1 -> ID .

    OPMATRIZ        reduce using rule 30 (termino1 -> ID .)
    PLUS            reduce using rule 30 (termino1 -> ID .)
    MINUS           reduce using rule 30 (termino1 -> ID .)
    MULTIPLY        reduce using rule 30 (termino1 -> ID .)
    DIVIDE          reduce using rule 30 (termino1 -> ID .)
    HAZ             reduce using rule 30 (termino1 -> ID .)
    LOGIC           reduce using rule 30 (termino1 -> ID .)
    RELOP           reduce using rule 30 (termino1 -> ID .)
    SEMICOLON       reduce using rule 30 (termino1 -> ID .)
    COMA            reduce using rule 30 (termino1 -> ID .)
    CPAREN          reduce using rule 30 (termino1 -> ID .)
    HASTA           reduce using rule 30 (termino1 -> ID .)


state 48

    (31) termino1 -> ENTERO .

    OPMATRIZ        reduce using rule 31 (termino1 -> ENTERO .)
    PLUS            reduce using rule 31 (termino1 -> ENTERO .)
    MINUS           reduce using rule 31 (termino1 -> ENTERO .)
    MULTIPLY        reduce using rule 31 (termino1 -> ENTERO .)
    DIVIDE          reduce using rule 31 (termino1 -> ENTERO .)
    HAZ             reduce using rule 31 (termino1 -> ENTERO .)
    LOGIC           reduce using rule 31 (termino1 -> ENTERO .)
    RELOP           reduce using rule 31 (termino1 -> ENTERO .)
    SEMICOLON       reduce using rule 31 (termino1 -> ENTERO .)
    COMA            reduce using rule 31 (termino1 -> ENTERO .)
    CPAREN          reduce using rule 31 (termino1 -> ENTERO .)
    HASTA           reduce using rule 31 (termino1 -> ENTERO .)


state 49

    (22) expresion -> termino1 . OPMATRIZ
    (28) termino -> termino1 . OPMATRIZ
    (29) termino -> termino1 .

    OPMATRIZ        shift and go to state 60
    PLUS            reduce using rule 29 (termino -> termino1 .)
    MINUS           reduce using rule 29 (termino -> termino1 .)
    MULTIPLY        reduce using rule 29 (termino -> termino1 .)
    DIVIDE          reduce using rule 29 (termino -> termino1 .)
    LOGIC           reduce using rule 29 (termino -> termino1 .)
    RELOP           reduce using rule 29 (termino -> termino1 .)
    SEMICOLON       reduce using rule 29 (termino -> termino1 .)
    COMA            reduce using rule 29 (termino -> termino1 .)
    CPAREN          reduce using rule 29 (termino -> termino1 .)
    HASTA           reduce using rule 29 (termino -> termino1 .)
    HAZ             reduce using rule 29 (termino -> termino1 .)


state 50

    (36) estatutoRepeticionIncondicional -> DESDE ID ASSIGN . expresion HASTA expresion HAZ OBRACKET CBRACKET
    (20) expresion -> . expresion LOGIC expresion
    (21) expresion -> . expresion RELOP expresion
    (22) expresion -> . termino1 OPMATRIZ
    (23) expresion -> . termino
    (30) termino1 -> . ID
    (31) termino1 -> . ENTERO
    (32) termino1 -> . FLOTANTE
    (33) termino1 -> . CARACTER
    (34) termino1 -> . OPAREN expresion CPAREN
    (24) termino -> . termino PLUS termino
    (25) termino -> . termino MINUS termino
    (26) termino -> . termino MULTIPLY termino
    (27) termino -> . termino DIVIDE termino
    (28) termino -> . termino1 OPMATRIZ
    (29) termino -> . termino1

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 42
    CARACTER        shift and go to state 44
    OPAREN          shift and go to state 43

    expresion                      shift and go to state 61
    termino1                       shift and go to state 49
    termino                        shift and go to state 45

state 51

    (34) termino1 -> OPAREN expresion . CPAREN
    (20) expresion -> expresion . LOGIC expresion
    (21) expresion -> expresion . RELOP expresion

    CPAREN          shift and go to state 62
    LOGIC           shift and go to state 59
    RELOP           shift and go to state 57


state 52

    (26) termino -> termino MULTIPLY . termino
    (24) termino -> . termino PLUS termino
    (25) termino -> . termino MINUS termino
    (26) termino -> . termino MULTIPLY termino
    (27) termino -> . termino DIVIDE termino
    (28) termino -> . termino1 OPMATRIZ
    (29) termino -> . termino1
    (30) termino1 -> . ID
    (31) termino1 -> . ENTERO
    (32) termino1 -> . FLOTANTE
    (33) termino1 -> . CARACTER
    (34) termino1 -> . OPAREN expresion CPAREN

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 42
    CARACTER        shift and go to state 44
    OPAREN          shift and go to state 43

    termino                        shift and go to state 63
    termino1                       shift and go to state 64

state 53

    (24) termino -> termino PLUS . termino
    (24) termino -> . termino PLUS termino
    (25) termino -> . termino MINUS termino
    (26) termino -> . termino MULTIPLY termino
    (27) termino -> . termino DIVIDE termino
    (28) termino -> . termino1 OPMATRIZ
    (29) termino -> . termino1
    (30) termino1 -> . ID
    (31) termino1 -> . ENTERO
    (32) termino1 -> . FLOTANTE
    (33) termino1 -> . CARACTER
    (34) termino1 -> . OPAREN expresion CPAREN

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 42
    CARACTER        shift and go to state 44
    OPAREN          shift and go to state 43

    termino                        shift and go to state 65
    termino1                       shift and go to state 64

state 54

    (27) termino -> termino DIVIDE . termino
    (24) termino -> . termino PLUS termino
    (25) termino -> . termino MINUS termino
    (26) termino -> . termino MULTIPLY termino
    (27) termino -> . termino DIVIDE termino
    (28) termino -> . termino1 OPMATRIZ
    (29) termino -> . termino1
    (30) termino1 -> . ID
    (31) termino1 -> . ENTERO
    (32) termino1 -> . FLOTANTE
    (33) termino1 -> . CARACTER
    (34) termino1 -> . OPAREN expresion CPAREN

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 42
    CARACTER        shift and go to state 44
    OPAREN          shift and go to state 43

    termino                        shift and go to state 66
    termino1                       shift and go to state 64

state 55

    (25) termino -> termino MINUS . termino
    (24) termino -> . termino PLUS termino
    (25) termino -> . termino MINUS termino
    (26) termino -> . termino MULTIPLY termino
    (27) termino -> . termino DIVIDE termino
    (28) termino -> . termino1 OPMATRIZ
    (29) termino -> . termino1
    (30) termino1 -> . ID
    (31) termino1 -> . ENTERO
    (32) termino1 -> . FLOTANTE
    (33) termino1 -> . CARACTER
    (34) termino1 -> . OPAREN expresion CPAREN

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 42
    CARACTER        shift and go to state 44
    OPAREN          shift and go to state 43

    termino                        shift and go to state 67
    termino1                       shift and go to state 64

state 56

    (17) declaracion3 -> ASSIGN expresion COMA . declaracion2
    (12) declaracion2 -> . SEMICOLON
    (13) declaracion2 -> . ID declaracion3

    SEMICOLON       shift and go to state 24
    ID              shift and go to state 25

    declaracion2                   shift and go to state 68

state 57

    (21) expresion -> expresion RELOP . expresion
    (20) expresion -> . expresion LOGIC expresion
    (21) expresion -> . expresion RELOP expresion
    (22) expresion -> . termino1 OPMATRIZ
    (23) expresion -> . termino
    (30) termino1 -> . ID
    (31) termino1 -> . ENTERO
    (32) termino1 -> . FLOTANTE
    (33) termino1 -> . CARACTER
    (34) termino1 -> . OPAREN expresion CPAREN
    (24) termino -> . termino PLUS termino
    (25) termino -> . termino MINUS termino
    (26) termino -> . termino MULTIPLY termino
    (27) termino -> . termino DIVIDE termino
    (28) termino -> . termino1 OPMATRIZ
    (29) termino -> . termino1

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 42
    CARACTER        shift and go to state 44
    OPAREN          shift and go to state 43

    expresion                      shift and go to state 69
    termino1                       shift and go to state 49
    termino                        shift and go to state 45

state 58

    (16) declaracion3 -> ASSIGN expresion SEMICOLON .

    VAR             reduce using rule 16 (declaracion3 -> ASSIGN expresion SEMICOLON .)
    FUNCION         reduce using rule 16 (declaracion3 -> ASSIGN expresion SEMICOLON .)
    PRINCIPAL       reduce using rule 16 (declaracion3 -> ASSIGN expresion SEMICOLON .)


state 59

    (20) expresion -> expresion LOGIC . expresion
    (20) expresion -> . expresion LOGIC expresion
    (21) expresion -> . expresion RELOP expresion
    (22) expresion -> . termino1 OPMATRIZ
    (23) expresion -> . termino
    (30) termino1 -> . ID
    (31) termino1 -> . ENTERO
    (32) termino1 -> . FLOTANTE
    (33) termino1 -> . CARACTER
    (34) termino1 -> . OPAREN expresion CPAREN
    (24) termino -> . termino PLUS termino
    (25) termino -> . termino MINUS termino
    (26) termino -> . termino MULTIPLY termino
    (27) termino -> . termino DIVIDE termino
    (28) termino -> . termino1 OPMATRIZ
    (29) termino -> . termino1

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 42
    CARACTER        shift and go to state 44
    OPAREN          shift and go to state 43

    expresion                      shift and go to state 70
    termino1                       shift and go to state 49
    termino                        shift and go to state 45

state 60

    (22) expresion -> termino1 OPMATRIZ .
    (28) termino -> termino1 OPMATRIZ .

  ! reduce/reduce conflict for LOGIC resolved using rule 22 (expresion -> termino1 OPMATRIZ .)
  ! reduce/reduce conflict for RELOP resolved using rule 22 (expresion -> termino1 OPMATRIZ .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 22 (expresion -> termino1 OPMATRIZ .)
  ! reduce/reduce conflict for COMA resolved using rule 22 (expresion -> termino1 OPMATRIZ .)
  ! reduce/reduce conflict for CPAREN resolved using rule 22 (expresion -> termino1 OPMATRIZ .)
  ! reduce/reduce conflict for HASTA resolved using rule 22 (expresion -> termino1 OPMATRIZ .)
  ! reduce/reduce conflict for HAZ resolved using rule 22 (expresion -> termino1 OPMATRIZ .)
    SEMICOLON       reduce using rule 22 (expresion -> termino1 OPMATRIZ .)
    COMA            reduce using rule 22 (expresion -> termino1 OPMATRIZ .)
    LOGIC           reduce using rule 22 (expresion -> termino1 OPMATRIZ .)
    RELOP           reduce using rule 22 (expresion -> termino1 OPMATRIZ .)
    CPAREN          reduce using rule 22 (expresion -> termino1 OPMATRIZ .)
    HASTA           reduce using rule 22 (expresion -> termino1 OPMATRIZ .)
    HAZ             reduce using rule 22 (expresion -> termino1 OPMATRIZ .)
    PLUS            reduce using rule 28 (termino -> termino1 OPMATRIZ .)
    MINUS           reduce using rule 28 (termino -> termino1 OPMATRIZ .)
    MULTIPLY        reduce using rule 28 (termino -> termino1 OPMATRIZ .)
    DIVIDE          reduce using rule 28 (termino -> termino1 OPMATRIZ .)

  ! LOGIC           [ reduce using rule 28 (termino -> termino1 OPMATRIZ .) ]
  ! RELOP           [ reduce using rule 28 (termino -> termino1 OPMATRIZ .) ]
  ! SEMICOLON       [ reduce using rule 28 (termino -> termino1 OPMATRIZ .) ]
  ! COMA            [ reduce using rule 28 (termino -> termino1 OPMATRIZ .) ]
  ! CPAREN          [ reduce using rule 28 (termino -> termino1 OPMATRIZ .) ]
  ! HASTA           [ reduce using rule 28 (termino -> termino1 OPMATRIZ .) ]
  ! HAZ             [ reduce using rule 28 (termino -> termino1 OPMATRIZ .) ]


state 61

    (36) estatutoRepeticionIncondicional -> DESDE ID ASSIGN expresion . HASTA expresion HAZ OBRACKET CBRACKET
    (20) expresion -> expresion . LOGIC expresion
    (21) expresion -> expresion . RELOP expresion

    HASTA           shift and go to state 71
    LOGIC           shift and go to state 59
    RELOP           shift and go to state 57


state 62

    (34) termino1 -> OPAREN expresion CPAREN .

    OPMATRIZ        reduce using rule 34 (termino1 -> OPAREN expresion CPAREN .)
    PLUS            reduce using rule 34 (termino1 -> OPAREN expresion CPAREN .)
    MINUS           reduce using rule 34 (termino1 -> OPAREN expresion CPAREN .)
    MULTIPLY        reduce using rule 34 (termino1 -> OPAREN expresion CPAREN .)
    DIVIDE          reduce using rule 34 (termino1 -> OPAREN expresion CPAREN .)
    HAZ             reduce using rule 34 (termino1 -> OPAREN expresion CPAREN .)
    LOGIC           reduce using rule 34 (termino1 -> OPAREN expresion CPAREN .)
    RELOP           reduce using rule 34 (termino1 -> OPAREN expresion CPAREN .)
    SEMICOLON       reduce using rule 34 (termino1 -> OPAREN expresion CPAREN .)
    COMA            reduce using rule 34 (termino1 -> OPAREN expresion CPAREN .)
    CPAREN          reduce using rule 34 (termino1 -> OPAREN expresion CPAREN .)
    HASTA           reduce using rule 34 (termino1 -> OPAREN expresion CPAREN .)


state 63

    (26) termino -> termino MULTIPLY termino .
    (24) termino -> termino . PLUS termino
    (25) termino -> termino . MINUS termino
    (26) termino -> termino . MULTIPLY termino
    (27) termino -> termino . DIVIDE termino

    PLUS            reduce using rule 26 (termino -> termino MULTIPLY termino .)
    MINUS           reduce using rule 26 (termino -> termino MULTIPLY termino .)
    MULTIPLY        reduce using rule 26 (termino -> termino MULTIPLY termino .)
    DIVIDE          reduce using rule 26 (termino -> termino MULTIPLY termino .)
    SEMICOLON       reduce using rule 26 (termino -> termino MULTIPLY termino .)
    COMA            reduce using rule 26 (termino -> termino MULTIPLY termino .)
    LOGIC           reduce using rule 26 (termino -> termino MULTIPLY termino .)
    RELOP           reduce using rule 26 (termino -> termino MULTIPLY termino .)
    CPAREN          reduce using rule 26 (termino -> termino MULTIPLY termino .)
    HASTA           reduce using rule 26 (termino -> termino MULTIPLY termino .)
    HAZ             reduce using rule 26 (termino -> termino MULTIPLY termino .)

  ! PLUS            [ shift and go to state 53 ]
  ! MINUS           [ shift and go to state 55 ]
  ! MULTIPLY        [ shift and go to state 52 ]
  ! DIVIDE          [ shift and go to state 54 ]


state 64

    (28) termino -> termino1 . OPMATRIZ
    (29) termino -> termino1 .

    OPMATRIZ        shift and go to state 72
    PLUS            reduce using rule 29 (termino -> termino1 .)
    MINUS           reduce using rule 29 (termino -> termino1 .)
    MULTIPLY        reduce using rule 29 (termino -> termino1 .)
    DIVIDE          reduce using rule 29 (termino -> termino1 .)
    SEMICOLON       reduce using rule 29 (termino -> termino1 .)
    COMA            reduce using rule 29 (termino -> termino1 .)
    LOGIC           reduce using rule 29 (termino -> termino1 .)
    RELOP           reduce using rule 29 (termino -> termino1 .)
    CPAREN          reduce using rule 29 (termino -> termino1 .)
    HASTA           reduce using rule 29 (termino -> termino1 .)
    HAZ             reduce using rule 29 (termino -> termino1 .)


state 65

    (24) termino -> termino PLUS termino .
    (24) termino -> termino . PLUS termino
    (25) termino -> termino . MINUS termino
    (26) termino -> termino . MULTIPLY termino
    (27) termino -> termino . DIVIDE termino

    PLUS            reduce using rule 24 (termino -> termino PLUS termino .)
    MINUS           reduce using rule 24 (termino -> termino PLUS termino .)
    SEMICOLON       reduce using rule 24 (termino -> termino PLUS termino .)
    COMA            reduce using rule 24 (termino -> termino PLUS termino .)
    LOGIC           reduce using rule 24 (termino -> termino PLUS termino .)
    RELOP           reduce using rule 24 (termino -> termino PLUS termino .)
    CPAREN          reduce using rule 24 (termino -> termino PLUS termino .)
    HASTA           reduce using rule 24 (termino -> termino PLUS termino .)
    HAZ             reduce using rule 24 (termino -> termino PLUS termino .)
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 54

  ! MULTIPLY        [ reduce using rule 24 (termino -> termino PLUS termino .) ]
  ! DIVIDE          [ reduce using rule 24 (termino -> termino PLUS termino .) ]
  ! PLUS            [ shift and go to state 53 ]
  ! MINUS           [ shift and go to state 55 ]


state 66

    (27) termino -> termino DIVIDE termino .
    (24) termino -> termino . PLUS termino
    (25) termino -> termino . MINUS termino
    (26) termino -> termino . MULTIPLY termino
    (27) termino -> termino . DIVIDE termino

    PLUS            reduce using rule 27 (termino -> termino DIVIDE termino .)
    MINUS           reduce using rule 27 (termino -> termino DIVIDE termino .)
    MULTIPLY        reduce using rule 27 (termino -> termino DIVIDE termino .)
    DIVIDE          reduce using rule 27 (termino -> termino DIVIDE termino .)
    SEMICOLON       reduce using rule 27 (termino -> termino DIVIDE termino .)
    COMA            reduce using rule 27 (termino -> termino DIVIDE termino .)
    LOGIC           reduce using rule 27 (termino -> termino DIVIDE termino .)
    RELOP           reduce using rule 27 (termino -> termino DIVIDE termino .)
    CPAREN          reduce using rule 27 (termino -> termino DIVIDE termino .)
    HASTA           reduce using rule 27 (termino -> termino DIVIDE termino .)
    HAZ             reduce using rule 27 (termino -> termino DIVIDE termino .)

  ! PLUS            [ shift and go to state 53 ]
  ! MINUS           [ shift and go to state 55 ]
  ! MULTIPLY        [ shift and go to state 52 ]
  ! DIVIDE          [ shift and go to state 54 ]


state 67

    (25) termino -> termino MINUS termino .
    (24) termino -> termino . PLUS termino
    (25) termino -> termino . MINUS termino
    (26) termino -> termino . MULTIPLY termino
    (27) termino -> termino . DIVIDE termino

    PLUS            reduce using rule 25 (termino -> termino MINUS termino .)
    MINUS           reduce using rule 25 (termino -> termino MINUS termino .)
    SEMICOLON       reduce using rule 25 (termino -> termino MINUS termino .)
    COMA            reduce using rule 25 (termino -> termino MINUS termino .)
    LOGIC           reduce using rule 25 (termino -> termino MINUS termino .)
    RELOP           reduce using rule 25 (termino -> termino MINUS termino .)
    CPAREN          reduce using rule 25 (termino -> termino MINUS termino .)
    HASTA           reduce using rule 25 (termino -> termino MINUS termino .)
    HAZ             reduce using rule 25 (termino -> termino MINUS termino .)
    MULTIPLY        shift and go to state 52
    DIVIDE          shift and go to state 54

  ! MULTIPLY        [ reduce using rule 25 (termino -> termino MINUS termino .) ]
  ! DIVIDE          [ reduce using rule 25 (termino -> termino MINUS termino .) ]
  ! PLUS            [ shift and go to state 53 ]
  ! MINUS           [ shift and go to state 55 ]


state 68

    (17) declaracion3 -> ASSIGN expresion COMA declaracion2 .

    VAR             reduce using rule 17 (declaracion3 -> ASSIGN expresion COMA declaracion2 .)
    FUNCION         reduce using rule 17 (declaracion3 -> ASSIGN expresion COMA declaracion2 .)
    PRINCIPAL       reduce using rule 17 (declaracion3 -> ASSIGN expresion COMA declaracion2 .)


state 69

    (21) expresion -> expresion RELOP expresion .
    (20) expresion -> expresion . LOGIC expresion
    (21) expresion -> expresion . RELOP expresion

  ! shift/reduce conflict for LOGIC resolved as shift
  ! shift/reduce conflict for RELOP resolved as shift
    SEMICOLON       reduce using rule 21 (expresion -> expresion RELOP expresion .)
    COMA            reduce using rule 21 (expresion -> expresion RELOP expresion .)
    CPAREN          reduce using rule 21 (expresion -> expresion RELOP expresion .)
    HASTA           reduce using rule 21 (expresion -> expresion RELOP expresion .)
    HAZ             reduce using rule 21 (expresion -> expresion RELOP expresion .)
    LOGIC           shift and go to state 59
    RELOP           shift and go to state 57

  ! LOGIC           [ reduce using rule 21 (expresion -> expresion RELOP expresion .) ]
  ! RELOP           [ reduce using rule 21 (expresion -> expresion RELOP expresion .) ]


state 70

    (20) expresion -> expresion LOGIC expresion .
    (20) expresion -> expresion . LOGIC expresion
    (21) expresion -> expresion . RELOP expresion

  ! shift/reduce conflict for LOGIC resolved as shift
  ! shift/reduce conflict for RELOP resolved as shift
    SEMICOLON       reduce using rule 20 (expresion -> expresion LOGIC expresion .)
    COMA            reduce using rule 20 (expresion -> expresion LOGIC expresion .)
    CPAREN          reduce using rule 20 (expresion -> expresion LOGIC expresion .)
    HASTA           reduce using rule 20 (expresion -> expresion LOGIC expresion .)
    HAZ             reduce using rule 20 (expresion -> expresion LOGIC expresion .)
    LOGIC           shift and go to state 59
    RELOP           shift and go to state 57

  ! LOGIC           [ reduce using rule 20 (expresion -> expresion LOGIC expresion .) ]
  ! RELOP           [ reduce using rule 20 (expresion -> expresion LOGIC expresion .) ]


state 71

    (36) estatutoRepeticionIncondicional -> DESDE ID ASSIGN expresion HASTA . expresion HAZ OBRACKET CBRACKET
    (20) expresion -> . expresion LOGIC expresion
    (21) expresion -> . expresion RELOP expresion
    (22) expresion -> . termino1 OPMATRIZ
    (23) expresion -> . termino
    (30) termino1 -> . ID
    (31) termino1 -> . ENTERO
    (32) termino1 -> . FLOTANTE
    (33) termino1 -> . CARACTER
    (34) termino1 -> . OPAREN expresion CPAREN
    (24) termino -> . termino PLUS termino
    (25) termino -> . termino MINUS termino
    (26) termino -> . termino MULTIPLY termino
    (27) termino -> . termino DIVIDE termino
    (28) termino -> . termino1 OPMATRIZ
    (29) termino -> . termino1

    ID              shift and go to state 47
    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 42
    CARACTER        shift and go to state 44
    OPAREN          shift and go to state 43

    expresion                      shift and go to state 73
    termino1                       shift and go to state 49
    termino                        shift and go to state 45

state 72

    (28) termino -> termino1 OPMATRIZ .

    PLUS            reduce using rule 28 (termino -> termino1 OPMATRIZ .)
    MINUS           reduce using rule 28 (termino -> termino1 OPMATRIZ .)
    MULTIPLY        reduce using rule 28 (termino -> termino1 OPMATRIZ .)
    DIVIDE          reduce using rule 28 (termino -> termino1 OPMATRIZ .)
    SEMICOLON       reduce using rule 28 (termino -> termino1 OPMATRIZ .)
    COMA            reduce using rule 28 (termino -> termino1 OPMATRIZ .)
    LOGIC           reduce using rule 28 (termino -> termino1 OPMATRIZ .)
    RELOP           reduce using rule 28 (termino -> termino1 OPMATRIZ .)
    CPAREN          reduce using rule 28 (termino -> termino1 OPMATRIZ .)
    HASTA           reduce using rule 28 (termino -> termino1 OPMATRIZ .)
    HAZ             reduce using rule 28 (termino -> termino1 OPMATRIZ .)


state 73

    (36) estatutoRepeticionIncondicional -> DESDE ID ASSIGN expresion HASTA expresion . HAZ OBRACKET CBRACKET
    (20) expresion -> expresion . LOGIC expresion
    (21) expresion -> expresion . RELOP expresion

    HAZ             shift and go to state 74
    LOGIC           shift and go to state 59
    RELOP           shift and go to state 57


state 74

    (36) estatutoRepeticionIncondicional -> DESDE ID ASSIGN expresion HASTA expresion HAZ . OBRACKET CBRACKET

    OBRACKET        shift and go to state 75


state 75

    (36) estatutoRepeticionIncondicional -> DESDE ID ASSIGN expresion HASTA expresion HAZ OBRACKET . CBRACKET

    CBRACKET        shift and go to state 76


state 76

    (36) estatutoRepeticionIncondicional -> DESDE ID ASSIGN expresion HASTA expresion HAZ OBRACKET CBRACKET .

    DESDE           reduce using rule 36 (estatutoRepeticionIncondicional -> DESDE ID ASSIGN expresion HASTA expresion HAZ OBRACKET CBRACKET .)
    CBRACKET        reduce using rule 36 (estatutoRepeticionIncondicional -> DESDE ID ASSIGN expresion HASTA expresion HAZ OBRACKET CBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LOGIC in state 69 resolved as shift
WARNING: shift/reduce conflict for RELOP in state 69 resolved as shift
WARNING: shift/reduce conflict for LOGIC in state 70 resolved as shift
WARNING: shift/reduce conflict for RELOP in state 70 resolved as shift
WARNING: reduce/reduce conflict in state 60 resolved using rule (expresion -> termino1 OPMATRIZ)
WARNING: rejected rule (termino -> termino1 OPMATRIZ) in state 60
