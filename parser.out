Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMENTARIO
    IGNORE
    NEWLINE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMICOLON programa2
Rule 2     programa2 -> declaracion programa2
Rule 3     programa2 -> programa3
Rule 4     programa3 -> declaracionFuncion principal
Rule 5     principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos
Rule 6     declaracion -> VAR INT np_defineTipo COLON declaracion2
Rule 7     declaracion -> VAR FLOAT np_defineTipo COLON declaracion2
Rule 8     declaracion -> VAR CHAR np_defineTipo COLON declaracion2
Rule 9     np_defineTipo -> <empty>
Rule 10    declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3
Rule 11    declaracion3 -> np_quitarFondo SEMICOLON
Rule 12    declaracion3 -> np_quitarFondo COMA declaracion2
Rule 13    declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON
Rule 14    declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2
Rule 15    declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
Rule 16    declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
Rule 17    declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
Rule 18    declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
Rule 19    np_endFunc -> <empty>
Rule 20    np_termino -> <empty>
Rule 21    declaracionFuncionParametros -> empty
Rule 22    declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 23    declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 24    declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 25    declaracionFuncionParametros2 -> empty
Rule 26    declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 27    declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 28    declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 29    declaracionFuncionVariables -> empty
Rule 30    declaracionFuncionVariables -> declaracion
Rule 31    np_declfunc -> <empty>
Rule 32    estatutos -> return
Rule 33    estatutos -> empty
Rule 34    estatutos -> declaracion estatutos
Rule 35    estatutos -> estatutoRepeticionIncondicional estatutos
Rule 36    estatutos -> estatutoRepeticionCondicional estatutos
Rule 37    estatutos -> lectura estatutos
Rule 38    estatutos -> asignacion estatutos
Rule 39    estatutos -> escritura estatutos
Rule 40    estatutos -> decision estatutos
Rule 41    estatutos -> llamadaFuncion SEMICOLON estatutos
Rule 42    escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
Rule 43    escritura2 -> empty
Rule 44    escritura2 -> posibleID escritura3
Rule 45    escritura2 -> STRING escritura3
Rule 46    escritura3 -> empty
Rule 47    escritura3 -> COMA expresion escritura3
Rule 48    escritura3 -> COMA STRING escritura3
Rule 49    decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
Rule 50    decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
Rule 51    np_iniciaIf -> <empty>
Rule 52    np_terminaIf -> <empty>
Rule 53    np_iniciaElse -> <empty>
Rule 54    np_terminaElse -> <empty>
Rule 55    llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN
Rule 56    primerParametro -> expresion
Rule 57    primerParametro -> empty
Rule 58    extraParametros -> COMA expresion extraParametros
Rule 59    extraParametros -> empty
Rule 60    lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
Rule 61    lectura2 -> empty
Rule 62    lectura2 -> COMA posibleID lectura2
Rule 63    asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
Rule 64    expresion -> expresion LOGIC np_insertarOperador expresion
Rule 65    expresion -> expresion RELOP np_insertarOperador expresion
Rule 66    expresion -> termino
Rule 67    termino -> termino PLUS np_insertarOperador termino
Rule 68    termino -> termino MINUS np_insertarOperador termino
Rule 69    termino -> termino MULTIPLY np_insertarOperador termino
Rule 70    termino -> termino DIVIDE np_insertarOperador termino
Rule 71    np_insertarOperador -> <empty>
Rule 72    termino -> termino1 OPMATRIZ np_insertarOperador
Rule 73    termino -> termino1
Rule 74    termino1 -> posibleID
Rule 75    termino1 -> ENTERO np_contieneID_Constante_Entero
Rule 76    termino1 -> FLOTANTE np_contieneID_Constante_Flotante
Rule 77    termino1 -> llamadaFuncion
Rule 78    termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
Rule 79    termino1 -> QUOT CARACTER QUOT
Rule 80    posibleID -> ID np_contieneID np_enviarACuadruplos
Rule 81    posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
Rule 82    posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
Rule 83    posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
Rule 84    posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
Rule 85    posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
Rule 86    np_updateCurrentDimension0 -> <empty>
Rule 87    np_updateCurrentDimension1 -> <empty>
Rule 88    np_updateCurrentDimension2 -> <empty>
Rule 89    estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
Rule 90    estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
Rule 91    npWhileStExp -> <empty>
Rule 92    npWhileInicia -> <empty>
Rule 93    npWhileTermina -> <empty>
Rule 94    return -> REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
Rule 95    return -> REGRESA SEMICOLON np_returnVOID
Rule 96    np_return -> <empty>
Rule 97    np_returnVOID -> <empty>
Rule 98    np_contieneID -> <empty>
Rule 99    np_contieneID_Constante_Entero -> <empty>
Rule 100   np_contieneID_Constante_Flotante -> <empty>
Rule 101   np_addVariableParametro -> <empty>
Rule 102   np_addVariable -> <empty>
Rule 103   np_enviarACuadruplos -> <empty>
Rule 104   np_actualizarDimensiones -> <empty>
Rule 105   np_agregarFondo -> <empty>
Rule 106   np_quitarFondo -> <empty>
Rule 107   np_printCuadruplos -> <empty>
Rule 108   empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 13 14 63
CARACTER             : 79
CBRACKET             : 5 15 16 17 18 49 49 50 89 90
CCORCH               : 81 82 84 85
CHAR                 : 8 18 23 28
COLON                : 6 7 8
COMA                 : 12 14 26 27 28 47 48 58 62 82 85
COMENTARIO           : 
CPAREN               : 5 15 16 17 18 42 49 50 55 60 78 90
DESDE                : 89
DIVIDE               : 70
ENTERO               : 75
ENTONCES             : 49 50
ESCRIBE              : 42
FLOAT                : 7 17 24 27
FLOTANTE             : 76
FUNCION              : 15 16 17 18
HASTA                : 89
HAZ                  : 89 90
ID                   : 1 15 16 17 18 55 80 81 82 83 84 85 89
IGNORE               : 
INT                  : 6 16 22 26
LEE                  : 60
LOGIC                : 64
MIENTRAS             : 90
MINUS                : 68
MULTIPLY             : 69
NEWLINE              : 
OBRACKET             : 5 15 16 17 18 49 49 50 89 90
OCORCH               : 81 82 84 85
OPAREN               : 5 15 16 17 18 42 49 50 55 60 78 90
OPMATRIZ             : 72
PLUS                 : 67
PRINCIPAL            : 5
PROGRAMA             : 1
QUOT                 : 79 79
REGRESA              : 94 95
RELOP                : 65
SEMICOLON            : 1 11 13 41 42 60 63 94 95
SI                   : 49 50
SINO                 : 49
STRING               : 45 48
VAR                  : 6 7 8
VOID                 : 15
error                : 

Nonterminals, with rules where they appear

asignacion           : 38
decision             : 40
declaracion          : 2 30 34
declaracion2         : 6 7 8 12 14
declaracion3         : 10
declaracionFuncion   : 4
declaracionFuncionParametros : 15 16 17 18
declaracionFuncionParametros2 : 22 23 24 26 27 28
declaracionFuncionVariables : 15 16 17 18
empty                : 21 25 29 33 43 46 57 59 61
escritura            : 39
escritura2           : 42
escritura3           : 44 45 47 48
estatutoRepeticionCondicional : 36
estatutoRepeticionIncondicional : 35
estatutos            : 5 15 16 17 18 34 35 36 37 38 39 40 41 49 49 50 89 90
expresion            : 13 14 47 49 50 56 58 63 64 64 65 65 78 81 82 82 84 85 85 89 90 94
extraParametros      : 55 58
lectura              : 37
lectura2             : 60 62
llamadaFuncion       : 41 77
npWhileInicia        : 90
npWhileStExp         : 
npWhileTermina       : 90
np_actualizarDimensiones : 83 84 85
np_addVariable       : 83 84 85
np_addVariableParametro : 
np_agregarFondo      : 10 22 23 24 26 27 28 49 49 50 63 63 81 82 82 90 94
np_contieneID        : 80 81 82 89
np_contieneID_Constante_Entero : 75
np_contieneID_Constante_Flotante : 76
np_declfunc          : 15 16 17 18
np_defineTipo        : 6 7 8 22 23 24 26 27 28
np_endFunc           : 15 16 17 18
np_enviarACuadruplos : 80 81 82 83 84 85
np_iniciaElse        : 49
np_iniciaIf          : 49 50
np_insertarOperador  : 13 14 63 64 65 67 68 69 70 72 78 78
np_printCuadruplos   : 5
np_quitarFondo       : 11 12 13 14 22 23 24 26 27 28 49 49 50 63 63 81 82 82 90 94
np_return            : 94
np_returnVOID        : 95
np_terminaElse       : 49
np_terminaIf         : 50
np_termino           : 
np_updateCurrentDimension0 : 83
np_updateCurrentDimension1 : 84
np_updateCurrentDimension2 : 85
posibleID            : 44 60 62 63 74
posibleIDDeclaracion : 10 22 23 24 26 27 28
primerParametro      : 55
principal            : 4
programa             : 0
programa2            : 1 2
programa3            : 3
return               : 32
termino              : 66 67 67 68 68 69 69 70 70
termino1             : 72 73

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMICOLON programa2

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMICOLON programa2

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMICOLON programa2

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMICOLON . programa2
    (2) programa2 -> . declaracion programa2
    (3) programa2 -> . programa3
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (4) programa3 -> . declaracionFuncion principal
    (15) declaracionFuncion -> . FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (16) declaracionFuncion -> . FUNCION INT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (17) declaracionFuncion -> . FUNCION FLOAT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (18) declaracionFuncion -> . FUNCION CHAR ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    VAR             shift and go to state 8
    FUNCION         shift and go to state 10

    programa2                      shift and go to state 5
    declaracion                    shift and go to state 6
    programa3                      shift and go to state 7
    declaracionFuncion             shift and go to state 9

state 5

    (1) programa -> PROGRAMA ID SEMICOLON programa2 .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMICOLON programa2 .)


state 6

    (2) programa2 -> declaracion . programa2
    (2) programa2 -> . declaracion programa2
    (3) programa2 -> . programa3
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (4) programa3 -> . declaracionFuncion principal
    (15) declaracionFuncion -> . FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (16) declaracionFuncion -> . FUNCION INT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (17) declaracionFuncion -> . FUNCION FLOAT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (18) declaracionFuncion -> . FUNCION CHAR ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    VAR             shift and go to state 8
    FUNCION         shift and go to state 10

    declaracion                    shift and go to state 6
    programa2                      shift and go to state 11
    programa3                      shift and go to state 7
    declaracionFuncion             shift and go to state 9

state 7

    (3) programa2 -> programa3 .

    $end            reduce using rule 3 (programa2 -> programa3 .)


state 8

    (6) declaracion -> VAR . INT np_defineTipo COLON declaracion2
    (7) declaracion -> VAR . FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> VAR . CHAR np_defineTipo COLON declaracion2

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14


state 9

    (4) programa3 -> declaracionFuncion . principal
    (5) principal -> . PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos

    PRINCIPAL       shift and go to state 16

    principal                      shift and go to state 15

state 10

    (15) declaracionFuncion -> FUNCION . VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (16) declaracionFuncion -> FUNCION . INT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (17) declaracionFuncion -> FUNCION . FLOAT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (18) declaracionFuncion -> FUNCION . CHAR ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    VOID            shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20


state 11

    (2) programa2 -> declaracion programa2 .

    $end            reduce using rule 2 (programa2 -> declaracion programa2 .)


state 12

    (6) declaracion -> VAR INT . np_defineTipo COLON declaracion2
    (9) np_defineTipo -> .

    COLON           reduce using rule 9 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 21

state 13

    (7) declaracion -> VAR FLOAT . np_defineTipo COLON declaracion2
    (9) np_defineTipo -> .

    COLON           reduce using rule 9 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 22

state 14

    (8) declaracion -> VAR CHAR . np_defineTipo COLON declaracion2
    (9) np_defineTipo -> .

    COLON           reduce using rule 9 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 23

state 15

    (4) programa3 -> declaracionFuncion principal .

    $end            reduce using rule 4 (programa3 -> declaracionFuncion principal .)


state 16

    (5) principal -> PRINCIPAL . OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos

    OPAREN          shift and go to state 24


state 17

    (15) declaracionFuncion -> FUNCION VOID . ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    ID              shift and go to state 25


state 18

    (16) declaracionFuncion -> FUNCION INT . ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    ID              shift and go to state 26


state 19

    (17) declaracionFuncion -> FUNCION FLOAT . ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    ID              shift and go to state 27


state 20

    (18) declaracionFuncion -> FUNCION CHAR . ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    ID              shift and go to state 28


state 21

    (6) declaracion -> VAR INT np_defineTipo . COLON declaracion2

    COLON           shift and go to state 29


state 22

    (7) declaracion -> VAR FLOAT np_defineTipo . COLON declaracion2

    COLON           shift and go to state 30


state 23

    (8) declaracion -> VAR CHAR np_defineTipo . COLON declaracion2

    COLON           shift and go to state 31


state 24

    (5) principal -> PRINCIPAL OPAREN . CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos

    CPAREN          shift and go to state 32


state 25

    (15) declaracionFuncion -> FUNCION VOID ID . np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (31) np_declfunc -> .

    OPAREN          reduce using rule 31 (np_declfunc -> .)

    np_declfunc                    shift and go to state 33

state 26

    (16) declaracionFuncion -> FUNCION INT ID . np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (31) np_declfunc -> .

    OPAREN          reduce using rule 31 (np_declfunc -> .)

    np_declfunc                    shift and go to state 34

state 27

    (17) declaracionFuncion -> FUNCION FLOAT ID . np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (31) np_declfunc -> .

    OPAREN          reduce using rule 31 (np_declfunc -> .)

    np_declfunc                    shift and go to state 35

state 28

    (18) declaracionFuncion -> FUNCION CHAR ID . np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (31) np_declfunc -> .

    OPAREN          reduce using rule 31 (np_declfunc -> .)

    np_declfunc                    shift and go to state 36

state 29

    (6) declaracion -> VAR INT np_defineTipo COLON . declaracion2
    (10) declaracion2 -> . np_agregarFondo posibleIDDeclaracion declaracion3
    (105) np_agregarFondo -> .

    ID              reduce using rule 105 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 37
    np_agregarFondo                shift and go to state 38

state 30

    (7) declaracion -> VAR FLOAT np_defineTipo COLON . declaracion2
    (10) declaracion2 -> . np_agregarFondo posibleIDDeclaracion declaracion3
    (105) np_agregarFondo -> .

    ID              reduce using rule 105 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 39
    np_agregarFondo                shift and go to state 38

state 31

    (8) declaracion -> VAR CHAR np_defineTipo COLON . declaracion2
    (10) declaracion2 -> . np_agregarFondo posibleIDDeclaracion declaracion3
    (105) np_agregarFondo -> .

    ID              reduce using rule 105 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 40
    np_agregarFondo                shift and go to state 38

state 32

    (5) principal -> PRINCIPAL OPAREN CPAREN . OBRACKET estatutos CBRACKET np_printCuadruplos

    OBRACKET        shift and go to state 41


state 33

    (15) declaracionFuncion -> FUNCION VOID ID np_declfunc . OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    OPAREN          shift and go to state 42


state 34

    (16) declaracionFuncion -> FUNCION INT ID np_declfunc . OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    OPAREN          shift and go to state 43


state 35

    (17) declaracionFuncion -> FUNCION FLOAT ID np_declfunc . OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    OPAREN          shift and go to state 44


state 36

    (18) declaracionFuncion -> FUNCION CHAR ID np_declfunc . OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    OPAREN          shift and go to state 45


state 37

    (6) declaracion -> VAR INT np_defineTipo COLON declaracion2 .

    VAR             reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    FUNCION         reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    REGRESA         reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    DESDE           reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    MIENTRAS        reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    LEE             reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    ESCRIBE         reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    SI              reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    ID              reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    CBRACKET        reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    OBRACKET        reduce using rule 6 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)


state 38

    (10) declaracion2 -> np_agregarFondo . posibleIDDeclaracion declaracion3
    (83) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (84) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (85) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (86) np_updateCurrentDimension0 -> .
    (87) np_updateCurrentDimension1 -> .
    (88) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 86 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 86 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 86 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 87 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 88 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 46
    np_updateCurrentDimension0     shift and go to state 47
    np_updateCurrentDimension1     shift and go to state 48
    np_updateCurrentDimension2     shift and go to state 49

state 39

    (7) declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .

    VAR             reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    FUNCION         reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    REGRESA         reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    DESDE           reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    MIENTRAS        reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    LEE             reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    ESCRIBE         reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    SI              reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    ID              reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    CBRACKET        reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    OBRACKET        reduce using rule 7 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)


state 40

    (8) declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .

    VAR             reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    FUNCION         reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    REGRESA         reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    DESDE           reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    MIENTRAS        reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    LEE             reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    ESCRIBE         reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    SI              reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    ID              reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    CBRACKET        reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    OBRACKET        reduce using rule 8 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)


state 41

    (5) principal -> PRINCIPAL OPAREN CPAREN OBRACKET . estatutos CBRACKET np_printCuadruplos
    (32) estatutos -> . return
    (33) estatutos -> . empty
    (34) estatutos -> . declaracion estatutos
    (35) estatutos -> . estatutoRepeticionIncondicional estatutos
    (36) estatutos -> . estatutoRepeticionCondicional estatutos
    (37) estatutos -> . lectura estatutos
    (38) estatutos -> . asignacion estatutos
    (39) estatutos -> . escritura estatutos
    (40) estatutos -> . decision estatutos
    (41) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (94) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (95) return -> . REGRESA SEMICOLON np_returnVOID
    (108) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (89) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (90) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (60) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (63) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (42) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 108 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 50
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 42

    (15) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN . declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (21) declaracionFuncionParametros -> . empty
    (22) declaracionFuncionParametros -> . INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (23) declaracionFuncionParametros -> . CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (24) declaracionFuncionParametros -> . FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (108) empty -> .

    INT             shift and go to state 71
    CHAR            shift and go to state 72
    FLOAT           shift and go to state 73
    CPAREN          reduce using rule 108 (empty -> .)

    declaracionFuncionParametros   shift and go to state 69
    empty                          shift and go to state 70

state 43

    (16) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN . declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (21) declaracionFuncionParametros -> . empty
    (22) declaracionFuncionParametros -> . INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (23) declaracionFuncionParametros -> . CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (24) declaracionFuncionParametros -> . FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (108) empty -> .

    INT             shift and go to state 71
    CHAR            shift and go to state 72
    FLOAT           shift and go to state 73
    CPAREN          reduce using rule 108 (empty -> .)

    declaracionFuncionParametros   shift and go to state 74
    empty                          shift and go to state 70

state 44

    (17) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN . declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (21) declaracionFuncionParametros -> . empty
    (22) declaracionFuncionParametros -> . INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (23) declaracionFuncionParametros -> . CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (24) declaracionFuncionParametros -> . FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (108) empty -> .

    INT             shift and go to state 71
    CHAR            shift and go to state 72
    FLOAT           shift and go to state 73
    CPAREN          reduce using rule 108 (empty -> .)

    declaracionFuncionParametros   shift and go to state 75
    empty                          shift and go to state 70

state 45

    (18) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN . declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (21) declaracionFuncionParametros -> . empty
    (22) declaracionFuncionParametros -> . INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (23) declaracionFuncionParametros -> . CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (24) declaracionFuncionParametros -> . FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (108) empty -> .

    INT             shift and go to state 71
    CHAR            shift and go to state 72
    FLOAT           shift and go to state 73
    CPAREN          reduce using rule 108 (empty -> .)

    declaracionFuncionParametros   shift and go to state 76
    empty                          shift and go to state 70

state 46

    (10) declaracion2 -> np_agregarFondo posibleIDDeclaracion . declaracion3
    (11) declaracion3 -> . np_quitarFondo SEMICOLON
    (12) declaracion3 -> . np_quitarFondo COMA declaracion2
    (13) declaracion3 -> . ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON
    (14) declaracion3 -> . ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2
    (106) np_quitarFondo -> .

    ASSIGN          shift and go to state 79
    SEMICOLON       reduce using rule 106 (np_quitarFondo -> .)
    COMA            reduce using rule 106 (np_quitarFondo -> .)

    declaracion3                   shift and go to state 77
    np_quitarFondo                 shift and go to state 78

state 47

    (83) posibleIDDeclaracion -> np_updateCurrentDimension0 . ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones

    ID              shift and go to state 80


state 48

    (84) posibleIDDeclaracion -> np_updateCurrentDimension1 . ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH

    ID              shift and go to state 81


state 49

    (85) posibleIDDeclaracion -> np_updateCurrentDimension2 . ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH

    ID              shift and go to state 82


state 50

    (5) principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos . CBRACKET np_printCuadruplos

    CBRACKET        shift and go to state 83


state 51

    (32) estatutos -> return .

    CBRACKET        reduce using rule 32 (estatutos -> return .)


state 52

    (33) estatutos -> empty .

    CBRACKET        reduce using rule 33 (estatutos -> empty .)


state 53

    (34) estatutos -> declaracion . estatutos
    (32) estatutos -> . return
    (33) estatutos -> . empty
    (34) estatutos -> . declaracion estatutos
    (35) estatutos -> . estatutoRepeticionIncondicional estatutos
    (36) estatutos -> . estatutoRepeticionCondicional estatutos
    (37) estatutos -> . lectura estatutos
    (38) estatutos -> . asignacion estatutos
    (39) estatutos -> . escritura estatutos
    (40) estatutos -> . decision estatutos
    (41) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (94) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (95) return -> . REGRESA SEMICOLON np_returnVOID
    (108) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (89) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (90) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (60) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (63) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (42) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 108 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    declaracion                    shift and go to state 53
    estatutos                      shift and go to state 84
    return                         shift and go to state 51
    empty                          shift and go to state 52
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 54

    (35) estatutos -> estatutoRepeticionIncondicional . estatutos
    (32) estatutos -> . return
    (33) estatutos -> . empty
    (34) estatutos -> . declaracion estatutos
    (35) estatutos -> . estatutoRepeticionIncondicional estatutos
    (36) estatutos -> . estatutoRepeticionCondicional estatutos
    (37) estatutos -> . lectura estatutos
    (38) estatutos -> . asignacion estatutos
    (39) estatutos -> . escritura estatutos
    (40) estatutos -> . decision estatutos
    (41) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (94) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (95) return -> . REGRESA SEMICOLON np_returnVOID
    (108) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (89) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (90) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (60) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (63) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (42) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 108 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutoRepeticionIncondicional shift and go to state 54
    estatutos                      shift and go to state 85
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 55

    (36) estatutos -> estatutoRepeticionCondicional . estatutos
    (32) estatutos -> . return
    (33) estatutos -> . empty
    (34) estatutos -> . declaracion estatutos
    (35) estatutos -> . estatutoRepeticionIncondicional estatutos
    (36) estatutos -> . estatutoRepeticionCondicional estatutos
    (37) estatutos -> . lectura estatutos
    (38) estatutos -> . asignacion estatutos
    (39) estatutos -> . escritura estatutos
    (40) estatutos -> . decision estatutos
    (41) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (94) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (95) return -> . REGRESA SEMICOLON np_returnVOID
    (108) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (89) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (90) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (60) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (63) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (42) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 108 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutoRepeticionCondicional  shift and go to state 55
    estatutos                      shift and go to state 86
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 56

    (37) estatutos -> lectura . estatutos
    (32) estatutos -> . return
    (33) estatutos -> . empty
    (34) estatutos -> . declaracion estatutos
    (35) estatutos -> . estatutoRepeticionIncondicional estatutos
    (36) estatutos -> . estatutoRepeticionCondicional estatutos
    (37) estatutos -> . lectura estatutos
    (38) estatutos -> . asignacion estatutos
    (39) estatutos -> . escritura estatutos
    (40) estatutos -> . decision estatutos
    (41) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (94) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (95) return -> . REGRESA SEMICOLON np_returnVOID
    (108) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (89) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (90) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (60) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (63) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (42) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 108 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    lectura                        shift and go to state 56
    estatutos                      shift and go to state 87
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 57

    (38) estatutos -> asignacion . estatutos
    (32) estatutos -> . return
    (33) estatutos -> . empty
    (34) estatutos -> . declaracion estatutos
    (35) estatutos -> . estatutoRepeticionIncondicional estatutos
    (36) estatutos -> . estatutoRepeticionCondicional estatutos
    (37) estatutos -> . lectura estatutos
    (38) estatutos -> . asignacion estatutos
    (39) estatutos -> . escritura estatutos
    (40) estatutos -> . decision estatutos
    (41) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (94) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (95) return -> . REGRESA SEMICOLON np_returnVOID
    (108) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (89) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (90) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (60) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (63) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (42) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 108 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    asignacion                     shift and go to state 57
    estatutos                      shift and go to state 88
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 58

    (39) estatutos -> escritura . estatutos
    (32) estatutos -> . return
    (33) estatutos -> . empty
    (34) estatutos -> . declaracion estatutos
    (35) estatutos -> . estatutoRepeticionIncondicional estatutos
    (36) estatutos -> . estatutoRepeticionCondicional estatutos
    (37) estatutos -> . lectura estatutos
    (38) estatutos -> . asignacion estatutos
    (39) estatutos -> . escritura estatutos
    (40) estatutos -> . decision estatutos
    (41) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (94) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (95) return -> . REGRESA SEMICOLON np_returnVOID
    (108) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (89) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (90) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (60) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (63) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (42) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 108 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    escritura                      shift and go to state 58
    estatutos                      shift and go to state 89
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 59

    (40) estatutos -> decision . estatutos
    (32) estatutos -> . return
    (33) estatutos -> . empty
    (34) estatutos -> . declaracion estatutos
    (35) estatutos -> . estatutoRepeticionIncondicional estatutos
    (36) estatutos -> . estatutoRepeticionCondicional estatutos
    (37) estatutos -> . lectura estatutos
    (38) estatutos -> . asignacion estatutos
    (39) estatutos -> . escritura estatutos
    (40) estatutos -> . decision estatutos
    (41) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (94) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (95) return -> . REGRESA SEMICOLON np_returnVOID
    (108) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (89) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (90) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (60) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (63) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (42) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 108 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    decision                       shift and go to state 59
    estatutos                      shift and go to state 90
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 60

    (41) estatutos -> llamadaFuncion . SEMICOLON estatutos

    SEMICOLON       shift and go to state 91


state 61

    (94) return -> REGRESA . np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (95) return -> REGRESA . SEMICOLON np_returnVOID
    (105) np_agregarFondo -> .

    SEMICOLON       shift and go to state 93
    ENTERO          reduce using rule 105 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 105 (np_agregarFondo -> .)
    OPAREN          reduce using rule 105 (np_agregarFondo -> .)
    QUOT            reduce using rule 105 (np_agregarFondo -> .)
    ID              reduce using rule 105 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 92

state 62

    (89) estatutoRepeticionIncondicional -> DESDE . ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET

    ID              shift and go to state 94


state 63

    (55) llamadaFuncion -> ID . OPAREN primerParametro extraParametros CPAREN
    (80) posibleID -> ID . np_contieneID np_enviarACuadruplos
    (81) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (98) np_contieneID -> .

    OPAREN          shift and go to state 95
    OCORCH          reduce using rule 98 (np_contieneID -> .)
    ASSIGN          reduce using rule 98 (np_contieneID -> .)

    np_contieneID                  shift and go to state 96

state 64

    (90) estatutoRepeticionCondicional -> MIENTRAS . OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina

    OPAREN          shift and go to state 97


state 65

    (60) lectura -> LEE . OPAREN posibleID lectura2 CPAREN SEMICOLON

    OPAREN          shift and go to state 98


state 66

    (63) asignacion -> posibleID . np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (105) np_agregarFondo -> .

    ASSIGN          reduce using rule 105 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 99

state 67

    (42) escritura -> ESCRIBE . OPAREN escritura2 CPAREN SEMICOLON

    OPAREN          shift and go to state 100


state 68

    (49) decision -> SI . OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> SI . OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf

    OPAREN          shift and go to state 101


state 69

    (15) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros . CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    CPAREN          shift and go to state 102


state 70

    (21) declaracionFuncionParametros -> empty .

    CPAREN          reduce using rule 21 (declaracionFuncionParametros -> empty .)


state 71

    (22) declaracionFuncionParametros -> INT . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (9) np_defineTipo -> .

    ID              reduce using rule 9 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 103

state 72

    (23) declaracionFuncionParametros -> CHAR . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (9) np_defineTipo -> .

    ID              reduce using rule 9 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 104

state 73

    (24) declaracionFuncionParametros -> FLOAT . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (9) np_defineTipo -> .

    ID              reduce using rule 9 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 105

state 74

    (16) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN declaracionFuncionParametros . CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    CPAREN          shift and go to state 106


state 75

    (17) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN declaracionFuncionParametros . CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    CPAREN          shift and go to state 107


state 76

    (18) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN declaracionFuncionParametros . CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    CPAREN          shift and go to state 108


state 77

    (10) declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .

    VAR             reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    FUNCION         reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    REGRESA         reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    DESDE           reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    MIENTRAS        reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    LEE             reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    ESCRIBE         reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    SI              reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    ID              reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    CBRACKET        reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    OBRACKET        reduce using rule 10 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)


state 78

    (11) declaracion3 -> np_quitarFondo . SEMICOLON
    (12) declaracion3 -> np_quitarFondo . COMA declaracion2

    SEMICOLON       shift and go to state 109
    COMA            shift and go to state 110


state 79

    (13) declaracion3 -> ASSIGN . np_insertarOperador expresion np_quitarFondo SEMICOLON
    (14) declaracion3 -> ASSIGN . np_insertarOperador expresion np_quitarFondo COMA declaracion2
    (71) np_insertarOperador -> .

    ENTERO          reduce using rule 71 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 71 (np_insertarOperador -> .)
    OPAREN          reduce using rule 71 (np_insertarOperador -> .)
    QUOT            reduce using rule 71 (np_insertarOperador -> .)
    ID              reduce using rule 71 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 111

state 80

    (83) posibleIDDeclaracion -> np_updateCurrentDimension0 ID . np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (102) np_addVariable -> .

    ASSIGN          reduce using rule 102 (np_addVariable -> .)
    SEMICOLON       reduce using rule 102 (np_addVariable -> .)
    COMA            reduce using rule 102 (np_addVariable -> .)
    CPAREN          reduce using rule 102 (np_addVariable -> .)

    np_addVariable                 shift and go to state 112

state 81

    (84) posibleIDDeclaracion -> np_updateCurrentDimension1 ID . np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (102) np_addVariable -> .

    OCORCH          reduce using rule 102 (np_addVariable -> .)

    np_addVariable                 shift and go to state 113

state 82

    (85) posibleIDDeclaracion -> np_updateCurrentDimension2 ID . np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (102) np_addVariable -> .

    OCORCH          reduce using rule 102 (np_addVariable -> .)

    np_addVariable                 shift and go to state 114

state 83

    (5) principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET . np_printCuadruplos
    (107) np_printCuadruplos -> .

    $end            reduce using rule 107 (np_printCuadruplos -> .)

    np_printCuadruplos             shift and go to state 115

state 84

    (34) estatutos -> declaracion estatutos .

    CBRACKET        reduce using rule 34 (estatutos -> declaracion estatutos .)


state 85

    (35) estatutos -> estatutoRepeticionIncondicional estatutos .

    CBRACKET        reduce using rule 35 (estatutos -> estatutoRepeticionIncondicional estatutos .)


state 86

    (36) estatutos -> estatutoRepeticionCondicional estatutos .

    CBRACKET        reduce using rule 36 (estatutos -> estatutoRepeticionCondicional estatutos .)


state 87

    (37) estatutos -> lectura estatutos .

    CBRACKET        reduce using rule 37 (estatutos -> lectura estatutos .)


state 88

    (38) estatutos -> asignacion estatutos .

    CBRACKET        reduce using rule 38 (estatutos -> asignacion estatutos .)


state 89

    (39) estatutos -> escritura estatutos .

    CBRACKET        reduce using rule 39 (estatutos -> escritura estatutos .)


state 90

    (40) estatutos -> decision estatutos .

    CBRACKET        reduce using rule 40 (estatutos -> decision estatutos .)


state 91

    (41) estatutos -> llamadaFuncion SEMICOLON . estatutos
    (32) estatutos -> . return
    (33) estatutos -> . empty
    (34) estatutos -> . declaracion estatutos
    (35) estatutos -> . estatutoRepeticionIncondicional estatutos
    (36) estatutos -> . estatutoRepeticionCondicional estatutos
    (37) estatutos -> . lectura estatutos
    (38) estatutos -> . asignacion estatutos
    (39) estatutos -> . escritura estatutos
    (40) estatutos -> . decision estatutos
    (41) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (94) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (95) return -> . REGRESA SEMICOLON np_returnVOID
    (108) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (89) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (90) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (60) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (63) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (42) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 108 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    llamadaFuncion                 shift and go to state 60
    estatutos                      shift and go to state 116
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    posibleID                      shift and go to state 66

state 92

    (94) return -> REGRESA np_agregarFondo . expresion np_quitarFondo SEMICOLON np_return
    (64) expresion -> . expresion LOGIC np_insertarOperador expresion
    (65) expresion -> . expresion RELOP np_insertarOperador expresion
    (66) expresion -> . termino
    (67) termino -> . termino PLUS np_insertarOperador termino
    (68) termino -> . termino MINUS np_insertarOperador termino
    (69) termino -> . termino MULTIPLY np_insertarOperador termino
    (70) termino -> . termino DIVIDE np_insertarOperador termino
    (72) termino -> . termino1 OPMATRIZ np_insertarOperador
    (73) termino -> . termino1
    (74) termino1 -> . posibleID
    (75) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (76) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (77) termino1 -> . llamadaFuncion
    (78) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (79) termino1 -> . QUOT CARACTER QUOT
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 121
    FLOTANTE        shift and go to state 122
    OPAREN          shift and go to state 124
    QUOT            shift and go to state 125
    ID              shift and go to state 126

    expresion                      shift and go to state 117
    termino                        shift and go to state 118
    termino1                       shift and go to state 119
    posibleID                      shift and go to state 120
    llamadaFuncion                 shift and go to state 123

state 93

    (95) return -> REGRESA SEMICOLON . np_returnVOID
    (97) np_returnVOID -> .

    CBRACKET        reduce using rule 97 (np_returnVOID -> .)

    np_returnVOID                  shift and go to state 127

state 94

    (89) estatutoRepeticionIncondicional -> DESDE ID . np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (98) np_contieneID -> .

    HASTA           reduce using rule 98 (np_contieneID -> .)

    np_contieneID                  shift and go to state 128

state 95

    (55) llamadaFuncion -> ID OPAREN . primerParametro extraParametros CPAREN
    (56) primerParametro -> . expresion
    (57) primerParametro -> . empty
    (64) expresion -> . expresion LOGIC np_insertarOperador expresion
    (65) expresion -> . expresion RELOP np_insertarOperador expresion
    (66) expresion -> . termino
    (108) empty -> .
    (67) termino -> . termino PLUS np_insertarOperador termino
    (68) termino -> . termino MINUS np_insertarOperador termino
    (69) termino -> . termino MULTIPLY np_insertarOperador termino
    (70) termino -> . termino DIVIDE np_insertarOperador termino
    (72) termino -> . termino1 OPMATRIZ np_insertarOperador
    (73) termino -> . termino1
    (74) termino1 -> . posibleID
    (75) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (76) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (77) termino1 -> . llamadaFuncion
    (78) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (79) termino1 -> . QUOT CARACTER QUOT
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    COMA            reduce using rule 108 (empty -> .)
    CPAREN          reduce using rule 108 (empty -> .)
    ENTERO          shift and go to state 121
    FLOTANTE        shift and go to state 122
    OPAREN          shift and go to state 124
    QUOT            shift and go to state 125
    ID              shift and go to state 126

    primerParametro                shift and go to state 129
    expresion                      shift and go to state 130
    empty                          shift and go to state 131
    termino                        shift and go to state 118
    termino1                       shift and go to state 119
    posibleID                      shift and go to state 120
    llamadaFuncion                 shift and go to state 123

state 96

    (80) posibleID -> ID np_contieneID . np_enviarACuadruplos
    (81) posibleID -> ID np_contieneID . np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> ID np_contieneID . np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (103) np_enviarACuadruplos -> .

    OCORCH          reduce using rule 103 (np_enviarACuadruplos -> .)
    ASSIGN          reduce using rule 103 (np_enviarACuadruplos -> .)
    OPMATRIZ        reduce using rule 103 (np_enviarACuadruplos -> .)
    PLUS            reduce using rule 103 (np_enviarACuadruplos -> .)
    MINUS           reduce using rule 103 (np_enviarACuadruplos -> .)
    MULTIPLY        reduce using rule 103 (np_enviarACuadruplos -> .)
    DIVIDE          reduce using rule 103 (np_enviarACuadruplos -> .)
    LOGIC           reduce using rule 103 (np_enviarACuadruplos -> .)
    RELOP           reduce using rule 103 (np_enviarACuadruplos -> .)
    SEMICOLON       reduce using rule 103 (np_enviarACuadruplos -> .)
    COMA            reduce using rule 103 (np_enviarACuadruplos -> .)
    CPAREN          reduce using rule 103 (np_enviarACuadruplos -> .)
    HAZ             reduce using rule 103 (np_enviarACuadruplos -> .)
    CCORCH          reduce using rule 103 (np_enviarACuadruplos -> .)

    np_enviarACuadruplos           shift and go to state 132

state 97

    (90) estatutoRepeticionCondicional -> MIENTRAS OPAREN . np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (105) np_agregarFondo -> .

    ENTERO          reduce using rule 105 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 105 (np_agregarFondo -> .)
    OPAREN          reduce using rule 105 (np_agregarFondo -> .)
    QUOT            reduce using rule 105 (np_agregarFondo -> .)
    ID              reduce using rule 105 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 133

state 98

    (60) lectura -> LEE OPAREN . posibleID lectura2 CPAREN SEMICOLON
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    ID              shift and go to state 135

    posibleID                      shift and go to state 134

state 99

    (63) asignacion -> posibleID np_agregarFondo . ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON

    ASSIGN          shift and go to state 136


state 100

    (42) escritura -> ESCRIBE OPAREN . escritura2 CPAREN SEMICOLON
    (43) escritura2 -> . empty
    (44) escritura2 -> . posibleID escritura3
    (45) escritura2 -> . STRING escritura3
    (108) empty -> .
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    STRING          shift and go to state 140
    CPAREN          reduce using rule 108 (empty -> .)
    ID              shift and go to state 135

    escritura2                     shift and go to state 137
    empty                          shift and go to state 138
    posibleID                      shift and go to state 139

state 101

    (49) decision -> SI OPAREN . np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> SI OPAREN . np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (105) np_agregarFondo -> .

    ENTERO          reduce using rule 105 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 105 (np_agregarFondo -> .)
    OPAREN          reduce using rule 105 (np_agregarFondo -> .)
    QUOT            reduce using rule 105 (np_agregarFondo -> .)
    ID              reduce using rule 105 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 141

state 102

    (15) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN . declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (29) declaracionFuncionVariables -> . empty
    (30) declaracionFuncionVariables -> . declaracion
    (108) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2

    OBRACKET        reduce using rule 108 (empty -> .)
    VAR             shift and go to state 8

    declaracionFuncionVariables    shift and go to state 142
    empty                          shift and go to state 143
    declaracion                    shift and go to state 144

state 103

    (22) declaracionFuncionParametros -> INT np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (105) np_agregarFondo -> .

    ID              reduce using rule 105 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 145

state 104

    (23) declaracionFuncionParametros -> CHAR np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (105) np_agregarFondo -> .

    ID              reduce using rule 105 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 146

state 105

    (24) declaracionFuncionParametros -> FLOAT np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (105) np_agregarFondo -> .

    ID              reduce using rule 105 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 147

state 106

    (16) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN . declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (29) declaracionFuncionVariables -> . empty
    (30) declaracionFuncionVariables -> . declaracion
    (108) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2

    OBRACKET        reduce using rule 108 (empty -> .)
    VAR             shift and go to state 8

    declaracionFuncionVariables    shift and go to state 148
    empty                          shift and go to state 143
    declaracion                    shift and go to state 144

state 107

    (17) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN . declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (29) declaracionFuncionVariables -> . empty
    (30) declaracionFuncionVariables -> . declaracion
    (108) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2

    OBRACKET        reduce using rule 108 (empty -> .)
    VAR             shift and go to state 8

    declaracionFuncionVariables    shift and go to state 149
    empty                          shift and go to state 143
    declaracion                    shift and go to state 144

state 108

    (18) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN declaracionFuncionParametros CPAREN . declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (29) declaracionFuncionVariables -> . empty
    (30) declaracionFuncionVariables -> . declaracion
    (108) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2

    OBRACKET        reduce using rule 108 (empty -> .)
    VAR             shift and go to state 8

    declaracionFuncionVariables    shift and go to state 150
    empty                          shift and go to state 143
    declaracion                    shift and go to state 144

state 109

    (11) declaracion3 -> np_quitarFondo SEMICOLON .

    VAR             reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)
    FUNCION         reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)
    REGRESA         reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)
    DESDE           reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)
    MIENTRAS        reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)
    LEE             reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)
    ESCRIBE         reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)
    SI              reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)
    ID              reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)
    CBRACKET        reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)
    OBRACKET        reduce using rule 11 (declaracion3 -> np_quitarFondo SEMICOLON .)


state 110

    (12) declaracion3 -> np_quitarFondo COMA . declaracion2
    (10) declaracion2 -> . np_agregarFondo posibleIDDeclaracion declaracion3
    (105) np_agregarFondo -> .

    ID              reduce using rule 105 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 151
    np_agregarFondo                shift and go to state 38

state 111

    (13) declaracion3 -> ASSIGN np_insertarOperador . expresion np_quitarFondo SEMICOLON
    (14) declaracion3 -> ASSIGN np_insertarOperador . expresion np_quitarFondo COMA declaracion2
    (64) expresion -> . expresion LOGIC np_insertarOperador expresion
    (65) expresion -> . expresion RELOP np_insertarOperador expresion
    (66) expresion -> . termino
    (67) termino -> . termino PLUS np_insertarOperador termino
    (68) termino -> . termino MINUS np_insertarOperador termino
    (69) termino -> . termino MULTIPLY np_insertarOperador termino
    (70) termino -> . termino DIVIDE np_insertarOperador termino
    (72) termino -> . termino1 OPMATRIZ np_insertarOperador
    (73) termino -> . termino1
    (74) termino1 -> . posibleID
    (75) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (76) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (77) termino1 -> . llamadaFuncion
    (78) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (79) termino1 -> . QUOT CARACTER QUOT
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 121
    FLOTANTE        shift and go to state 122
    OPAREN          shift and go to state 124
    QUOT            shift and go to state 125
    ID              shift and go to state 126

    expresion                      shift and go to state 152
    termino                        shift and go to state 118
    termino1                       shift and go to state 119
    posibleID                      shift and go to state 120
    llamadaFuncion                 shift and go to state 123

state 112

    (83) posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable . np_enviarACuadruplos np_actualizarDimensiones
    (103) np_enviarACuadruplos -> .

    ASSIGN          reduce using rule 103 (np_enviarACuadruplos -> .)
    SEMICOLON       reduce using rule 103 (np_enviarACuadruplos -> .)
    COMA            reduce using rule 103 (np_enviarACuadruplos -> .)
    CPAREN          reduce using rule 103 (np_enviarACuadruplos -> .)

    np_enviarACuadruplos           shift and go to state 153

state 113

    (84) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable . np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (103) np_enviarACuadruplos -> .

    OCORCH          reduce using rule 103 (np_enviarACuadruplos -> .)

    np_enviarACuadruplos           shift and go to state 154

state 114

    (85) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable . np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (103) np_enviarACuadruplos -> .

    OCORCH          reduce using rule 103 (np_enviarACuadruplos -> .)

    np_enviarACuadruplos           shift and go to state 155

state 115

    (5) principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos .

    $end            reduce using rule 5 (principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos .)


state 116

    (41) estatutos -> llamadaFuncion SEMICOLON estatutos .

    CBRACKET        reduce using rule 41 (estatutos -> llamadaFuncion SEMICOLON estatutos .)


state 117

    (94) return -> REGRESA np_agregarFondo expresion . np_quitarFondo SEMICOLON np_return
    (64) expresion -> expresion . LOGIC np_insertarOperador expresion
    (65) expresion -> expresion . RELOP np_insertarOperador expresion
    (106) np_quitarFondo -> .

    LOGIC           shift and go to state 157
    RELOP           shift and go to state 158
    SEMICOLON       reduce using rule 106 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 156

state 118

    (66) expresion -> termino .
    (67) termino -> termino . PLUS np_insertarOperador termino
    (68) termino -> termino . MINUS np_insertarOperador termino
    (69) termino -> termino . MULTIPLY np_insertarOperador termino
    (70) termino -> termino . DIVIDE np_insertarOperador termino

    LOGIC           reduce using rule 66 (expresion -> termino .)
    RELOP           reduce using rule 66 (expresion -> termino .)
    SEMICOLON       reduce using rule 66 (expresion -> termino .)
    COMA            reduce using rule 66 (expresion -> termino .)
    CPAREN          reduce using rule 66 (expresion -> termino .)
    HAZ             reduce using rule 66 (expresion -> termino .)
    CCORCH          reduce using rule 66 (expresion -> termino .)
    PLUS            shift and go to state 159
    MINUS           shift and go to state 160
    MULTIPLY        shift and go to state 161
    DIVIDE          shift and go to state 162


state 119

    (72) termino -> termino1 . OPMATRIZ np_insertarOperador
    (73) termino -> termino1 .

    OPMATRIZ        shift and go to state 163
    PLUS            reduce using rule 73 (termino -> termino1 .)
    MINUS           reduce using rule 73 (termino -> termino1 .)
    MULTIPLY        reduce using rule 73 (termino -> termino1 .)
    DIVIDE          reduce using rule 73 (termino -> termino1 .)
    LOGIC           reduce using rule 73 (termino -> termino1 .)
    RELOP           reduce using rule 73 (termino -> termino1 .)
    SEMICOLON       reduce using rule 73 (termino -> termino1 .)
    COMA            reduce using rule 73 (termino -> termino1 .)
    CPAREN          reduce using rule 73 (termino -> termino1 .)
    HAZ             reduce using rule 73 (termino -> termino1 .)
    CCORCH          reduce using rule 73 (termino -> termino1 .)


state 120

    (74) termino1 -> posibleID .

    OPMATRIZ        reduce using rule 74 (termino1 -> posibleID .)
    PLUS            reduce using rule 74 (termino1 -> posibleID .)
    MINUS           reduce using rule 74 (termino1 -> posibleID .)
    MULTIPLY        reduce using rule 74 (termino1 -> posibleID .)
    DIVIDE          reduce using rule 74 (termino1 -> posibleID .)
    LOGIC           reduce using rule 74 (termino1 -> posibleID .)
    RELOP           reduce using rule 74 (termino1 -> posibleID .)
    SEMICOLON       reduce using rule 74 (termino1 -> posibleID .)
    COMA            reduce using rule 74 (termino1 -> posibleID .)
    CPAREN          reduce using rule 74 (termino1 -> posibleID .)
    HAZ             reduce using rule 74 (termino1 -> posibleID .)
    CCORCH          reduce using rule 74 (termino1 -> posibleID .)


state 121

    (75) termino1 -> ENTERO . np_contieneID_Constante_Entero
    (99) np_contieneID_Constante_Entero -> .

    OPMATRIZ        reduce using rule 99 (np_contieneID_Constante_Entero -> .)
    PLUS            reduce using rule 99 (np_contieneID_Constante_Entero -> .)
    MINUS           reduce using rule 99 (np_contieneID_Constante_Entero -> .)
    MULTIPLY        reduce using rule 99 (np_contieneID_Constante_Entero -> .)
    DIVIDE          reduce using rule 99 (np_contieneID_Constante_Entero -> .)
    LOGIC           reduce using rule 99 (np_contieneID_Constante_Entero -> .)
    RELOP           reduce using rule 99 (np_contieneID_Constante_Entero -> .)
    SEMICOLON       reduce using rule 99 (np_contieneID_Constante_Entero -> .)
    COMA            reduce using rule 99 (np_contieneID_Constante_Entero -> .)
    CPAREN          reduce using rule 99 (np_contieneID_Constante_Entero -> .)
    HAZ             reduce using rule 99 (np_contieneID_Constante_Entero -> .)
    CCORCH          reduce using rule 99 (np_contieneID_Constante_Entero -> .)

    np_contieneID_Constante_Entero shift and go to state 164

state 122

    (76) termino1 -> FLOTANTE . np_contieneID_Constante_Flotante
    (100) np_contieneID_Constante_Flotante -> .

    OPMATRIZ        reduce using rule 100 (np_contieneID_Constante_Flotante -> .)
    PLUS            reduce using rule 100 (np_contieneID_Constante_Flotante -> .)
    MINUS           reduce using rule 100 (np_contieneID_Constante_Flotante -> .)
    MULTIPLY        reduce using rule 100 (np_contieneID_Constante_Flotante -> .)
    DIVIDE          reduce using rule 100 (np_contieneID_Constante_Flotante -> .)
    LOGIC           reduce using rule 100 (np_contieneID_Constante_Flotante -> .)
    RELOP           reduce using rule 100 (np_contieneID_Constante_Flotante -> .)
    SEMICOLON       reduce using rule 100 (np_contieneID_Constante_Flotante -> .)
    COMA            reduce using rule 100 (np_contieneID_Constante_Flotante -> .)
    CPAREN          reduce using rule 100 (np_contieneID_Constante_Flotante -> .)
    HAZ             reduce using rule 100 (np_contieneID_Constante_Flotante -> .)
    CCORCH          reduce using rule 100 (np_contieneID_Constante_Flotante -> .)

    np_contieneID_Constante_Flotante shift and go to state 165

state 123

    (77) termino1 -> llamadaFuncion .

    OPMATRIZ        reduce using rule 77 (termino1 -> llamadaFuncion .)
    PLUS            reduce using rule 77 (termino1 -> llamadaFuncion .)
    MINUS           reduce using rule 77 (termino1 -> llamadaFuncion .)
    MULTIPLY        reduce using rule 77 (termino1 -> llamadaFuncion .)
    DIVIDE          reduce using rule 77 (termino1 -> llamadaFuncion .)
    LOGIC           reduce using rule 77 (termino1 -> llamadaFuncion .)
    RELOP           reduce using rule 77 (termino1 -> llamadaFuncion .)
    SEMICOLON       reduce using rule 77 (termino1 -> llamadaFuncion .)
    COMA            reduce using rule 77 (termino1 -> llamadaFuncion .)
    CPAREN          reduce using rule 77 (termino1 -> llamadaFuncion .)
    HAZ             reduce using rule 77 (termino1 -> llamadaFuncion .)
    CCORCH          reduce using rule 77 (termino1 -> llamadaFuncion .)


state 124

    (78) termino1 -> OPAREN . np_insertarOperador expresion CPAREN np_insertarOperador
    (71) np_insertarOperador -> .

    ENTERO          reduce using rule 71 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 71 (np_insertarOperador -> .)
    OPAREN          reduce using rule 71 (np_insertarOperador -> .)
    QUOT            reduce using rule 71 (np_insertarOperador -> .)
    ID              reduce using rule 71 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 166

state 125

    (79) termino1 -> QUOT . CARACTER QUOT

    CARACTER        shift and go to state 167


state 126

    (80) posibleID -> ID . np_contieneID np_enviarACuadruplos
    (81) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> ID . OPAREN primerParametro extraParametros CPAREN
    (98) np_contieneID -> .

    OPAREN          shift and go to state 95
    OCORCH          reduce using rule 98 (np_contieneID -> .)
    OPMATRIZ        reduce using rule 98 (np_contieneID -> .)
    PLUS            reduce using rule 98 (np_contieneID -> .)
    MINUS           reduce using rule 98 (np_contieneID -> .)
    MULTIPLY        reduce using rule 98 (np_contieneID -> .)
    DIVIDE          reduce using rule 98 (np_contieneID -> .)
    LOGIC           reduce using rule 98 (np_contieneID -> .)
    RELOP           reduce using rule 98 (np_contieneID -> .)
    SEMICOLON       reduce using rule 98 (np_contieneID -> .)
    COMA            reduce using rule 98 (np_contieneID -> .)
    CPAREN          reduce using rule 98 (np_contieneID -> .)
    HAZ             reduce using rule 98 (np_contieneID -> .)
    CCORCH          reduce using rule 98 (np_contieneID -> .)

    np_contieneID                  shift and go to state 96

state 127

    (95) return -> REGRESA SEMICOLON np_returnVOID .

    CBRACKET        reduce using rule 95 (return -> REGRESA SEMICOLON np_returnVOID .)


state 128

    (89) estatutoRepeticionIncondicional -> DESDE ID np_contieneID . HASTA expresion HAZ OBRACKET estatutos CBRACKET

    HASTA           shift and go to state 168


state 129

    (55) llamadaFuncion -> ID OPAREN primerParametro . extraParametros CPAREN
    (58) extraParametros -> . COMA expresion extraParametros
    (59) extraParametros -> . empty
    (108) empty -> .

    COMA            shift and go to state 170
    CPAREN          reduce using rule 108 (empty -> .)

    extraParametros                shift and go to state 169
    empty                          shift and go to state 171

state 130

    (56) primerParametro -> expresion .
    (64) expresion -> expresion . LOGIC np_insertarOperador expresion
    (65) expresion -> expresion . RELOP np_insertarOperador expresion

    COMA            reduce using rule 56 (primerParametro -> expresion .)
    CPAREN          reduce using rule 56 (primerParametro -> expresion .)
    LOGIC           shift and go to state 157
    RELOP           shift and go to state 158


state 131

    (57) primerParametro -> empty .

    COMA            reduce using rule 57 (primerParametro -> empty .)
    CPAREN          reduce using rule 57 (primerParametro -> empty .)


state 132

    (80) posibleID -> ID np_contieneID np_enviarACuadruplos .
    (81) posibleID -> ID np_contieneID np_enviarACuadruplos . OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> ID np_contieneID np_enviarACuadruplos . OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    ASSIGN          reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    OPMATRIZ        reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    PLUS            reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    MINUS           reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    MULTIPLY        reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    DIVIDE          reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    LOGIC           reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    RELOP           reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    SEMICOLON       reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    COMA            reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    CPAREN          reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    HAZ             reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    CCORCH          reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    OCORCH          shift and go to state 172


state 133

    (90) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo . expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (64) expresion -> . expresion LOGIC np_insertarOperador expresion
    (65) expresion -> . expresion RELOP np_insertarOperador expresion
    (66) expresion -> . termino
    (67) termino -> . termino PLUS np_insertarOperador termino
    (68) termino -> . termino MINUS np_insertarOperador termino
    (69) termino -> . termino MULTIPLY np_insertarOperador termino
    (70) termino -> . termino DIVIDE np_insertarOperador termino
    (72) termino -> . termino1 OPMATRIZ np_insertarOperador
    (73) termino -> . termino1
    (74) termino1 -> . posibleID
    (75) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (76) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (77) termino1 -> . llamadaFuncion
    (78) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (79) termino1 -> . QUOT CARACTER QUOT
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 121
    FLOTANTE        shift and go to state 122
    OPAREN          shift and go to state 124
    QUOT            shift and go to state 125
    ID              shift and go to state 126

    expresion                      shift and go to state 173
    termino                        shift and go to state 118
    termino1                       shift and go to state 119
    posibleID                      shift and go to state 120
    llamadaFuncion                 shift and go to state 123

state 134

    (60) lectura -> LEE OPAREN posibleID . lectura2 CPAREN SEMICOLON
    (61) lectura2 -> . empty
    (62) lectura2 -> . COMA posibleID lectura2
    (108) empty -> .

    COMA            shift and go to state 176
    CPAREN          reduce using rule 108 (empty -> .)

    lectura2                       shift and go to state 174
    empty                          shift and go to state 175

state 135

    (80) posibleID -> ID . np_contieneID np_enviarACuadruplos
    (81) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (98) np_contieneID -> .

    OCORCH          reduce using rule 98 (np_contieneID -> .)
    COMA            reduce using rule 98 (np_contieneID -> .)
    CPAREN          reduce using rule 98 (np_contieneID -> .)

    np_contieneID                  shift and go to state 96

state 136

    (63) asignacion -> posibleID np_agregarFondo ASSIGN . np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (71) np_insertarOperador -> .

    ENTERO          reduce using rule 71 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 71 (np_insertarOperador -> .)
    OPAREN          reduce using rule 71 (np_insertarOperador -> .)
    QUOT            reduce using rule 71 (np_insertarOperador -> .)
    ID              reduce using rule 71 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 177

state 137

    (42) escritura -> ESCRIBE OPAREN escritura2 . CPAREN SEMICOLON

    CPAREN          shift and go to state 178


state 138

    (43) escritura2 -> empty .

    CPAREN          reduce using rule 43 (escritura2 -> empty .)


state 139

    (44) escritura2 -> posibleID . escritura3
    (46) escritura3 -> . empty
    (47) escritura3 -> . COMA expresion escritura3
    (48) escritura3 -> . COMA STRING escritura3
    (108) empty -> .

    COMA            shift and go to state 181
    CPAREN          reduce using rule 108 (empty -> .)

    escritura3                     shift and go to state 179
    empty                          shift and go to state 180

state 140

    (45) escritura2 -> STRING . escritura3
    (46) escritura3 -> . empty
    (47) escritura3 -> . COMA expresion escritura3
    (48) escritura3 -> . COMA STRING escritura3
    (108) empty -> .

    COMA            shift and go to state 181
    CPAREN          reduce using rule 108 (empty -> .)

    escritura3                     shift and go to state 182
    empty                          shift and go to state 180

state 141

    (49) decision -> SI OPAREN np_agregarFondo . expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> SI OPAREN np_agregarFondo . expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (64) expresion -> . expresion LOGIC np_insertarOperador expresion
    (65) expresion -> . expresion RELOP np_insertarOperador expresion
    (66) expresion -> . termino
    (67) termino -> . termino PLUS np_insertarOperador termino
    (68) termino -> . termino MINUS np_insertarOperador termino
    (69) termino -> . termino MULTIPLY np_insertarOperador termino
    (70) termino -> . termino DIVIDE np_insertarOperador termino
    (72) termino -> . termino1 OPMATRIZ np_insertarOperador
    (73) termino -> . termino1
    (74) termino1 -> . posibleID
    (75) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (76) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (77) termino1 -> . llamadaFuncion
    (78) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (79) termino1 -> . QUOT CARACTER QUOT
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 121
    FLOTANTE        shift and go to state 122
    OPAREN          shift and go to state 124
    QUOT            shift and go to state 125
    ID              shift and go to state 126

    expresion                      shift and go to state 183
    termino                        shift and go to state 118
    termino1                       shift and go to state 119
    posibleID                      shift and go to state 120
    llamadaFuncion                 shift and go to state 123

state 142

    (15) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables . OBRACKET estatutos CBRACKET np_endFunc

    OBRACKET        shift and go to state 184


state 143

    (29) declaracionFuncionVariables -> empty .

    OBRACKET        reduce using rule 29 (declaracionFuncionVariables -> empty .)


state 144

    (30) declaracionFuncionVariables -> declaracion .

    OBRACKET        reduce using rule 30 (declaracionFuncionVariables -> declaracion .)


state 145

    (22) declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (83) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (84) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (85) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (86) np_updateCurrentDimension0 -> .
    (87) np_updateCurrentDimension1 -> .
    (88) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 86 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 86 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 86 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 87 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 88 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 185
    np_updateCurrentDimension0     shift and go to state 47
    np_updateCurrentDimension1     shift and go to state 48
    np_updateCurrentDimension2     shift and go to state 49

state 146

    (23) declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (83) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (84) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (85) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (86) np_updateCurrentDimension0 -> .
    (87) np_updateCurrentDimension1 -> .
    (88) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 86 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 86 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 86 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 87 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 88 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 186
    np_updateCurrentDimension0     shift and go to state 47
    np_updateCurrentDimension1     shift and go to state 48
    np_updateCurrentDimension2     shift and go to state 49

state 147

    (24) declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (83) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (84) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (85) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (86) np_updateCurrentDimension0 -> .
    (87) np_updateCurrentDimension1 -> .
    (88) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 86 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 86 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 86 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 87 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 88 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 187
    np_updateCurrentDimension0     shift and go to state 47
    np_updateCurrentDimension1     shift and go to state 48
    np_updateCurrentDimension2     shift and go to state 49

state 148

    (16) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables . OBRACKET estatutos CBRACKET np_endFunc

    OBRACKET        shift and go to state 188


state 149

    (17) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables . OBRACKET estatutos CBRACKET np_endFunc

    OBRACKET        shift and go to state 189


state 150

    (18) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables . OBRACKET estatutos CBRACKET np_endFunc

    OBRACKET        shift and go to state 190


state 151

    (12) declaracion3 -> np_quitarFondo COMA declaracion2 .

    VAR             reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    FUNCION         reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    REGRESA         reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    DESDE           reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    MIENTRAS        reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    LEE             reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    ESCRIBE         reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    SI              reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    ID              reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    CBRACKET        reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    OBRACKET        reduce using rule 12 (declaracion3 -> np_quitarFondo COMA declaracion2 .)


state 152

    (13) declaracion3 -> ASSIGN np_insertarOperador expresion . np_quitarFondo SEMICOLON
    (14) declaracion3 -> ASSIGN np_insertarOperador expresion . np_quitarFondo COMA declaracion2
    (64) expresion -> expresion . LOGIC np_insertarOperador expresion
    (65) expresion -> expresion . RELOP np_insertarOperador expresion
    (106) np_quitarFondo -> .

    LOGIC           shift and go to state 157
    RELOP           shift and go to state 158
    SEMICOLON       reduce using rule 106 (np_quitarFondo -> .)
    COMA            reduce using rule 106 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 191

state 153

    (83) posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos . np_actualizarDimensiones
    (104) np_actualizarDimensiones -> .

    ASSIGN          reduce using rule 104 (np_actualizarDimensiones -> .)
    SEMICOLON       reduce using rule 104 (np_actualizarDimensiones -> .)
    COMA            reduce using rule 104 (np_actualizarDimensiones -> .)
    CPAREN          reduce using rule 104 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 192

state 154

    (84) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos . np_actualizarDimensiones OCORCH expresion CCORCH
    (104) np_actualizarDimensiones -> .

    OCORCH          reduce using rule 104 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 193

state 155

    (85) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos . np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (104) np_actualizarDimensiones -> .

    OCORCH          reduce using rule 104 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 194

state 156

    (94) return -> REGRESA np_agregarFondo expresion np_quitarFondo . SEMICOLON np_return

    SEMICOLON       shift and go to state 195


state 157

    (64) expresion -> expresion LOGIC . np_insertarOperador expresion
    (71) np_insertarOperador -> .

    ENTERO          reduce using rule 71 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 71 (np_insertarOperador -> .)
    OPAREN          reduce using rule 71 (np_insertarOperador -> .)
    QUOT            reduce using rule 71 (np_insertarOperador -> .)
    ID              reduce using rule 71 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 196

state 158

    (65) expresion -> expresion RELOP . np_insertarOperador expresion
    (71) np_insertarOperador -> .

    ENTERO          reduce using rule 71 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 71 (np_insertarOperador -> .)
    OPAREN          reduce using rule 71 (np_insertarOperador -> .)
    QUOT            reduce using rule 71 (np_insertarOperador -> .)
    ID              reduce using rule 71 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 197

state 159

    (67) termino -> termino PLUS . np_insertarOperador termino
    (71) np_insertarOperador -> .

    ENTERO          reduce using rule 71 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 71 (np_insertarOperador -> .)
    OPAREN          reduce using rule 71 (np_insertarOperador -> .)
    QUOT            reduce using rule 71 (np_insertarOperador -> .)
    ID              reduce using rule 71 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 198

state 160

    (68) termino -> termino MINUS . np_insertarOperador termino
    (71) np_insertarOperador -> .

    ENTERO          reduce using rule 71 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 71 (np_insertarOperador -> .)
    OPAREN          reduce using rule 71 (np_insertarOperador -> .)
    QUOT            reduce using rule 71 (np_insertarOperador -> .)
    ID              reduce using rule 71 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 199

state 161

    (69) termino -> termino MULTIPLY . np_insertarOperador termino
    (71) np_insertarOperador -> .

    ENTERO          reduce using rule 71 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 71 (np_insertarOperador -> .)
    OPAREN          reduce using rule 71 (np_insertarOperador -> .)
    QUOT            reduce using rule 71 (np_insertarOperador -> .)
    ID              reduce using rule 71 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 200

state 162

    (70) termino -> termino DIVIDE . np_insertarOperador termino
    (71) np_insertarOperador -> .

    ENTERO          reduce using rule 71 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 71 (np_insertarOperador -> .)
    OPAREN          reduce using rule 71 (np_insertarOperador -> .)
    QUOT            reduce using rule 71 (np_insertarOperador -> .)
    ID              reduce using rule 71 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 201

state 163

    (72) termino -> termino1 OPMATRIZ . np_insertarOperador
    (71) np_insertarOperador -> .

    PLUS            reduce using rule 71 (np_insertarOperador -> .)
    MINUS           reduce using rule 71 (np_insertarOperador -> .)
    MULTIPLY        reduce using rule 71 (np_insertarOperador -> .)
    DIVIDE          reduce using rule 71 (np_insertarOperador -> .)
    LOGIC           reduce using rule 71 (np_insertarOperador -> .)
    RELOP           reduce using rule 71 (np_insertarOperador -> .)
    SEMICOLON       reduce using rule 71 (np_insertarOperador -> .)
    COMA            reduce using rule 71 (np_insertarOperador -> .)
    CPAREN          reduce using rule 71 (np_insertarOperador -> .)
    HAZ             reduce using rule 71 (np_insertarOperador -> .)
    CCORCH          reduce using rule 71 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 202

state 164

    (75) termino1 -> ENTERO np_contieneID_Constante_Entero .

    OPMATRIZ        reduce using rule 75 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    PLUS            reduce using rule 75 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    MINUS           reduce using rule 75 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    MULTIPLY        reduce using rule 75 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    DIVIDE          reduce using rule 75 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    LOGIC           reduce using rule 75 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    RELOP           reduce using rule 75 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    SEMICOLON       reduce using rule 75 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    COMA            reduce using rule 75 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    CPAREN          reduce using rule 75 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    HAZ             reduce using rule 75 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    CCORCH          reduce using rule 75 (termino1 -> ENTERO np_contieneID_Constante_Entero .)


state 165

    (76) termino1 -> FLOTANTE np_contieneID_Constante_Flotante .

    OPMATRIZ        reduce using rule 76 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    PLUS            reduce using rule 76 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    MINUS           reduce using rule 76 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    MULTIPLY        reduce using rule 76 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    DIVIDE          reduce using rule 76 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    LOGIC           reduce using rule 76 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    RELOP           reduce using rule 76 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    SEMICOLON       reduce using rule 76 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    COMA            reduce using rule 76 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    CPAREN          reduce using rule 76 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    HAZ             reduce using rule 76 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    CCORCH          reduce using rule 76 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)


state 166

    (78) termino1 -> OPAREN np_insertarOperador . expresion CPAREN np_insertarOperador
    (64) expresion -> . expresion LOGIC np_insertarOperador expresion
    (65) expresion -> . expresion RELOP np_insertarOperador expresion
    (66) expresion -> . termino
    (67) termino -> . termino PLUS np_insertarOperador termino
    (68) termino -> . termino MINUS np_insertarOperador termino
    (69) termino -> . termino MULTIPLY np_insertarOperador termino
    (70) termino -> . termino DIVIDE np_insertarOperador termino
    (72) termino -> . termino1 OPMATRIZ np_insertarOperador
    (73) termino -> . termino1
    (74) termino1 -> . posibleID
    (75) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (76) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (77) termino1 -> . llamadaFuncion
    (78) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (79) termino1 -> . QUOT CARACTER QUOT
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 121
    FLOTANTE        shift and go to state 122
    OPAREN          shift and go to state 124
    QUOT            shift and go to state 125
    ID              shift and go to state 126

    expresion                      shift and go to state 203
    termino                        shift and go to state 118
    termino1                       shift and go to state 119
    posibleID                      shift and go to state 120
    llamadaFuncion                 shift and go to state 123

state 167

    (79) termino1 -> QUOT CARACTER . QUOT

    QUOT            shift and go to state 204


state 168

    (89) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA . expresion HAZ OBRACKET estatutos CBRACKET
    (64) expresion -> . expresion LOGIC np_insertarOperador expresion
    (65) expresion -> . expresion RELOP np_insertarOperador expresion
    (66) expresion -> . termino
    (67) termino -> . termino PLUS np_insertarOperador termino
    (68) termino -> . termino MINUS np_insertarOperador termino
    (69) termino -> . termino MULTIPLY np_insertarOperador termino
    (70) termino -> . termino DIVIDE np_insertarOperador termino
    (72) termino -> . termino1 OPMATRIZ np_insertarOperador
    (73) termino -> . termino1
    (74) termino1 -> . posibleID
    (75) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (76) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (77) termino1 -> . llamadaFuncion
    (78) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (79) termino1 -> . QUOT CARACTER QUOT
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 121
    FLOTANTE        shift and go to state 122
    OPAREN          shift and go to state 124
    QUOT            shift and go to state 125
    ID              shift and go to state 126

    expresion                      shift and go to state 205
    termino                        shift and go to state 118
    termino1                       shift and go to state 119
    posibleID                      shift and go to state 120
    llamadaFuncion                 shift and go to state 123

state 169

    (55) llamadaFuncion -> ID OPAREN primerParametro extraParametros . CPAREN

    CPAREN          shift and go to state 206


state 170

    (58) extraParametros -> COMA . expresion extraParametros
    (64) expresion -> . expresion LOGIC np_insertarOperador expresion
    (65) expresion -> . expresion RELOP np_insertarOperador expresion
    (66) expresion -> . termino
    (67) termino -> . termino PLUS np_insertarOperador termino
    (68) termino -> . termino MINUS np_insertarOperador termino
    (69) termino -> . termino MULTIPLY np_insertarOperador termino
    (70) termino -> . termino DIVIDE np_insertarOperador termino
    (72) termino -> . termino1 OPMATRIZ np_insertarOperador
    (73) termino -> . termino1
    (74) termino1 -> . posibleID
    (75) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (76) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (77) termino1 -> . llamadaFuncion
    (78) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (79) termino1 -> . QUOT CARACTER QUOT
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 121
    FLOTANTE        shift and go to state 122
    OPAREN          shift and go to state 124
    QUOT            shift and go to state 125
    ID              shift and go to state 126

    expresion                      shift and go to state 207
    termino                        shift and go to state 118
    termino1                       shift and go to state 119
    posibleID                      shift and go to state 120
    llamadaFuncion                 shift and go to state 123

state 171

    (59) extraParametros -> empty .

    CPAREN          reduce using rule 59 (extraParametros -> empty .)


state 172

    (81) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH . np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH . np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (105) np_agregarFondo -> .

    ENTERO          reduce using rule 105 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 105 (np_agregarFondo -> .)
    OPAREN          reduce using rule 105 (np_agregarFondo -> .)
    QUOT            reduce using rule 105 (np_agregarFondo -> .)
    ID              reduce using rule 105 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 208

state 173

    (90) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo expresion . np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (64) expresion -> expresion . LOGIC np_insertarOperador expresion
    (65) expresion -> expresion . RELOP np_insertarOperador expresion
    (106) np_quitarFondo -> .

    LOGIC           shift and go to state 157
    RELOP           shift and go to state 158
    CPAREN          reduce using rule 106 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 209

state 174

    (60) lectura -> LEE OPAREN posibleID lectura2 . CPAREN SEMICOLON

    CPAREN          shift and go to state 210


state 175

    (61) lectura2 -> empty .

    CPAREN          reduce using rule 61 (lectura2 -> empty .)


state 176

    (62) lectura2 -> COMA . posibleID lectura2
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    ID              shift and go to state 135

    posibleID                      shift and go to state 211

state 177

    (63) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador . np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (105) np_agregarFondo -> .

    ENTERO          reduce using rule 105 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 105 (np_agregarFondo -> .)
    OPAREN          reduce using rule 105 (np_agregarFondo -> .)
    QUOT            reduce using rule 105 (np_agregarFondo -> .)
    ID              reduce using rule 105 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 212

state 178

    (42) escritura -> ESCRIBE OPAREN escritura2 CPAREN . SEMICOLON

    SEMICOLON       shift and go to state 213


state 179

    (44) escritura2 -> posibleID escritura3 .

    CPAREN          reduce using rule 44 (escritura2 -> posibleID escritura3 .)


state 180

    (46) escritura3 -> empty .

    CPAREN          reduce using rule 46 (escritura3 -> empty .)


state 181

    (47) escritura3 -> COMA . expresion escritura3
    (48) escritura3 -> COMA . STRING escritura3
    (64) expresion -> . expresion LOGIC np_insertarOperador expresion
    (65) expresion -> . expresion RELOP np_insertarOperador expresion
    (66) expresion -> . termino
    (67) termino -> . termino PLUS np_insertarOperador termino
    (68) termino -> . termino MINUS np_insertarOperador termino
    (69) termino -> . termino MULTIPLY np_insertarOperador termino
    (70) termino -> . termino DIVIDE np_insertarOperador termino
    (72) termino -> . termino1 OPMATRIZ np_insertarOperador
    (73) termino -> . termino1
    (74) termino1 -> . posibleID
    (75) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (76) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (77) termino1 -> . llamadaFuncion
    (78) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (79) termino1 -> . QUOT CARACTER QUOT
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    STRING          shift and go to state 215
    ENTERO          shift and go to state 121
    FLOTANTE        shift and go to state 122
    OPAREN          shift and go to state 124
    QUOT            shift and go to state 125
    ID              shift and go to state 126

    expresion                      shift and go to state 214
    termino                        shift and go to state 118
    termino1                       shift and go to state 119
    posibleID                      shift and go to state 120
    llamadaFuncion                 shift and go to state 123

state 182

    (45) escritura2 -> STRING escritura3 .

    CPAREN          reduce using rule 45 (escritura2 -> STRING escritura3 .)


state 183

    (49) decision -> SI OPAREN np_agregarFondo expresion . np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> SI OPAREN np_agregarFondo expresion . np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (64) expresion -> expresion . LOGIC np_insertarOperador expresion
    (65) expresion -> expresion . RELOP np_insertarOperador expresion
    (106) np_quitarFondo -> .

    LOGIC           shift and go to state 157
    RELOP           shift and go to state 158
    CPAREN          reduce using rule 106 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 216

state 184

    (15) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET . estatutos CBRACKET np_endFunc
    (32) estatutos -> . return
    (33) estatutos -> . empty
    (34) estatutos -> . declaracion estatutos
    (35) estatutos -> . estatutoRepeticionIncondicional estatutos
    (36) estatutos -> . estatutoRepeticionCondicional estatutos
    (37) estatutos -> . lectura estatutos
    (38) estatutos -> . asignacion estatutos
    (39) estatutos -> . escritura estatutos
    (40) estatutos -> . decision estatutos
    (41) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (94) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (95) return -> . REGRESA SEMICOLON np_returnVOID
    (108) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (89) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (90) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (60) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (63) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (42) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 108 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 217
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 185

    (22) declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (106) np_quitarFondo -> .

    COMA            reduce using rule 106 (np_quitarFondo -> .)
    CPAREN          reduce using rule 106 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 218

state 186

    (23) declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (106) np_quitarFondo -> .

    COMA            reduce using rule 106 (np_quitarFondo -> .)
    CPAREN          reduce using rule 106 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 219

state 187

    (24) declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (106) np_quitarFondo -> .

    COMA            reduce using rule 106 (np_quitarFondo -> .)
    CPAREN          reduce using rule 106 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 220

state 188

    (16) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET . estatutos CBRACKET np_endFunc
    (32) estatutos -> . return
    (33) estatutos -> . empty
    (34) estatutos -> . declaracion estatutos
    (35) estatutos -> . estatutoRepeticionIncondicional estatutos
    (36) estatutos -> . estatutoRepeticionCondicional estatutos
    (37) estatutos -> . lectura estatutos
    (38) estatutos -> . asignacion estatutos
    (39) estatutos -> . escritura estatutos
    (40) estatutos -> . decision estatutos
    (41) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (94) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (95) return -> . REGRESA SEMICOLON np_returnVOID
    (108) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (89) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (90) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (60) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (63) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (42) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 108 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 221
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 189

    (17) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET . estatutos CBRACKET np_endFunc
    (32) estatutos -> . return
    (33) estatutos -> . empty
    (34) estatutos -> . declaracion estatutos
    (35) estatutos -> . estatutoRepeticionIncondicional estatutos
    (36) estatutos -> . estatutoRepeticionCondicional estatutos
    (37) estatutos -> . lectura estatutos
    (38) estatutos -> . asignacion estatutos
    (39) estatutos -> . escritura estatutos
    (40) estatutos -> . decision estatutos
    (41) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (94) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (95) return -> . REGRESA SEMICOLON np_returnVOID
    (108) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (89) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (90) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (60) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (63) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (42) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 108 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 222
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 190

    (18) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET . estatutos CBRACKET np_endFunc
    (32) estatutos -> . return
    (33) estatutos -> . empty
    (34) estatutos -> . declaracion estatutos
    (35) estatutos -> . estatutoRepeticionIncondicional estatutos
    (36) estatutos -> . estatutoRepeticionCondicional estatutos
    (37) estatutos -> . lectura estatutos
    (38) estatutos -> . asignacion estatutos
    (39) estatutos -> . escritura estatutos
    (40) estatutos -> . decision estatutos
    (41) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (94) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (95) return -> . REGRESA SEMICOLON np_returnVOID
    (108) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (89) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (90) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (60) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (63) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (42) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 108 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 223
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 191

    (13) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo . SEMICOLON
    (14) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo . COMA declaracion2

    SEMICOLON       shift and go to state 224
    COMA            shift and go to state 225


state 192

    (83) posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones .

    ASSIGN          reduce using rule 83 (posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones .)
    SEMICOLON       reduce using rule 83 (posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones .)
    COMA            reduce using rule 83 (posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones .)
    CPAREN          reduce using rule 83 (posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones .)


state 193

    (84) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones . OCORCH expresion CCORCH

    OCORCH          shift and go to state 226


state 194

    (85) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones . OCORCH expresion COMA expresion CCORCH

    OCORCH          shift and go to state 227


state 195

    (94) return -> REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON . np_return
    (96) np_return -> .

    CBRACKET        reduce using rule 96 (np_return -> .)

    np_return                      shift and go to state 228

state 196

    (64) expresion -> expresion LOGIC np_insertarOperador . expresion
    (64) expresion -> . expresion LOGIC np_insertarOperador expresion
    (65) expresion -> . expresion RELOP np_insertarOperador expresion
    (66) expresion -> . termino
    (67) termino -> . termino PLUS np_insertarOperador termino
    (68) termino -> . termino MINUS np_insertarOperador termino
    (69) termino -> . termino MULTIPLY np_insertarOperador termino
    (70) termino -> . termino DIVIDE np_insertarOperador termino
    (72) termino -> . termino1 OPMATRIZ np_insertarOperador
    (73) termino -> . termino1
    (74) termino1 -> . posibleID
    (75) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (76) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (77) termino1 -> . llamadaFuncion
    (78) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (79) termino1 -> . QUOT CARACTER QUOT
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 121
    FLOTANTE        shift and go to state 122
    OPAREN          shift and go to state 124
    QUOT            shift and go to state 125
    ID              shift and go to state 126

    expresion                      shift and go to state 229
    termino                        shift and go to state 118
    termino1                       shift and go to state 119
    posibleID                      shift and go to state 120
    llamadaFuncion                 shift and go to state 123

state 197

    (65) expresion -> expresion RELOP np_insertarOperador . expresion
    (64) expresion -> . expresion LOGIC np_insertarOperador expresion
    (65) expresion -> . expresion RELOP np_insertarOperador expresion
    (66) expresion -> . termino
    (67) termino -> . termino PLUS np_insertarOperador termino
    (68) termino -> . termino MINUS np_insertarOperador termino
    (69) termino -> . termino MULTIPLY np_insertarOperador termino
    (70) termino -> . termino DIVIDE np_insertarOperador termino
    (72) termino -> . termino1 OPMATRIZ np_insertarOperador
    (73) termino -> . termino1
    (74) termino1 -> . posibleID
    (75) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (76) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (77) termino1 -> . llamadaFuncion
    (78) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (79) termino1 -> . QUOT CARACTER QUOT
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 121
    FLOTANTE        shift and go to state 122
    OPAREN          shift and go to state 124
    QUOT            shift and go to state 125
    ID              shift and go to state 126

    expresion                      shift and go to state 230
    termino                        shift and go to state 118
    termino1                       shift and go to state 119
    posibleID                      shift and go to state 120
    llamadaFuncion                 shift and go to state 123

state 198

    (67) termino -> termino PLUS np_insertarOperador . termino
    (67) termino -> . termino PLUS np_insertarOperador termino
    (68) termino -> . termino MINUS np_insertarOperador termino
    (69) termino -> . termino MULTIPLY np_insertarOperador termino
    (70) termino -> . termino DIVIDE np_insertarOperador termino
    (72) termino -> . termino1 OPMATRIZ np_insertarOperador
    (73) termino -> . termino1
    (74) termino1 -> . posibleID
    (75) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (76) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (77) termino1 -> . llamadaFuncion
    (78) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (79) termino1 -> . QUOT CARACTER QUOT
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 121
    FLOTANTE        shift and go to state 122
    OPAREN          shift and go to state 124
    QUOT            shift and go to state 125
    ID              shift and go to state 126

    termino                        shift and go to state 231
    termino1                       shift and go to state 119
    posibleID                      shift and go to state 120
    llamadaFuncion                 shift and go to state 123

state 199

    (68) termino -> termino MINUS np_insertarOperador . termino
    (67) termino -> . termino PLUS np_insertarOperador termino
    (68) termino -> . termino MINUS np_insertarOperador termino
    (69) termino -> . termino MULTIPLY np_insertarOperador termino
    (70) termino -> . termino DIVIDE np_insertarOperador termino
    (72) termino -> . termino1 OPMATRIZ np_insertarOperador
    (73) termino -> . termino1
    (74) termino1 -> . posibleID
    (75) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (76) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (77) termino1 -> . llamadaFuncion
    (78) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (79) termino1 -> . QUOT CARACTER QUOT
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 121
    FLOTANTE        shift and go to state 122
    OPAREN          shift and go to state 124
    QUOT            shift and go to state 125
    ID              shift and go to state 126

    termino                        shift and go to state 232
    termino1                       shift and go to state 119
    posibleID                      shift and go to state 120
    llamadaFuncion                 shift and go to state 123

state 200

    (69) termino -> termino MULTIPLY np_insertarOperador . termino
    (67) termino -> . termino PLUS np_insertarOperador termino
    (68) termino -> . termino MINUS np_insertarOperador termino
    (69) termino -> . termino MULTIPLY np_insertarOperador termino
    (70) termino -> . termino DIVIDE np_insertarOperador termino
    (72) termino -> . termino1 OPMATRIZ np_insertarOperador
    (73) termino -> . termino1
    (74) termino1 -> . posibleID
    (75) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (76) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (77) termino1 -> . llamadaFuncion
    (78) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (79) termino1 -> . QUOT CARACTER QUOT
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 121
    FLOTANTE        shift and go to state 122
    OPAREN          shift and go to state 124
    QUOT            shift and go to state 125
    ID              shift and go to state 126

    termino                        shift and go to state 233
    termino1                       shift and go to state 119
    posibleID                      shift and go to state 120
    llamadaFuncion                 shift and go to state 123

state 201

    (70) termino -> termino DIVIDE np_insertarOperador . termino
    (67) termino -> . termino PLUS np_insertarOperador termino
    (68) termino -> . termino MINUS np_insertarOperador termino
    (69) termino -> . termino MULTIPLY np_insertarOperador termino
    (70) termino -> . termino DIVIDE np_insertarOperador termino
    (72) termino -> . termino1 OPMATRIZ np_insertarOperador
    (73) termino -> . termino1
    (74) termino1 -> . posibleID
    (75) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (76) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (77) termino1 -> . llamadaFuncion
    (78) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (79) termino1 -> . QUOT CARACTER QUOT
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 121
    FLOTANTE        shift and go to state 122
    OPAREN          shift and go to state 124
    QUOT            shift and go to state 125
    ID              shift and go to state 126

    termino                        shift and go to state 234
    termino1                       shift and go to state 119
    posibleID                      shift and go to state 120
    llamadaFuncion                 shift and go to state 123

state 202

    (72) termino -> termino1 OPMATRIZ np_insertarOperador .

    PLUS            reduce using rule 72 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    MINUS           reduce using rule 72 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    MULTIPLY        reduce using rule 72 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    DIVIDE          reduce using rule 72 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    LOGIC           reduce using rule 72 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    RELOP           reduce using rule 72 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    SEMICOLON       reduce using rule 72 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    COMA            reduce using rule 72 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    CPAREN          reduce using rule 72 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    HAZ             reduce using rule 72 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    CCORCH          reduce using rule 72 (termino -> termino1 OPMATRIZ np_insertarOperador .)


state 203

    (78) termino1 -> OPAREN np_insertarOperador expresion . CPAREN np_insertarOperador
    (64) expresion -> expresion . LOGIC np_insertarOperador expresion
    (65) expresion -> expresion . RELOP np_insertarOperador expresion

    CPAREN          shift and go to state 235
    LOGIC           shift and go to state 157
    RELOP           shift and go to state 158


state 204

    (79) termino1 -> QUOT CARACTER QUOT .

    OPMATRIZ        reduce using rule 79 (termino1 -> QUOT CARACTER QUOT .)
    PLUS            reduce using rule 79 (termino1 -> QUOT CARACTER QUOT .)
    MINUS           reduce using rule 79 (termino1 -> QUOT CARACTER QUOT .)
    MULTIPLY        reduce using rule 79 (termino1 -> QUOT CARACTER QUOT .)
    DIVIDE          reduce using rule 79 (termino1 -> QUOT CARACTER QUOT .)
    LOGIC           reduce using rule 79 (termino1 -> QUOT CARACTER QUOT .)
    RELOP           reduce using rule 79 (termino1 -> QUOT CARACTER QUOT .)
    SEMICOLON       reduce using rule 79 (termino1 -> QUOT CARACTER QUOT .)
    COMA            reduce using rule 79 (termino1 -> QUOT CARACTER QUOT .)
    CPAREN          reduce using rule 79 (termino1 -> QUOT CARACTER QUOT .)
    HAZ             reduce using rule 79 (termino1 -> QUOT CARACTER QUOT .)
    CCORCH          reduce using rule 79 (termino1 -> QUOT CARACTER QUOT .)


state 205

    (89) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion . HAZ OBRACKET estatutos CBRACKET
    (64) expresion -> expresion . LOGIC np_insertarOperador expresion
    (65) expresion -> expresion . RELOP np_insertarOperador expresion

    HAZ             shift and go to state 236
    LOGIC           shift and go to state 157
    RELOP           shift and go to state 158


state 206

    (55) llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .

    SEMICOLON       reduce using rule 55 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    OPMATRIZ        reduce using rule 55 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    PLUS            reduce using rule 55 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    MINUS           reduce using rule 55 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    MULTIPLY        reduce using rule 55 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    DIVIDE          reduce using rule 55 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    LOGIC           reduce using rule 55 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    RELOP           reduce using rule 55 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    COMA            reduce using rule 55 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    CPAREN          reduce using rule 55 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    HAZ             reduce using rule 55 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    CCORCH          reduce using rule 55 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)


state 207

    (58) extraParametros -> COMA expresion . extraParametros
    (64) expresion -> expresion . LOGIC np_insertarOperador expresion
    (65) expresion -> expresion . RELOP np_insertarOperador expresion
    (58) extraParametros -> . COMA expresion extraParametros
    (59) extraParametros -> . empty
    (108) empty -> .

    LOGIC           shift and go to state 157
    RELOP           shift and go to state 158
    COMA            shift and go to state 170
    CPAREN          reduce using rule 108 (empty -> .)

    extraParametros                shift and go to state 237
    empty                          shift and go to state 171

state 208

    (81) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo . expresion np_quitarFondo CCORCH
    (82) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo . expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (64) expresion -> . expresion LOGIC np_insertarOperador expresion
    (65) expresion -> . expresion RELOP np_insertarOperador expresion
    (66) expresion -> . termino
    (67) termino -> . termino PLUS np_insertarOperador termino
    (68) termino -> . termino MINUS np_insertarOperador termino
    (69) termino -> . termino MULTIPLY np_insertarOperador termino
    (70) termino -> . termino DIVIDE np_insertarOperador termino
    (72) termino -> . termino1 OPMATRIZ np_insertarOperador
    (73) termino -> . termino1
    (74) termino1 -> . posibleID
    (75) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (76) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (77) termino1 -> . llamadaFuncion
    (78) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (79) termino1 -> . QUOT CARACTER QUOT
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 121
    FLOTANTE        shift and go to state 122
    OPAREN          shift and go to state 124
    QUOT            shift and go to state 125
    ID              shift and go to state 126

    expresion                      shift and go to state 238
    termino                        shift and go to state 118
    termino1                       shift and go to state 119
    posibleID                      shift and go to state 120
    llamadaFuncion                 shift and go to state 123

state 209

    (90) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo . CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina

    CPAREN          shift and go to state 239


state 210

    (60) lectura -> LEE OPAREN posibleID lectura2 CPAREN . SEMICOLON

    SEMICOLON       shift and go to state 240


state 211

    (62) lectura2 -> COMA posibleID . lectura2
    (61) lectura2 -> . empty
    (62) lectura2 -> . COMA posibleID lectura2
    (108) empty -> .

    COMA            shift and go to state 176
    CPAREN          reduce using rule 108 (empty -> .)

    lectura2                       shift and go to state 241
    empty                          shift and go to state 175

state 212

    (63) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo . expresion np_quitarFondo np_quitarFondo SEMICOLON
    (64) expresion -> . expresion LOGIC np_insertarOperador expresion
    (65) expresion -> . expresion RELOP np_insertarOperador expresion
    (66) expresion -> . termino
    (67) termino -> . termino PLUS np_insertarOperador termino
    (68) termino -> . termino MINUS np_insertarOperador termino
    (69) termino -> . termino MULTIPLY np_insertarOperador termino
    (70) termino -> . termino DIVIDE np_insertarOperador termino
    (72) termino -> . termino1 OPMATRIZ np_insertarOperador
    (73) termino -> . termino1
    (74) termino1 -> . posibleID
    (75) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (76) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (77) termino1 -> . llamadaFuncion
    (78) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (79) termino1 -> . QUOT CARACTER QUOT
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 121
    FLOTANTE        shift and go to state 122
    OPAREN          shift and go to state 124
    QUOT            shift and go to state 125
    ID              shift and go to state 126

    posibleID                      shift and go to state 120
    expresion                      shift and go to state 242
    termino                        shift and go to state 118
    termino1                       shift and go to state 119
    llamadaFuncion                 shift and go to state 123

state 213

    (42) escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .

    REGRESA         reduce using rule 42 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    VAR             reduce using rule 42 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    DESDE           reduce using rule 42 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 42 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    LEE             reduce using rule 42 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 42 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    SI              reduce using rule 42 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    ID              reduce using rule 42 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    CBRACKET        reduce using rule 42 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)


state 214

    (47) escritura3 -> COMA expresion . escritura3
    (64) expresion -> expresion . LOGIC np_insertarOperador expresion
    (65) expresion -> expresion . RELOP np_insertarOperador expresion
    (46) escritura3 -> . empty
    (47) escritura3 -> . COMA expresion escritura3
    (48) escritura3 -> . COMA STRING escritura3
    (108) empty -> .

    LOGIC           shift and go to state 157
    RELOP           shift and go to state 158
    COMA            shift and go to state 181
    CPAREN          reduce using rule 108 (empty -> .)

    escritura3                     shift and go to state 243
    empty                          shift and go to state 180

state 215

    (48) escritura3 -> COMA STRING . escritura3
    (46) escritura3 -> . empty
    (47) escritura3 -> . COMA expresion escritura3
    (48) escritura3 -> . COMA STRING escritura3
    (108) empty -> .

    COMA            shift and go to state 181
    CPAREN          reduce using rule 108 (empty -> .)

    escritura3                     shift and go to state 244
    empty                          shift and go to state 180

state 216

    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo . np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo . np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (51) np_iniciaIf -> .

    CPAREN          reduce using rule 51 (np_iniciaIf -> .)

    np_iniciaIf                    shift and go to state 245

state 217

    (15) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos . CBRACKET np_endFunc

    CBRACKET        shift and go to state 246


state 218

    (22) declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (25) declaracionFuncionParametros2 -> . empty
    (26) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (27) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (28) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (108) empty -> .

    COMA            shift and go to state 249
    CPAREN          reduce using rule 108 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 247
    empty                          shift and go to state 248

state 219

    (23) declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (25) declaracionFuncionParametros2 -> . empty
    (26) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (27) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (28) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (108) empty -> .

    COMA            shift and go to state 249
    CPAREN          reduce using rule 108 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 250
    empty                          shift and go to state 248

state 220

    (24) declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (25) declaracionFuncionParametros2 -> . empty
    (26) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (27) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (28) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (108) empty -> .

    COMA            shift and go to state 249
    CPAREN          reduce using rule 108 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 251
    empty                          shift and go to state 248

state 221

    (16) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos . CBRACKET np_endFunc

    CBRACKET        shift and go to state 252


state 222

    (17) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos . CBRACKET np_endFunc

    CBRACKET        shift and go to state 253


state 223

    (18) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos . CBRACKET np_endFunc

    CBRACKET        shift and go to state 254


state 224

    (13) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .

    VAR             reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    FUNCION         reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    REGRESA         reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    DESDE           reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    MIENTRAS        reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    LEE             reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    ESCRIBE         reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    SI              reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    ID              reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    CBRACKET        reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    OBRACKET        reduce using rule 13 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)


state 225

    (14) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA . declaracion2
    (10) declaracion2 -> . np_agregarFondo posibleIDDeclaracion declaracion3
    (105) np_agregarFondo -> .

    ID              reduce using rule 105 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 255
    np_agregarFondo                shift and go to state 38

state 226

    (84) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH . expresion CCORCH
    (64) expresion -> . expresion LOGIC np_insertarOperador expresion
    (65) expresion -> . expresion RELOP np_insertarOperador expresion
    (66) expresion -> . termino
    (67) termino -> . termino PLUS np_insertarOperador termino
    (68) termino -> . termino MINUS np_insertarOperador termino
    (69) termino -> . termino MULTIPLY np_insertarOperador termino
    (70) termino -> . termino DIVIDE np_insertarOperador termino
    (72) termino -> . termino1 OPMATRIZ np_insertarOperador
    (73) termino -> . termino1
    (74) termino1 -> . posibleID
    (75) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (76) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (77) termino1 -> . llamadaFuncion
    (78) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (79) termino1 -> . QUOT CARACTER QUOT
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 121
    FLOTANTE        shift and go to state 122
    OPAREN          shift and go to state 124
    QUOT            shift and go to state 125
    ID              shift and go to state 126

    expresion                      shift and go to state 256
    termino                        shift and go to state 118
    termino1                       shift and go to state 119
    posibleID                      shift and go to state 120
    llamadaFuncion                 shift and go to state 123

state 227

    (85) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH . expresion COMA expresion CCORCH
    (64) expresion -> . expresion LOGIC np_insertarOperador expresion
    (65) expresion -> . expresion RELOP np_insertarOperador expresion
    (66) expresion -> . termino
    (67) termino -> . termino PLUS np_insertarOperador termino
    (68) termino -> . termino MINUS np_insertarOperador termino
    (69) termino -> . termino MULTIPLY np_insertarOperador termino
    (70) termino -> . termino DIVIDE np_insertarOperador termino
    (72) termino -> . termino1 OPMATRIZ np_insertarOperador
    (73) termino -> . termino1
    (74) termino1 -> . posibleID
    (75) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (76) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (77) termino1 -> . llamadaFuncion
    (78) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (79) termino1 -> . QUOT CARACTER QUOT
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 121
    FLOTANTE        shift and go to state 122
    OPAREN          shift and go to state 124
    QUOT            shift and go to state 125
    ID              shift and go to state 126

    expresion                      shift and go to state 257
    termino                        shift and go to state 118
    termino1                       shift and go to state 119
    posibleID                      shift and go to state 120
    llamadaFuncion                 shift and go to state 123

state 228

    (94) return -> REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return .

    CBRACKET        reduce using rule 94 (return -> REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return .)


state 229

    (64) expresion -> expresion LOGIC np_insertarOperador expresion .
    (64) expresion -> expresion . LOGIC np_insertarOperador expresion
    (65) expresion -> expresion . RELOP np_insertarOperador expresion

  ! shift/reduce conflict for LOGIC resolved as shift
  ! shift/reduce conflict for RELOP resolved as shift
    SEMICOLON       reduce using rule 64 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    COMA            reduce using rule 64 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    CPAREN          reduce using rule 64 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    HAZ             reduce using rule 64 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    CCORCH          reduce using rule 64 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    LOGIC           shift and go to state 157
    RELOP           shift and go to state 158

  ! LOGIC           [ reduce using rule 64 (expresion -> expresion LOGIC np_insertarOperador expresion .) ]
  ! RELOP           [ reduce using rule 64 (expresion -> expresion LOGIC np_insertarOperador expresion .) ]


state 230

    (65) expresion -> expresion RELOP np_insertarOperador expresion .
    (64) expresion -> expresion . LOGIC np_insertarOperador expresion
    (65) expresion -> expresion . RELOP np_insertarOperador expresion

  ! shift/reduce conflict for LOGIC resolved as shift
  ! shift/reduce conflict for RELOP resolved as shift
    SEMICOLON       reduce using rule 65 (expresion -> expresion RELOP np_insertarOperador expresion .)
    COMA            reduce using rule 65 (expresion -> expresion RELOP np_insertarOperador expresion .)
    CPAREN          reduce using rule 65 (expresion -> expresion RELOP np_insertarOperador expresion .)
    HAZ             reduce using rule 65 (expresion -> expresion RELOP np_insertarOperador expresion .)
    CCORCH          reduce using rule 65 (expresion -> expresion RELOP np_insertarOperador expresion .)
    LOGIC           shift and go to state 157
    RELOP           shift and go to state 158

  ! LOGIC           [ reduce using rule 65 (expresion -> expresion RELOP np_insertarOperador expresion .) ]
  ! RELOP           [ reduce using rule 65 (expresion -> expresion RELOP np_insertarOperador expresion .) ]


state 231

    (67) termino -> termino PLUS np_insertarOperador termino .
    (67) termino -> termino . PLUS np_insertarOperador termino
    (68) termino -> termino . MINUS np_insertarOperador termino
    (69) termino -> termino . MULTIPLY np_insertarOperador termino
    (70) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 67 (termino -> termino PLUS np_insertarOperador termino .)
    MINUS           reduce using rule 67 (termino -> termino PLUS np_insertarOperador termino .)
    LOGIC           reduce using rule 67 (termino -> termino PLUS np_insertarOperador termino .)
    RELOP           reduce using rule 67 (termino -> termino PLUS np_insertarOperador termino .)
    SEMICOLON       reduce using rule 67 (termino -> termino PLUS np_insertarOperador termino .)
    COMA            reduce using rule 67 (termino -> termino PLUS np_insertarOperador termino .)
    CPAREN          reduce using rule 67 (termino -> termino PLUS np_insertarOperador termino .)
    HAZ             reduce using rule 67 (termino -> termino PLUS np_insertarOperador termino .)
    CCORCH          reduce using rule 67 (termino -> termino PLUS np_insertarOperador termino .)
    MULTIPLY        shift and go to state 161
    DIVIDE          shift and go to state 162

  ! MULTIPLY        [ reduce using rule 67 (termino -> termino PLUS np_insertarOperador termino .) ]
  ! DIVIDE          [ reduce using rule 67 (termino -> termino PLUS np_insertarOperador termino .) ]
  ! PLUS            [ shift and go to state 159 ]
  ! MINUS           [ shift and go to state 160 ]


state 232

    (68) termino -> termino MINUS np_insertarOperador termino .
    (67) termino -> termino . PLUS np_insertarOperador termino
    (68) termino -> termino . MINUS np_insertarOperador termino
    (69) termino -> termino . MULTIPLY np_insertarOperador termino
    (70) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 68 (termino -> termino MINUS np_insertarOperador termino .)
    MINUS           reduce using rule 68 (termino -> termino MINUS np_insertarOperador termino .)
    LOGIC           reduce using rule 68 (termino -> termino MINUS np_insertarOperador termino .)
    RELOP           reduce using rule 68 (termino -> termino MINUS np_insertarOperador termino .)
    SEMICOLON       reduce using rule 68 (termino -> termino MINUS np_insertarOperador termino .)
    COMA            reduce using rule 68 (termino -> termino MINUS np_insertarOperador termino .)
    CPAREN          reduce using rule 68 (termino -> termino MINUS np_insertarOperador termino .)
    HAZ             reduce using rule 68 (termino -> termino MINUS np_insertarOperador termino .)
    CCORCH          reduce using rule 68 (termino -> termino MINUS np_insertarOperador termino .)
    MULTIPLY        shift and go to state 161
    DIVIDE          shift and go to state 162

  ! MULTIPLY        [ reduce using rule 68 (termino -> termino MINUS np_insertarOperador termino .) ]
  ! DIVIDE          [ reduce using rule 68 (termino -> termino MINUS np_insertarOperador termino .) ]
  ! PLUS            [ shift and go to state 159 ]
  ! MINUS           [ shift and go to state 160 ]


state 233

    (69) termino -> termino MULTIPLY np_insertarOperador termino .
    (67) termino -> termino . PLUS np_insertarOperador termino
    (68) termino -> termino . MINUS np_insertarOperador termino
    (69) termino -> termino . MULTIPLY np_insertarOperador termino
    (70) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 69 (termino -> termino MULTIPLY np_insertarOperador termino .)
    MINUS           reduce using rule 69 (termino -> termino MULTIPLY np_insertarOperador termino .)
    MULTIPLY        reduce using rule 69 (termino -> termino MULTIPLY np_insertarOperador termino .)
    DIVIDE          reduce using rule 69 (termino -> termino MULTIPLY np_insertarOperador termino .)
    LOGIC           reduce using rule 69 (termino -> termino MULTIPLY np_insertarOperador termino .)
    RELOP           reduce using rule 69 (termino -> termino MULTIPLY np_insertarOperador termino .)
    SEMICOLON       reduce using rule 69 (termino -> termino MULTIPLY np_insertarOperador termino .)
    COMA            reduce using rule 69 (termino -> termino MULTIPLY np_insertarOperador termino .)
    CPAREN          reduce using rule 69 (termino -> termino MULTIPLY np_insertarOperador termino .)
    HAZ             reduce using rule 69 (termino -> termino MULTIPLY np_insertarOperador termino .)
    CCORCH          reduce using rule 69 (termino -> termino MULTIPLY np_insertarOperador termino .)

  ! PLUS            [ shift and go to state 159 ]
  ! MINUS           [ shift and go to state 160 ]
  ! MULTIPLY        [ shift and go to state 161 ]
  ! DIVIDE          [ shift and go to state 162 ]


state 234

    (70) termino -> termino DIVIDE np_insertarOperador termino .
    (67) termino -> termino . PLUS np_insertarOperador termino
    (68) termino -> termino . MINUS np_insertarOperador termino
    (69) termino -> termino . MULTIPLY np_insertarOperador termino
    (70) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 70 (termino -> termino DIVIDE np_insertarOperador termino .)
    MINUS           reduce using rule 70 (termino -> termino DIVIDE np_insertarOperador termino .)
    MULTIPLY        reduce using rule 70 (termino -> termino DIVIDE np_insertarOperador termino .)
    DIVIDE          reduce using rule 70 (termino -> termino DIVIDE np_insertarOperador termino .)
    LOGIC           reduce using rule 70 (termino -> termino DIVIDE np_insertarOperador termino .)
    RELOP           reduce using rule 70 (termino -> termino DIVIDE np_insertarOperador termino .)
    SEMICOLON       reduce using rule 70 (termino -> termino DIVIDE np_insertarOperador termino .)
    COMA            reduce using rule 70 (termino -> termino DIVIDE np_insertarOperador termino .)
    CPAREN          reduce using rule 70 (termino -> termino DIVIDE np_insertarOperador termino .)
    HAZ             reduce using rule 70 (termino -> termino DIVIDE np_insertarOperador termino .)
    CCORCH          reduce using rule 70 (termino -> termino DIVIDE np_insertarOperador termino .)

  ! PLUS            [ shift and go to state 159 ]
  ! MINUS           [ shift and go to state 160 ]
  ! MULTIPLY        [ shift and go to state 161 ]
  ! DIVIDE          [ shift and go to state 162 ]


state 235

    (78) termino1 -> OPAREN np_insertarOperador expresion CPAREN . np_insertarOperador
    (71) np_insertarOperador -> .

    OPMATRIZ        reduce using rule 71 (np_insertarOperador -> .)
    PLUS            reduce using rule 71 (np_insertarOperador -> .)
    MINUS           reduce using rule 71 (np_insertarOperador -> .)
    MULTIPLY        reduce using rule 71 (np_insertarOperador -> .)
    DIVIDE          reduce using rule 71 (np_insertarOperador -> .)
    LOGIC           reduce using rule 71 (np_insertarOperador -> .)
    RELOP           reduce using rule 71 (np_insertarOperador -> .)
    SEMICOLON       reduce using rule 71 (np_insertarOperador -> .)
    COMA            reduce using rule 71 (np_insertarOperador -> .)
    CPAREN          reduce using rule 71 (np_insertarOperador -> .)
    HAZ             reduce using rule 71 (np_insertarOperador -> .)
    CCORCH          reduce using rule 71 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 258

state 236

    (89) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ . OBRACKET estatutos CBRACKET

    OBRACKET        shift and go to state 259


state 237

    (58) extraParametros -> COMA expresion extraParametros .

    CPAREN          reduce using rule 58 (extraParametros -> COMA expresion extraParametros .)


state 238

    (81) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion . np_quitarFondo CCORCH
    (82) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion . np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (64) expresion -> expresion . LOGIC np_insertarOperador expresion
    (65) expresion -> expresion . RELOP np_insertarOperador expresion
    (106) np_quitarFondo -> .

    LOGIC           shift and go to state 157
    RELOP           shift and go to state 158
    CCORCH          reduce using rule 106 (np_quitarFondo -> .)
    COMA            reduce using rule 106 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 260

state 239

    (90) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN . HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina

    HAZ             shift and go to state 261


state 240

    (60) lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .

    REGRESA         reduce using rule 60 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    VAR             reduce using rule 60 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    DESDE           reduce using rule 60 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 60 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    LEE             reduce using rule 60 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 60 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    SI              reduce using rule 60 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    ID              reduce using rule 60 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    CBRACKET        reduce using rule 60 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)


state 241

    (62) lectura2 -> COMA posibleID lectura2 .

    CPAREN          reduce using rule 62 (lectura2 -> COMA posibleID lectura2 .)


state 242

    (63) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion . np_quitarFondo np_quitarFondo SEMICOLON
    (64) expresion -> expresion . LOGIC np_insertarOperador expresion
    (65) expresion -> expresion . RELOP np_insertarOperador expresion
    (106) np_quitarFondo -> .

    LOGIC           shift and go to state 157
    RELOP           shift and go to state 158
    SEMICOLON       reduce using rule 106 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 262

state 243

    (47) escritura3 -> COMA expresion escritura3 .

    CPAREN          reduce using rule 47 (escritura3 -> COMA expresion escritura3 .)


state 244

    (48) escritura3 -> COMA STRING escritura3 .

    CPAREN          reduce using rule 48 (escritura3 -> COMA STRING escritura3 .)


state 245

    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf . CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf . CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf

    CPAREN          shift and go to state 263


state 246

    (15) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET . np_endFunc
    (19) np_endFunc -> .

    PRINCIPAL       reduce using rule 19 (np_endFunc -> .)

    np_endFunc                     shift and go to state 264

state 247

    (22) declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 22 (declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 248

    (25) declaracionFuncionParametros2 -> empty .

    CPAREN          reduce using rule 25 (declaracionFuncionParametros2 -> empty .)


state 249

    (26) declaracionFuncionParametros2 -> COMA . INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (27) declaracionFuncionParametros2 -> COMA . FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (28) declaracionFuncionParametros2 -> COMA . CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2

    INT             shift and go to state 265
    FLOAT           shift and go to state 266
    CHAR            shift and go to state 267


state 250

    (23) declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 23 (declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 251

    (24) declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 24 (declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 252

    (16) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET . np_endFunc
    (19) np_endFunc -> .

    PRINCIPAL       reduce using rule 19 (np_endFunc -> .)

    np_endFunc                     shift and go to state 268

state 253

    (17) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET . np_endFunc
    (19) np_endFunc -> .

    PRINCIPAL       reduce using rule 19 (np_endFunc -> .)

    np_endFunc                     shift and go to state 269

state 254

    (18) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET . np_endFunc
    (19) np_endFunc -> .

    PRINCIPAL       reduce using rule 19 (np_endFunc -> .)

    np_endFunc                     shift and go to state 270

state 255

    (14) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .

    VAR             reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    FUNCION         reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    REGRESA         reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    DESDE           reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    MIENTRAS        reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    LEE             reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    ESCRIBE         reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    SI              reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    ID              reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    CBRACKET        reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    OBRACKET        reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)


state 256

    (84) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion . CCORCH
    (64) expresion -> expresion . LOGIC np_insertarOperador expresion
    (65) expresion -> expresion . RELOP np_insertarOperador expresion

    CCORCH          shift and go to state 271
    LOGIC           shift and go to state 157
    RELOP           shift and go to state 158


state 257

    (85) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion . COMA expresion CCORCH
    (64) expresion -> expresion . LOGIC np_insertarOperador expresion
    (65) expresion -> expresion . RELOP np_insertarOperador expresion

    COMA            shift and go to state 272
    LOGIC           shift and go to state 157
    RELOP           shift and go to state 158


state 258

    (78) termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .

    OPMATRIZ        reduce using rule 78 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    PLUS            reduce using rule 78 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    MINUS           reduce using rule 78 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    MULTIPLY        reduce using rule 78 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    DIVIDE          reduce using rule 78 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    LOGIC           reduce using rule 78 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    RELOP           reduce using rule 78 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    SEMICOLON       reduce using rule 78 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    COMA            reduce using rule 78 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    CPAREN          reduce using rule 78 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    HAZ             reduce using rule 78 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    CCORCH          reduce using rule 78 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)


state 259

    (89) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET . estatutos CBRACKET
    (32) estatutos -> . return
    (33) estatutos -> . empty
    (34) estatutos -> . declaracion estatutos
    (35) estatutos -> . estatutoRepeticionIncondicional estatutos
    (36) estatutos -> . estatutoRepeticionCondicional estatutos
    (37) estatutos -> . lectura estatutos
    (38) estatutos -> . asignacion estatutos
    (39) estatutos -> . escritura estatutos
    (40) estatutos -> . decision estatutos
    (41) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (94) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (95) return -> . REGRESA SEMICOLON np_returnVOID
    (108) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (89) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (90) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (60) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (63) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (42) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 108 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 273
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 260

    (81) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo . CCORCH
    (82) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo . COMA np_agregarFondo expresion np_quitarFondo CCORCH

    CCORCH          shift and go to state 274
    COMA            shift and go to state 275


state 261

    (90) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ . OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina

    OBRACKET        shift and go to state 276


state 262

    (63) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo . np_quitarFondo SEMICOLON
    (106) np_quitarFondo -> .

    SEMICOLON       reduce using rule 106 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 277

state 263

    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN . ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN . ENTONCES OBRACKET estatutos CBRACKET np_terminaIf

    ENTONCES        shift and go to state 278


state 264

    (15) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .

    PRINCIPAL       reduce using rule 15 (declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .)


state 265

    (26) declaracionFuncionParametros2 -> COMA INT . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (9) np_defineTipo -> .

    ID              reduce using rule 9 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 279

state 266

    (27) declaracionFuncionParametros2 -> COMA FLOAT . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (9) np_defineTipo -> .

    ID              reduce using rule 9 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 280

state 267

    (28) declaracionFuncionParametros2 -> COMA CHAR . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (9) np_defineTipo -> .

    ID              reduce using rule 9 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 281

state 268

    (16) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .

    PRINCIPAL       reduce using rule 16 (declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .)


state 269

    (17) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .

    PRINCIPAL       reduce using rule 17 (declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .)


state 270

    (18) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .

    PRINCIPAL       reduce using rule 18 (declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .)


state 271

    (84) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH .

    ASSIGN          reduce using rule 84 (posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH .)
    SEMICOLON       reduce using rule 84 (posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH .)
    COMA            reduce using rule 84 (posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH .)
    CPAREN          reduce using rule 84 (posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH .)


state 272

    (85) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA . expresion CCORCH
    (64) expresion -> . expresion LOGIC np_insertarOperador expresion
    (65) expresion -> . expresion RELOP np_insertarOperador expresion
    (66) expresion -> . termino
    (67) termino -> . termino PLUS np_insertarOperador termino
    (68) termino -> . termino MINUS np_insertarOperador termino
    (69) termino -> . termino MULTIPLY np_insertarOperador termino
    (70) termino -> . termino DIVIDE np_insertarOperador termino
    (72) termino -> . termino1 OPMATRIZ np_insertarOperador
    (73) termino -> . termino1
    (74) termino1 -> . posibleID
    (75) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (76) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (77) termino1 -> . llamadaFuncion
    (78) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (79) termino1 -> . QUOT CARACTER QUOT
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 121
    FLOTANTE        shift and go to state 122
    OPAREN          shift and go to state 124
    QUOT            shift and go to state 125
    ID              shift and go to state 126

    expresion                      shift and go to state 282
    termino                        shift and go to state 118
    termino1                       shift and go to state 119
    posibleID                      shift and go to state 120
    llamadaFuncion                 shift and go to state 123

state 273

    (89) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos . CBRACKET

    CBRACKET        shift and go to state 283


state 274

    (81) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .

    ASSIGN          reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    OPMATRIZ        reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    PLUS            reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    MINUS           reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    MULTIPLY        reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    DIVIDE          reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    LOGIC           reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    RELOP           reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    SEMICOLON       reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    COMA            reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    CPAREN          reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    HAZ             reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    CCORCH          reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)


state 275

    (82) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA . np_agregarFondo expresion np_quitarFondo CCORCH
    (105) np_agregarFondo -> .

    ENTERO          reduce using rule 105 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 105 (np_agregarFondo -> .)
    OPAREN          reduce using rule 105 (np_agregarFondo -> .)
    QUOT            reduce using rule 105 (np_agregarFondo -> .)
    ID              reduce using rule 105 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 284

state 276

    (90) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET . npWhileInicia estatutos CBRACKET npWhileTermina
    (92) npWhileInicia -> .

    REGRESA         reduce using rule 92 (npWhileInicia -> .)
    VAR             reduce using rule 92 (npWhileInicia -> .)
    DESDE           reduce using rule 92 (npWhileInicia -> .)
    MIENTRAS        reduce using rule 92 (npWhileInicia -> .)
    LEE             reduce using rule 92 (npWhileInicia -> .)
    ESCRIBE         reduce using rule 92 (npWhileInicia -> .)
    SI              reduce using rule 92 (npWhileInicia -> .)
    ID              reduce using rule 92 (npWhileInicia -> .)
    CBRACKET        reduce using rule 92 (npWhileInicia -> .)

    npWhileInicia                  shift and go to state 285

state 277

    (63) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo . SEMICOLON

    SEMICOLON       shift and go to state 286


state 278

    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES . OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES . OBRACKET estatutos CBRACKET np_terminaIf

    OBRACKET        shift and go to state 287


state 279

    (26) declaracionFuncionParametros2 -> COMA INT np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (105) np_agregarFondo -> .

    ID              reduce using rule 105 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 288

state 280

    (27) declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (105) np_agregarFondo -> .

    ID              reduce using rule 105 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 289

state 281

    (28) declaracionFuncionParametros2 -> COMA CHAR np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (105) np_agregarFondo -> .

    ID              reduce using rule 105 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 290

state 282

    (85) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion . CCORCH
    (64) expresion -> expresion . LOGIC np_insertarOperador expresion
    (65) expresion -> expresion . RELOP np_insertarOperador expresion

    CCORCH          shift and go to state 291
    LOGIC           shift and go to state 157
    RELOP           shift and go to state 158


state 283

    (89) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .

    REGRESA         reduce using rule 89 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    VAR             reduce using rule 89 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    DESDE           reduce using rule 89 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    MIENTRAS        reduce using rule 89 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    LEE             reduce using rule 89 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    ESCRIBE         reduce using rule 89 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    SI              reduce using rule 89 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    ID              reduce using rule 89 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    CBRACKET        reduce using rule 89 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)


state 284

    (82) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo . expresion np_quitarFondo CCORCH
    (64) expresion -> . expresion LOGIC np_insertarOperador expresion
    (65) expresion -> . expresion RELOP np_insertarOperador expresion
    (66) expresion -> . termino
    (67) termino -> . termino PLUS np_insertarOperador termino
    (68) termino -> . termino MINUS np_insertarOperador termino
    (69) termino -> . termino MULTIPLY np_insertarOperador termino
    (70) termino -> . termino DIVIDE np_insertarOperador termino
    (72) termino -> . termino1 OPMATRIZ np_insertarOperador
    (73) termino -> . termino1
    (74) termino1 -> . posibleID
    (75) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (76) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (77) termino1 -> . llamadaFuncion
    (78) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (79) termino1 -> . QUOT CARACTER QUOT
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 121
    FLOTANTE        shift and go to state 122
    OPAREN          shift and go to state 124
    QUOT            shift and go to state 125
    ID              shift and go to state 126

    expresion                      shift and go to state 292
    termino                        shift and go to state 118
    termino1                       shift and go to state 119
    posibleID                      shift and go to state 120
    llamadaFuncion                 shift and go to state 123

state 285

    (90) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia . estatutos CBRACKET npWhileTermina
    (32) estatutos -> . return
    (33) estatutos -> . empty
    (34) estatutos -> . declaracion estatutos
    (35) estatutos -> . estatutoRepeticionIncondicional estatutos
    (36) estatutos -> . estatutoRepeticionCondicional estatutos
    (37) estatutos -> . lectura estatutos
    (38) estatutos -> . asignacion estatutos
    (39) estatutos -> . escritura estatutos
    (40) estatutos -> . decision estatutos
    (41) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (94) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (95) return -> . REGRESA SEMICOLON np_returnVOID
    (108) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (89) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (90) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (60) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (63) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (42) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 108 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 293
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 286

    (63) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .

    REGRESA         reduce using rule 63 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    VAR             reduce using rule 63 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    DESDE           reduce using rule 63 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    MIENTRAS        reduce using rule 63 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    LEE             reduce using rule 63 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    ESCRIBE         reduce using rule 63 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    SI              reduce using rule 63 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    ID              reduce using rule 63 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    CBRACKET        reduce using rule 63 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)


state 287

    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET . estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET . estatutos CBRACKET np_terminaIf
    (32) estatutos -> . return
    (33) estatutos -> . empty
    (34) estatutos -> . declaracion estatutos
    (35) estatutos -> . estatutoRepeticionIncondicional estatutos
    (36) estatutos -> . estatutoRepeticionCondicional estatutos
    (37) estatutos -> . lectura estatutos
    (38) estatutos -> . asignacion estatutos
    (39) estatutos -> . escritura estatutos
    (40) estatutos -> . decision estatutos
    (41) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (94) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (95) return -> . REGRESA SEMICOLON np_returnVOID
    (108) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (89) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (90) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (60) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (63) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (42) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 108 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 294
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 288

    (26) declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (83) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (84) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (85) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (86) np_updateCurrentDimension0 -> .
    (87) np_updateCurrentDimension1 -> .
    (88) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 86 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 86 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 86 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 87 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 88 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 295
    np_updateCurrentDimension0     shift and go to state 47
    np_updateCurrentDimension1     shift and go to state 48
    np_updateCurrentDimension2     shift and go to state 49

state 289

    (27) declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (83) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (84) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (85) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (86) np_updateCurrentDimension0 -> .
    (87) np_updateCurrentDimension1 -> .
    (88) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 86 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 86 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 86 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 87 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 88 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 296
    np_updateCurrentDimension0     shift and go to state 47
    np_updateCurrentDimension1     shift and go to state 48
    np_updateCurrentDimension2     shift and go to state 49

state 290

    (28) declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (83) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (84) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (85) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (86) np_updateCurrentDimension0 -> .
    (87) np_updateCurrentDimension1 -> .
    (88) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 86 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 86 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 86 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 87 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 88 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 297
    np_updateCurrentDimension0     shift and go to state 47
    np_updateCurrentDimension1     shift and go to state 48
    np_updateCurrentDimension2     shift and go to state 49

state 291

    (85) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH .

    ASSIGN          reduce using rule 85 (posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH .)
    SEMICOLON       reduce using rule 85 (posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH .)
    COMA            reduce using rule 85 (posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH .)
    CPAREN          reduce using rule 85 (posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH .)


state 292

    (82) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion . np_quitarFondo CCORCH
    (64) expresion -> expresion . LOGIC np_insertarOperador expresion
    (65) expresion -> expresion . RELOP np_insertarOperador expresion
    (106) np_quitarFondo -> .

    LOGIC           shift and go to state 157
    RELOP           shift and go to state 158
    CCORCH          reduce using rule 106 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 298

state 293

    (90) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos . CBRACKET npWhileTermina

    CBRACKET        shift and go to state 299


state 294

    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos . CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos . CBRACKET np_terminaIf

    CBRACKET        shift and go to state 300


state 295

    (26) declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (106) np_quitarFondo -> .

    COMA            reduce using rule 106 (np_quitarFondo -> .)
    CPAREN          reduce using rule 106 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 301

state 296

    (27) declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (106) np_quitarFondo -> .

    COMA            reduce using rule 106 (np_quitarFondo -> .)
    CPAREN          reduce using rule 106 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 302

state 297

    (28) declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (106) np_quitarFondo -> .

    COMA            reduce using rule 106 (np_quitarFondo -> .)
    CPAREN          reduce using rule 106 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 303

state 298

    (82) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo . CCORCH

    CCORCH          shift and go to state 304


state 299

    (90) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET . npWhileTermina
    (93) npWhileTermina -> .

    REGRESA         reduce using rule 93 (npWhileTermina -> .)
    VAR             reduce using rule 93 (npWhileTermina -> .)
    DESDE           reduce using rule 93 (npWhileTermina -> .)
    MIENTRAS        reduce using rule 93 (npWhileTermina -> .)
    LEE             reduce using rule 93 (npWhileTermina -> .)
    ESCRIBE         reduce using rule 93 (npWhileTermina -> .)
    SI              reduce using rule 93 (npWhileTermina -> .)
    ID              reduce using rule 93 (npWhileTermina -> .)
    CBRACKET        reduce using rule 93 (npWhileTermina -> .)

    npWhileTermina                 shift and go to state 305

state 300

    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET . SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET . np_terminaIf
    (52) np_terminaIf -> .

    SINO            shift and go to state 306
    REGRESA         reduce using rule 52 (np_terminaIf -> .)
    VAR             reduce using rule 52 (np_terminaIf -> .)
    DESDE           reduce using rule 52 (np_terminaIf -> .)
    MIENTRAS        reduce using rule 52 (np_terminaIf -> .)
    LEE             reduce using rule 52 (np_terminaIf -> .)
    ESCRIBE         reduce using rule 52 (np_terminaIf -> .)
    SI              reduce using rule 52 (np_terminaIf -> .)
    ID              reduce using rule 52 (np_terminaIf -> .)
    CBRACKET        reduce using rule 52 (np_terminaIf -> .)

    np_terminaIf                   shift and go to state 307

state 301

    (26) declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (25) declaracionFuncionParametros2 -> . empty
    (26) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (27) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (28) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (108) empty -> .

    COMA            shift and go to state 249
    CPAREN          reduce using rule 108 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 308
    empty                          shift and go to state 248

state 302

    (27) declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (25) declaracionFuncionParametros2 -> . empty
    (26) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (27) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (28) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (108) empty -> .

    COMA            shift and go to state 249
    CPAREN          reduce using rule 108 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 309
    empty                          shift and go to state 248

state 303

    (28) declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (25) declaracionFuncionParametros2 -> . empty
    (26) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (27) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (28) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (108) empty -> .

    COMA            shift and go to state 249
    CPAREN          reduce using rule 108 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 310
    empty                          shift and go to state 248

state 304

    (82) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .

    ASSIGN          reduce using rule 82 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    OPMATRIZ        reduce using rule 82 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    PLUS            reduce using rule 82 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    MINUS           reduce using rule 82 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    MULTIPLY        reduce using rule 82 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    DIVIDE          reduce using rule 82 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    LOGIC           reduce using rule 82 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    RELOP           reduce using rule 82 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    SEMICOLON       reduce using rule 82 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    COMA            reduce using rule 82 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    CPAREN          reduce using rule 82 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    HAZ             reduce using rule 82 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    CCORCH          reduce using rule 82 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)


state 305

    (90) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .

    REGRESA         reduce using rule 90 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    VAR             reduce using rule 90 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    DESDE           reduce using rule 90 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    MIENTRAS        reduce using rule 90 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    LEE             reduce using rule 90 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    ESCRIBE         reduce using rule 90 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    SI              reduce using rule 90 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    ID              reduce using rule 90 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    CBRACKET        reduce using rule 90 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)


state 306

    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO . OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET

    OBRACKET        shift and go to state 311


state 307

    (50) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .

    REGRESA         reduce using rule 50 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    VAR             reduce using rule 50 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    DESDE           reduce using rule 50 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    MIENTRAS        reduce using rule 50 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    LEE             reduce using rule 50 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    ESCRIBE         reduce using rule 50 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    SI              reduce using rule 50 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    ID              reduce using rule 50 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    CBRACKET        reduce using rule 50 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)


state 308

    (26) declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 26 (declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 309

    (27) declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 27 (declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 310

    (28) declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 28 (declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 311

    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET . np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) np_iniciaElse -> .

    REGRESA         reduce using rule 53 (np_iniciaElse -> .)
    VAR             reduce using rule 53 (np_iniciaElse -> .)
    DESDE           reduce using rule 53 (np_iniciaElse -> .)
    MIENTRAS        reduce using rule 53 (np_iniciaElse -> .)
    LEE             reduce using rule 53 (np_iniciaElse -> .)
    ESCRIBE         reduce using rule 53 (np_iniciaElse -> .)
    SI              reduce using rule 53 (np_iniciaElse -> .)
    ID              reduce using rule 53 (np_iniciaElse -> .)
    CBRACKET        reduce using rule 53 (np_iniciaElse -> .)

    np_iniciaElse                  shift and go to state 312

state 312

    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse . np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (105) np_agregarFondo -> .

    REGRESA         reduce using rule 105 (np_agregarFondo -> .)
    VAR             reduce using rule 105 (np_agregarFondo -> .)
    DESDE           reduce using rule 105 (np_agregarFondo -> .)
    MIENTRAS        reduce using rule 105 (np_agregarFondo -> .)
    LEE             reduce using rule 105 (np_agregarFondo -> .)
    ESCRIBE         reduce using rule 105 (np_agregarFondo -> .)
    SI              reduce using rule 105 (np_agregarFondo -> .)
    ID              reduce using rule 105 (np_agregarFondo -> .)
    CBRACKET        reduce using rule 105 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 313

state 313

    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo . estatutos np_quitarFondo np_terminaElse CBRACKET
    (32) estatutos -> . return
    (33) estatutos -> . empty
    (34) estatutos -> . declaracion estatutos
    (35) estatutos -> . estatutoRepeticionIncondicional estatutos
    (36) estatutos -> . estatutoRepeticionCondicional estatutos
    (37) estatutos -> . lectura estatutos
    (38) estatutos -> . asignacion estatutos
    (39) estatutos -> . escritura estatutos
    (40) estatutos -> . decision estatutos
    (41) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (94) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (95) return -> . REGRESA SEMICOLON np_returnVOID
    (108) empty -> .
    (6) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (7) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (89) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (90) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (60) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (63) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (42) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (49) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (50) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (55) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (82) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 108 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 314
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 314

    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos . np_quitarFondo np_terminaElse CBRACKET
    (106) np_quitarFondo -> .

    CBRACKET        reduce using rule 106 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 315

state 315

    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo . np_terminaElse CBRACKET
    (54) np_terminaElse -> .

    CBRACKET        reduce using rule 54 (np_terminaElse -> .)

    np_terminaElse                 shift and go to state 316

state 316

    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse . CBRACKET

    CBRACKET        shift and go to state 317


state 317

    (49) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .

    REGRESA         reduce using rule 49 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    VAR             reduce using rule 49 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    DESDE           reduce using rule 49 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    MIENTRAS        reduce using rule 49 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    LEE             reduce using rule 49 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    ESCRIBE         reduce using rule 49 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    SI              reduce using rule 49 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    ID              reduce using rule 49 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    CBRACKET        reduce using rule 49 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LOGIC in state 229 resolved as shift
WARNING: shift/reduce conflict for RELOP in state 229 resolved as shift
WARNING: shift/reduce conflict for LOGIC in state 230 resolved as shift
WARNING: shift/reduce conflict for RELOP in state 230 resolved as shift
WARNING: reduce/reduce conflict in state 38 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 38
WARNING: reduce/reduce conflict in state 38 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 38
WARNING: reduce/reduce conflict in state 145 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 145
WARNING: reduce/reduce conflict in state 145 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 145
WARNING: reduce/reduce conflict in state 146 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 146
WARNING: reduce/reduce conflict in state 146 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 146
WARNING: reduce/reduce conflict in state 147 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 147
WARNING: reduce/reduce conflict in state 147 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 147
WARNING: reduce/reduce conflict in state 288 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 288
WARNING: reduce/reduce conflict in state 288 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 288
WARNING: reduce/reduce conflict in state 289 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 289
WARNING: reduce/reduce conflict in state 289 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 289
WARNING: reduce/reduce conflict in state 290 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 290
WARNING: reduce/reduce conflict in state 290 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 290
WARNING: Rule (np_updateCurrentDimension1 -> <empty>) is never reduced
WARNING: Rule (np_updateCurrentDimension2 -> <empty>) is never reduced
