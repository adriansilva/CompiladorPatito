Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMENTARIO
    IGNORE
    NEWLINE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMICOLON programa2
Rule 2     programa2 -> declaracion programa2
Rule 3     programa2 -> programa3
Rule 4     programa3 -> declaracionFuncion principal
Rule 5     principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos np_printTablas
Rule 6     np_printTablas -> <empty>
Rule 7     declaracion -> VAR INT np_defineTipo COLON declaracion2
Rule 8     declaracion -> VAR FLOAT np_defineTipo COLON declaracion2
Rule 9     declaracion -> VAR CHAR np_defineTipo COLON declaracion2
Rule 10    np_defineTipo -> <empty>
Rule 11    declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3
Rule 12    declaracion3 -> np_quitarFondo SEMICOLON
Rule 13    declaracion3 -> np_quitarFondo COMA declaracion2
Rule 14    declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON
Rule 15    declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2
Rule 16    declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
Rule 17    declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
Rule 18    declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
Rule 19    declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
Rule 20    np_esParametro -> <empty>
Rule 21    np_yaNoEsParametro -> <empty>
Rule 22    np_endFunc -> <empty>
Rule 23    np_termino -> <empty>
Rule 24    declaracionFuncionParametros -> empty
Rule 25    declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 26    declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 27    declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 28    declaracionFuncionParametros2 -> empty
Rule 29    declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 30    declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 31    declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
Rule 32    declaracionFuncionVariables -> empty
Rule 33    declaracionFuncionVariables -> declaracion
Rule 34    np_declfunc -> <empty>
Rule 35    estatutos -> return
Rule 36    estatutos -> empty
Rule 37    estatutos -> declaracion estatutos
Rule 38    estatutos -> estatutoRepeticionIncondicional estatutos
Rule 39    estatutos -> estatutoRepeticionCondicional estatutos
Rule 40    estatutos -> lectura estatutos
Rule 41    estatutos -> asignacion estatutos
Rule 42    estatutos -> escritura estatutos
Rule 43    estatutos -> decision estatutos
Rule 44    estatutos -> llamadaFuncion SEMICOLON estatutos
Rule 45    escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
Rule 46    escritura2 -> empty
Rule 47    escritura2 -> posibleID escritura3
Rule 48    escritura2 -> STRING escritura3
Rule 49    escritura3 -> empty
Rule 50    escritura3 -> COMA expresion escritura3
Rule 51    escritura3 -> COMA STRING escritura3
Rule 52    decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
Rule 53    decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
Rule 54    np_iniciaIf -> <empty>
Rule 55    np_terminaIf -> <empty>
Rule 56    np_iniciaElse -> <empty>
Rule 57    np_terminaElse -> <empty>
Rule 58    llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB
Rule 59    np_existeFuncion -> <empty>
Rule 60    np_llamadaFuncion -> <empty>
Rule 61    paramsLlamada1 -> empty
Rule 62    paramsLlamada1 -> paramsLlamada2
Rule 63    paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo np_resolverParam
Rule 64    paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo np_resolverParam COMA paramsLlamada2
Rule 65    np_resolverParam -> <empty>
Rule 66    np_goSUB -> <empty>
Rule 67    lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
Rule 68    lectura2 -> empty
Rule 69    lectura2 -> COMA posibleID lectura2
Rule 70    asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
Rule 71    expresion -> expresion LOGIC np_insertarOperador expresion
Rule 72    expresion -> expresion RELOP np_insertarOperador expresion
Rule 73    expresion -> termino
Rule 74    termino -> termino PLUS np_insertarOperador termino
Rule 75    termino -> termino MINUS np_insertarOperador termino
Rule 76    termino -> termino MULTIPLY np_insertarOperador termino
Rule 77    termino -> termino DIVIDE np_insertarOperador termino
Rule 78    np_insertarOperador -> <empty>
Rule 79    termino -> termino1 OPMATRIZ np_insertarOperador
Rule 80    termino -> termino1
Rule 81    termino1 -> posibleID
Rule 82    termino1 -> ENTERO np_contieneID_Constante_Entero
Rule 83    termino1 -> FLOTANTE np_contieneID_Constante_Flotante
Rule 84    termino1 -> llamadaFuncion
Rule 85    termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
Rule 86    termino1 -> QUOT CARACTER QUOT
Rule 87    posibleID -> ID np_contieneID np_enviarACuadruplos
Rule 88    posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
Rule 89    posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
Rule 90    posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
Rule 91    posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
Rule 92    posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
Rule 93    np_updateCurrentDimension0 -> <empty>
Rule 94    np_updateCurrentDimension1 -> <empty>
Rule 95    np_updateCurrentDimension2 -> <empty>
Rule 96    estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
Rule 97    estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
Rule 98    npWhileStExp -> <empty>
Rule 99    npWhileInicia -> <empty>
Rule 100   npWhileTermina -> <empty>
Rule 101   return -> REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
Rule 102   return -> REGRESA SEMICOLON np_returnVOID
Rule 103   np_return -> <empty>
Rule 104   np_returnVOID -> <empty>
Rule 105   np_contieneID -> <empty>
Rule 106   np_contieneID_Constante_Entero -> <empty>
Rule 107   np_contieneID_Constante_Flotante -> <empty>
Rule 108   np_addVariableParametro -> <empty>
Rule 109   np_addVariable -> <empty>
Rule 110   np_enviarACuadruplos -> <empty>
Rule 111   np_actualizarDimensiones -> <empty>
Rule 112   np_agregarFondo -> <empty>
Rule 113   np_quitarFondo -> <empty>
Rule 114   np_printCuadruplos -> <empty>
Rule 115   empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 14 15 70
CARACTER             : 86
CBRACKET             : 5 16 17 18 19 52 52 53 96 97
CCORCH               : 88 89 91 92
CHAR                 : 9 19 26 31
COLON                : 7 8 9
COMA                 : 13 15 29 30 31 50 51 64 69 89 92
COMENTARIO           : 
CPAREN               : 5 16 17 18 19 45 52 53 58 67 85 97
DESDE                : 96
DIVIDE               : 77
ENTERO               : 82
ENTONCES             : 52 53
ESCRIBE              : 45
FLOAT                : 8 18 27 30
FLOTANTE             : 83
FUNCION              : 16 17 18 19
HASTA                : 96
HAZ                  : 96 97
ID                   : 1 16 17 18 19 58 87 88 89 90 91 92 96
IGNORE               : 
INT                  : 7 17 25 29
LEE                  : 67
LOGIC                : 71
MIENTRAS             : 97
MINUS                : 75
MULTIPLY             : 76
NEWLINE              : 
OBRACKET             : 5 16 17 18 19 52 52 53 96 97
OCORCH               : 88 89 91 92
OPAREN               : 5 16 17 18 19 45 52 53 58 67 85 97
OPMATRIZ             : 79
PLUS                 : 74
PRINCIPAL            : 5
PROGRAMA             : 1
QUOT                 : 86 86
REGRESA              : 101 102
RELOP                : 72
SEMICOLON            : 1 12 14 44 45 67 70 101 102
SI                   : 52 53
SINO                 : 52
STRING               : 48 51
VAR                  : 7 8 9
VOID                 : 16
error                : 

Nonterminals, with rules where they appear

asignacion           : 41
decision             : 43
declaracion          : 2 33 37
declaracion2         : 7 8 9 13 15
declaracion3         : 11
declaracionFuncion   : 4
declaracionFuncionParametros : 16 17 18 19
declaracionFuncionParametros2 : 25 26 27 29 30 31
declaracionFuncionVariables : 16 17 18 19
empty                : 24 28 32 36 46 49 61 68
escritura            : 42
escritura2           : 45
escritura3           : 47 48 50 51
estatutoRepeticionCondicional : 39
estatutoRepeticionIncondicional : 38
estatutos            : 5 16 17 18 19 37 38 39 40 41 42 43 44 52 52 53 96 97
expresion            : 14 15 50 52 53 63 64 70 71 71 72 72 85 88 89 89 91 92 92 96 97 101
lectura              : 40
lectura2             : 67 69
llamadaFuncion       : 44 84
npWhileInicia        : 97
npWhileStExp         : 97
npWhileTermina       : 97
np_actualizarDimensiones : 90 91 92
np_addVariable       : 90 91 92
np_addVariableParametro : 
np_agregarFondo      : 11 25 26 27 29 30 31 52 52 53 63 64 70 70 88 89 89 97 101
np_contieneID        : 87 88 89 96
np_contieneID_Constante_Entero : 82
np_contieneID_Constante_Flotante : 83
np_declfunc          : 16 17 18 19
np_defineTipo        : 7 8 9 25 26 27 29 30 31
np_endFunc           : 16 17 18 19
np_enviarACuadruplos : 87 88 89 90 91 92
np_esParametro       : 16 17 18 19
np_existeFuncion     : 58
np_goSUB             : 58
np_iniciaElse        : 52
np_iniciaIf          : 52 53
np_insertarOperador  : 14 15 70 71 72 74 75 76 77 79 85 85
np_llamadaFuncion    : 58
np_printCuadruplos   : 5
np_printTablas       : 5
np_quitarFondo       : 12 13 14 15 25 26 27 29 30 31 52 52 53 63 64 70 70 88 89 89 97 101
np_resolverParam     : 63 64
np_return            : 101
np_returnVOID        : 102
np_terminaElse       : 52
np_terminaIf         : 53
np_termino           : 
np_updateCurrentDimension0 : 90
np_updateCurrentDimension1 : 91
np_updateCurrentDimension2 : 92
np_yaNoEsParametro   : 16 17 18 19
paramsLlamada1       : 58
paramsLlamada2       : 62 64
posibleID            : 47 67 69 70 81
posibleIDDeclaracion : 11 25 26 27 29 30 31
principal            : 4
programa             : 0
programa2            : 1 2
programa3            : 3
return               : 35
termino              : 73 74 74 75 75 76 76 77 77
termino1             : 79 80

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMICOLON programa2

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMICOLON programa2

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMICOLON programa2

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMICOLON . programa2
    (2) programa2 -> . declaracion programa2
    (3) programa2 -> . programa3
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (4) programa3 -> . declaracionFuncion principal
    (16) declaracionFuncion -> . FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (17) declaracionFuncion -> . FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (18) declaracionFuncion -> . FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (19) declaracionFuncion -> . FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    VAR             shift and go to state 8
    FUNCION         shift and go to state 10

    programa2                      shift and go to state 5
    declaracion                    shift and go to state 6
    programa3                      shift and go to state 7
    declaracionFuncion             shift and go to state 9

state 5

    (1) programa -> PROGRAMA ID SEMICOLON programa2 .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMICOLON programa2 .)


state 6

    (2) programa2 -> declaracion . programa2
    (2) programa2 -> . declaracion programa2
    (3) programa2 -> . programa3
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (4) programa3 -> . declaracionFuncion principal
    (16) declaracionFuncion -> . FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (17) declaracionFuncion -> . FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (18) declaracionFuncion -> . FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (19) declaracionFuncion -> . FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    VAR             shift and go to state 8
    FUNCION         shift and go to state 10

    declaracion                    shift and go to state 6
    programa2                      shift and go to state 11
    programa3                      shift and go to state 7
    declaracionFuncion             shift and go to state 9

state 7

    (3) programa2 -> programa3 .

    $end            reduce using rule 3 (programa2 -> programa3 .)


state 8

    (7) declaracion -> VAR . INT np_defineTipo COLON declaracion2
    (8) declaracion -> VAR . FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> VAR . CHAR np_defineTipo COLON declaracion2

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    CHAR            shift and go to state 14


state 9

    (4) programa3 -> declaracionFuncion . principal
    (5) principal -> . PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos np_printTablas

    PRINCIPAL       shift and go to state 16

    principal                      shift and go to state 15

state 10

    (16) declaracionFuncion -> FUNCION . VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (17) declaracionFuncion -> FUNCION . INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (18) declaracionFuncion -> FUNCION . FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (19) declaracionFuncion -> FUNCION . CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    VOID            shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20


state 11

    (2) programa2 -> declaracion programa2 .

    $end            reduce using rule 2 (programa2 -> declaracion programa2 .)


state 12

    (7) declaracion -> VAR INT . np_defineTipo COLON declaracion2
    (10) np_defineTipo -> .

    COLON           reduce using rule 10 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 21

state 13

    (8) declaracion -> VAR FLOAT . np_defineTipo COLON declaracion2
    (10) np_defineTipo -> .

    COLON           reduce using rule 10 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 22

state 14

    (9) declaracion -> VAR CHAR . np_defineTipo COLON declaracion2
    (10) np_defineTipo -> .

    COLON           reduce using rule 10 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 23

state 15

    (4) programa3 -> declaracionFuncion principal .

    $end            reduce using rule 4 (programa3 -> declaracionFuncion principal .)


state 16

    (5) principal -> PRINCIPAL . OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos np_printTablas

    OPAREN          shift and go to state 24


state 17

    (16) declaracionFuncion -> FUNCION VOID . ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    ID              shift and go to state 25


state 18

    (17) declaracionFuncion -> FUNCION INT . ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    ID              shift and go to state 26


state 19

    (18) declaracionFuncion -> FUNCION FLOAT . ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    ID              shift and go to state 27


state 20

    (19) declaracionFuncion -> FUNCION CHAR . ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    ID              shift and go to state 28


state 21

    (7) declaracion -> VAR INT np_defineTipo . COLON declaracion2

    COLON           shift and go to state 29


state 22

    (8) declaracion -> VAR FLOAT np_defineTipo . COLON declaracion2

    COLON           shift and go to state 30


state 23

    (9) declaracion -> VAR CHAR np_defineTipo . COLON declaracion2

    COLON           shift and go to state 31


state 24

    (5) principal -> PRINCIPAL OPAREN . CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos np_printTablas

    CPAREN          shift and go to state 32


state 25

    (16) declaracionFuncion -> FUNCION VOID ID . np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (34) np_declfunc -> .

    OPAREN          reduce using rule 34 (np_declfunc -> .)

    np_declfunc                    shift and go to state 33

state 26

    (17) declaracionFuncion -> FUNCION INT ID . np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (34) np_declfunc -> .

    OPAREN          reduce using rule 34 (np_declfunc -> .)

    np_declfunc                    shift and go to state 34

state 27

    (18) declaracionFuncion -> FUNCION FLOAT ID . np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (34) np_declfunc -> .

    OPAREN          reduce using rule 34 (np_declfunc -> .)

    np_declfunc                    shift and go to state 35

state 28

    (19) declaracionFuncion -> FUNCION CHAR ID . np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (34) np_declfunc -> .

    OPAREN          reduce using rule 34 (np_declfunc -> .)

    np_declfunc                    shift and go to state 36

state 29

    (7) declaracion -> VAR INT np_defineTipo COLON . declaracion2
    (11) declaracion2 -> . np_agregarFondo posibleIDDeclaracion declaracion3
    (112) np_agregarFondo -> .

    ID              reduce using rule 112 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 37
    np_agregarFondo                shift and go to state 38

state 30

    (8) declaracion -> VAR FLOAT np_defineTipo COLON . declaracion2
    (11) declaracion2 -> . np_agregarFondo posibleIDDeclaracion declaracion3
    (112) np_agregarFondo -> .

    ID              reduce using rule 112 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 39
    np_agregarFondo                shift and go to state 38

state 31

    (9) declaracion -> VAR CHAR np_defineTipo COLON . declaracion2
    (11) declaracion2 -> . np_agregarFondo posibleIDDeclaracion declaracion3
    (112) np_agregarFondo -> .

    ID              reduce using rule 112 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 40
    np_agregarFondo                shift and go to state 38

state 32

    (5) principal -> PRINCIPAL OPAREN CPAREN . OBRACKET estatutos CBRACKET np_printCuadruplos np_printTablas

    OBRACKET        shift and go to state 41


state 33

    (16) declaracionFuncion -> FUNCION VOID ID np_declfunc . OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    OPAREN          shift and go to state 42


state 34

    (17) declaracionFuncion -> FUNCION INT ID np_declfunc . OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    OPAREN          shift and go to state 43


state 35

    (18) declaracionFuncion -> FUNCION FLOAT ID np_declfunc . OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    OPAREN          shift and go to state 44


state 36

    (19) declaracionFuncion -> FUNCION CHAR ID np_declfunc . OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    OPAREN          shift and go to state 45


state 37

    (7) declaracion -> VAR INT np_defineTipo COLON declaracion2 .

    VAR             reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    FUNCION         reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    REGRESA         reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    DESDE           reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    MIENTRAS        reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    LEE             reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    ESCRIBE         reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    SI              reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    ID              reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    CBRACKET        reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    OBRACKET        reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)


state 38

    (11) declaracion2 -> np_agregarFondo . posibleIDDeclaracion declaracion3
    (90) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (91) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (92) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (93) np_updateCurrentDimension0 -> .
    (94) np_updateCurrentDimension1 -> .
    (95) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 93 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 93 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 93 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 94 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 95 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 46
    np_updateCurrentDimension0     shift and go to state 47
    np_updateCurrentDimension1     shift and go to state 48
    np_updateCurrentDimension2     shift and go to state 49

state 39

    (8) declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .

    VAR             reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    FUNCION         reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    REGRESA         reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    DESDE           reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    MIENTRAS        reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    LEE             reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    ESCRIBE         reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    SI              reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    ID              reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    CBRACKET        reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    OBRACKET        reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)


state 40

    (9) declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .

    VAR             reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    FUNCION         reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    REGRESA         reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    DESDE           reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    MIENTRAS        reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    LEE             reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    ESCRIBE         reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    SI              reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    ID              reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    CBRACKET        reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    OBRACKET        reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)


state 41

    (5) principal -> PRINCIPAL OPAREN CPAREN OBRACKET . estatutos CBRACKET np_printCuadruplos np_printTablas
    (35) estatutos -> . return
    (36) estatutos -> . empty
    (37) estatutos -> . declaracion estatutos
    (38) estatutos -> . estatutoRepeticionIncondicional estatutos
    (39) estatutos -> . estatutoRepeticionCondicional estatutos
    (40) estatutos -> . lectura estatutos
    (41) estatutos -> . asignacion estatutos
    (42) estatutos -> . escritura estatutos
    (43) estatutos -> . decision estatutos
    (44) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (102) return -> . REGRESA SEMICOLON np_returnVOID
    (115) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (96) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (97) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (67) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (70) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (45) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (52) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 115 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 50
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 42

    (16) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN . np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (20) np_esParametro -> .

    INT             reduce using rule 20 (np_esParametro -> .)
    CHAR            reduce using rule 20 (np_esParametro -> .)
    FLOAT           reduce using rule 20 (np_esParametro -> .)
    CPAREN          reduce using rule 20 (np_esParametro -> .)

    np_esParametro                 shift and go to state 69

state 43

    (17) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN . np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (20) np_esParametro -> .

    INT             reduce using rule 20 (np_esParametro -> .)
    CHAR            reduce using rule 20 (np_esParametro -> .)
    FLOAT           reduce using rule 20 (np_esParametro -> .)
    CPAREN          reduce using rule 20 (np_esParametro -> .)

    np_esParametro                 shift and go to state 70

state 44

    (18) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN . np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (20) np_esParametro -> .

    INT             reduce using rule 20 (np_esParametro -> .)
    CHAR            reduce using rule 20 (np_esParametro -> .)
    FLOAT           reduce using rule 20 (np_esParametro -> .)
    CPAREN          reduce using rule 20 (np_esParametro -> .)

    np_esParametro                 shift and go to state 71

state 45

    (19) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN . np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (20) np_esParametro -> .

    INT             reduce using rule 20 (np_esParametro -> .)
    CHAR            reduce using rule 20 (np_esParametro -> .)
    FLOAT           reduce using rule 20 (np_esParametro -> .)
    CPAREN          reduce using rule 20 (np_esParametro -> .)

    np_esParametro                 shift and go to state 72

state 46

    (11) declaracion2 -> np_agregarFondo posibleIDDeclaracion . declaracion3
    (12) declaracion3 -> . np_quitarFondo SEMICOLON
    (13) declaracion3 -> . np_quitarFondo COMA declaracion2
    (14) declaracion3 -> . ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON
    (15) declaracion3 -> . ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2
    (113) np_quitarFondo -> .

    ASSIGN          shift and go to state 75
    SEMICOLON       reduce using rule 113 (np_quitarFondo -> .)
    COMA            reduce using rule 113 (np_quitarFondo -> .)

    declaracion3                   shift and go to state 73
    np_quitarFondo                 shift and go to state 74

state 47

    (90) posibleIDDeclaracion -> np_updateCurrentDimension0 . ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones

    ID              shift and go to state 76


state 48

    (91) posibleIDDeclaracion -> np_updateCurrentDimension1 . ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH

    ID              shift and go to state 77


state 49

    (92) posibleIDDeclaracion -> np_updateCurrentDimension2 . ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH

    ID              shift and go to state 78


state 50

    (5) principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos . CBRACKET np_printCuadruplos np_printTablas

    CBRACKET        shift and go to state 79


state 51

    (35) estatutos -> return .

    CBRACKET        reduce using rule 35 (estatutos -> return .)


state 52

    (36) estatutos -> empty .

    CBRACKET        reduce using rule 36 (estatutos -> empty .)


state 53

    (37) estatutos -> declaracion . estatutos
    (35) estatutos -> . return
    (36) estatutos -> . empty
    (37) estatutos -> . declaracion estatutos
    (38) estatutos -> . estatutoRepeticionIncondicional estatutos
    (39) estatutos -> . estatutoRepeticionCondicional estatutos
    (40) estatutos -> . lectura estatutos
    (41) estatutos -> . asignacion estatutos
    (42) estatutos -> . escritura estatutos
    (43) estatutos -> . decision estatutos
    (44) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (102) return -> . REGRESA SEMICOLON np_returnVOID
    (115) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (96) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (97) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (67) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (70) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (45) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (52) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 115 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    declaracion                    shift and go to state 53
    estatutos                      shift and go to state 80
    return                         shift and go to state 51
    empty                          shift and go to state 52
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 54

    (38) estatutos -> estatutoRepeticionIncondicional . estatutos
    (35) estatutos -> . return
    (36) estatutos -> . empty
    (37) estatutos -> . declaracion estatutos
    (38) estatutos -> . estatutoRepeticionIncondicional estatutos
    (39) estatutos -> . estatutoRepeticionCondicional estatutos
    (40) estatutos -> . lectura estatutos
    (41) estatutos -> . asignacion estatutos
    (42) estatutos -> . escritura estatutos
    (43) estatutos -> . decision estatutos
    (44) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (102) return -> . REGRESA SEMICOLON np_returnVOID
    (115) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (96) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (97) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (67) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (70) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (45) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (52) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 115 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutoRepeticionIncondicional shift and go to state 54
    estatutos                      shift and go to state 81
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 55

    (39) estatutos -> estatutoRepeticionCondicional . estatutos
    (35) estatutos -> . return
    (36) estatutos -> . empty
    (37) estatutos -> . declaracion estatutos
    (38) estatutos -> . estatutoRepeticionIncondicional estatutos
    (39) estatutos -> . estatutoRepeticionCondicional estatutos
    (40) estatutos -> . lectura estatutos
    (41) estatutos -> . asignacion estatutos
    (42) estatutos -> . escritura estatutos
    (43) estatutos -> . decision estatutos
    (44) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (102) return -> . REGRESA SEMICOLON np_returnVOID
    (115) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (96) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (97) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (67) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (70) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (45) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (52) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 115 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutoRepeticionCondicional  shift and go to state 55
    estatutos                      shift and go to state 82
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 56

    (40) estatutos -> lectura . estatutos
    (35) estatutos -> . return
    (36) estatutos -> . empty
    (37) estatutos -> . declaracion estatutos
    (38) estatutos -> . estatutoRepeticionIncondicional estatutos
    (39) estatutos -> . estatutoRepeticionCondicional estatutos
    (40) estatutos -> . lectura estatutos
    (41) estatutos -> . asignacion estatutos
    (42) estatutos -> . escritura estatutos
    (43) estatutos -> . decision estatutos
    (44) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (102) return -> . REGRESA SEMICOLON np_returnVOID
    (115) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (96) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (97) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (67) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (70) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (45) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (52) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 115 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    lectura                        shift and go to state 56
    estatutos                      shift and go to state 83
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 57

    (41) estatutos -> asignacion . estatutos
    (35) estatutos -> . return
    (36) estatutos -> . empty
    (37) estatutos -> . declaracion estatutos
    (38) estatutos -> . estatutoRepeticionIncondicional estatutos
    (39) estatutos -> . estatutoRepeticionCondicional estatutos
    (40) estatutos -> . lectura estatutos
    (41) estatutos -> . asignacion estatutos
    (42) estatutos -> . escritura estatutos
    (43) estatutos -> . decision estatutos
    (44) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (102) return -> . REGRESA SEMICOLON np_returnVOID
    (115) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (96) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (97) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (67) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (70) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (45) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (52) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 115 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    asignacion                     shift and go to state 57
    estatutos                      shift and go to state 84
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 58

    (42) estatutos -> escritura . estatutos
    (35) estatutos -> . return
    (36) estatutos -> . empty
    (37) estatutos -> . declaracion estatutos
    (38) estatutos -> . estatutoRepeticionIncondicional estatutos
    (39) estatutos -> . estatutoRepeticionCondicional estatutos
    (40) estatutos -> . lectura estatutos
    (41) estatutos -> . asignacion estatutos
    (42) estatutos -> . escritura estatutos
    (43) estatutos -> . decision estatutos
    (44) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (102) return -> . REGRESA SEMICOLON np_returnVOID
    (115) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (96) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (97) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (67) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (70) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (45) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (52) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 115 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    escritura                      shift and go to state 58
    estatutos                      shift and go to state 85
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 59

    (43) estatutos -> decision . estatutos
    (35) estatutos -> . return
    (36) estatutos -> . empty
    (37) estatutos -> . declaracion estatutos
    (38) estatutos -> . estatutoRepeticionIncondicional estatutos
    (39) estatutos -> . estatutoRepeticionCondicional estatutos
    (40) estatutos -> . lectura estatutos
    (41) estatutos -> . asignacion estatutos
    (42) estatutos -> . escritura estatutos
    (43) estatutos -> . decision estatutos
    (44) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (102) return -> . REGRESA SEMICOLON np_returnVOID
    (115) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (96) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (97) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (67) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (70) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (45) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (52) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 115 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    decision                       shift and go to state 59
    estatutos                      shift and go to state 86
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 60

    (44) estatutos -> llamadaFuncion . SEMICOLON estatutos

    SEMICOLON       shift and go to state 87


state 61

    (101) return -> REGRESA . np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (102) return -> REGRESA . SEMICOLON np_returnVOID
    (112) np_agregarFondo -> .

    SEMICOLON       shift and go to state 89
    ENTERO          reduce using rule 112 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 112 (np_agregarFondo -> .)
    OPAREN          reduce using rule 112 (np_agregarFondo -> .)
    QUOT            reduce using rule 112 (np_agregarFondo -> .)
    ID              reduce using rule 112 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 88

state 62

    (96) estatutoRepeticionIncondicional -> DESDE . ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET

    ID              shift and go to state 90


state 63

    (58) llamadaFuncion -> ID . np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB
    (87) posibleID -> ID . np_contieneID np_enviarACuadruplos
    (88) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (59) np_existeFuncion -> .
    (105) np_contieneID -> .

    OPAREN          reduce using rule 59 (np_existeFuncion -> .)
    OCORCH          reduce using rule 105 (np_contieneID -> .)
    ASSIGN          reduce using rule 105 (np_contieneID -> .)

    np_existeFuncion               shift and go to state 91
    np_contieneID                  shift and go to state 92

state 64

    (97) estatutoRepeticionCondicional -> MIENTRAS . OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina

    OPAREN          shift and go to state 93


state 65

    (67) lectura -> LEE . OPAREN posibleID lectura2 CPAREN SEMICOLON

    OPAREN          shift and go to state 94


state 66

    (70) asignacion -> posibleID . np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (112) np_agregarFondo -> .

    ASSIGN          reduce using rule 112 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 95

state 67

    (45) escritura -> ESCRIBE . OPAREN escritura2 CPAREN SEMICOLON

    OPAREN          shift and go to state 96


state 68

    (52) decision -> SI . OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> SI . OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf

    OPAREN          shift and go to state 97


state 69

    (16) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro . declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (24) declaracionFuncionParametros -> . empty
    (25) declaracionFuncionParametros -> . INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (26) declaracionFuncionParametros -> . CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (27) declaracionFuncionParametros -> . FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (115) empty -> .

    INT             shift and go to state 100
    CHAR            shift and go to state 101
    FLOAT           shift and go to state 102
    CPAREN          reduce using rule 115 (empty -> .)

    declaracionFuncionParametros   shift and go to state 98
    empty                          shift and go to state 99

state 70

    (17) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro . declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (24) declaracionFuncionParametros -> . empty
    (25) declaracionFuncionParametros -> . INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (26) declaracionFuncionParametros -> . CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (27) declaracionFuncionParametros -> . FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (115) empty -> .

    INT             shift and go to state 100
    CHAR            shift and go to state 101
    FLOAT           shift and go to state 102
    CPAREN          reduce using rule 115 (empty -> .)

    declaracionFuncionParametros   shift and go to state 103
    empty                          shift and go to state 99

state 71

    (18) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro . declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (24) declaracionFuncionParametros -> . empty
    (25) declaracionFuncionParametros -> . INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (26) declaracionFuncionParametros -> . CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (27) declaracionFuncionParametros -> . FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (115) empty -> .

    INT             shift and go to state 100
    CHAR            shift and go to state 101
    FLOAT           shift and go to state 102
    CPAREN          reduce using rule 115 (empty -> .)

    declaracionFuncionParametros   shift and go to state 104
    empty                          shift and go to state 99

state 72

    (19) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro . declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (24) declaracionFuncionParametros -> . empty
    (25) declaracionFuncionParametros -> . INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (26) declaracionFuncionParametros -> . CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (27) declaracionFuncionParametros -> . FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (115) empty -> .

    INT             shift and go to state 100
    CHAR            shift and go to state 101
    FLOAT           shift and go to state 102
    CPAREN          reduce using rule 115 (empty -> .)

    declaracionFuncionParametros   shift and go to state 105
    empty                          shift and go to state 99

state 73

    (11) declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .

    VAR             reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    FUNCION         reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    REGRESA         reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    DESDE           reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    MIENTRAS        reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    LEE             reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    ESCRIBE         reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    SI              reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    ID              reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    CBRACKET        reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)
    OBRACKET        reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3 .)


state 74

    (12) declaracion3 -> np_quitarFondo . SEMICOLON
    (13) declaracion3 -> np_quitarFondo . COMA declaracion2

    SEMICOLON       shift and go to state 106
    COMA            shift and go to state 107


state 75

    (14) declaracion3 -> ASSIGN . np_insertarOperador expresion np_quitarFondo SEMICOLON
    (15) declaracion3 -> ASSIGN . np_insertarOperador expresion np_quitarFondo COMA declaracion2
    (78) np_insertarOperador -> .

    ENTERO          reduce using rule 78 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 78 (np_insertarOperador -> .)
    OPAREN          reduce using rule 78 (np_insertarOperador -> .)
    QUOT            reduce using rule 78 (np_insertarOperador -> .)
    ID              reduce using rule 78 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 108

state 76

    (90) posibleIDDeclaracion -> np_updateCurrentDimension0 ID . np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (109) np_addVariable -> .

    ASSIGN          reduce using rule 109 (np_addVariable -> .)
    SEMICOLON       reduce using rule 109 (np_addVariable -> .)
    COMA            reduce using rule 109 (np_addVariable -> .)
    CPAREN          reduce using rule 109 (np_addVariable -> .)

    np_addVariable                 shift and go to state 109

state 77

    (91) posibleIDDeclaracion -> np_updateCurrentDimension1 ID . np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (109) np_addVariable -> .

    OCORCH          reduce using rule 109 (np_addVariable -> .)

    np_addVariable                 shift and go to state 110

state 78

    (92) posibleIDDeclaracion -> np_updateCurrentDimension2 ID . np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (109) np_addVariable -> .

    OCORCH          reduce using rule 109 (np_addVariable -> .)

    np_addVariable                 shift and go to state 111

state 79

    (5) principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET . np_printCuadruplos np_printTablas
    (114) np_printCuadruplos -> .

    $end            reduce using rule 114 (np_printCuadruplos -> .)

    np_printCuadruplos             shift and go to state 112

state 80

    (37) estatutos -> declaracion estatutos .

    CBRACKET        reduce using rule 37 (estatutos -> declaracion estatutos .)


state 81

    (38) estatutos -> estatutoRepeticionIncondicional estatutos .

    CBRACKET        reduce using rule 38 (estatutos -> estatutoRepeticionIncondicional estatutos .)


state 82

    (39) estatutos -> estatutoRepeticionCondicional estatutos .

    CBRACKET        reduce using rule 39 (estatutos -> estatutoRepeticionCondicional estatutos .)


state 83

    (40) estatutos -> lectura estatutos .

    CBRACKET        reduce using rule 40 (estatutos -> lectura estatutos .)


state 84

    (41) estatutos -> asignacion estatutos .

    CBRACKET        reduce using rule 41 (estatutos -> asignacion estatutos .)


state 85

    (42) estatutos -> escritura estatutos .

    CBRACKET        reduce using rule 42 (estatutos -> escritura estatutos .)


state 86

    (43) estatutos -> decision estatutos .

    CBRACKET        reduce using rule 43 (estatutos -> decision estatutos .)


state 87

    (44) estatutos -> llamadaFuncion SEMICOLON . estatutos
    (35) estatutos -> . return
    (36) estatutos -> . empty
    (37) estatutos -> . declaracion estatutos
    (38) estatutos -> . estatutoRepeticionIncondicional estatutos
    (39) estatutos -> . estatutoRepeticionCondicional estatutos
    (40) estatutos -> . lectura estatutos
    (41) estatutos -> . asignacion estatutos
    (42) estatutos -> . escritura estatutos
    (43) estatutos -> . decision estatutos
    (44) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (102) return -> . REGRESA SEMICOLON np_returnVOID
    (115) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (96) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (97) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (67) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (70) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (45) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (52) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 115 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    llamadaFuncion                 shift and go to state 60
    estatutos                      shift and go to state 113
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    posibleID                      shift and go to state 66

state 88

    (101) return -> REGRESA np_agregarFondo . expresion np_quitarFondo SEMICOLON np_return
    (71) expresion -> . expresion LOGIC np_insertarOperador expresion
    (72) expresion -> . expresion RELOP np_insertarOperador expresion
    (73) expresion -> . termino
    (74) termino -> . termino PLUS np_insertarOperador termino
    (75) termino -> . termino MINUS np_insertarOperador termino
    (76) termino -> . termino MULTIPLY np_insertarOperador termino
    (77) termino -> . termino DIVIDE np_insertarOperador termino
    (79) termino -> . termino1 OPMATRIZ np_insertarOperador
    (80) termino -> . termino1
    (81) termino1 -> . posibleID
    (82) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (83) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (84) termino1 -> . llamadaFuncion
    (85) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (86) termino1 -> . QUOT CARACTER QUOT
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB

    ENTERO          shift and go to state 118
    FLOTANTE        shift and go to state 119
    OPAREN          shift and go to state 121
    QUOT            shift and go to state 122
    ID              shift and go to state 123

    expresion                      shift and go to state 114
    termino                        shift and go to state 115
    termino1                       shift and go to state 116
    posibleID                      shift and go to state 117
    llamadaFuncion                 shift and go to state 120

state 89

    (102) return -> REGRESA SEMICOLON . np_returnVOID
    (104) np_returnVOID -> .

    CBRACKET        reduce using rule 104 (np_returnVOID -> .)

    np_returnVOID                  shift and go to state 124

state 90

    (96) estatutoRepeticionIncondicional -> DESDE ID . np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (105) np_contieneID -> .

    HASTA           reduce using rule 105 (np_contieneID -> .)

    np_contieneID                  shift and go to state 125

state 91

    (58) llamadaFuncion -> ID np_existeFuncion . np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB
    (60) np_llamadaFuncion -> .

    OPAREN          reduce using rule 60 (np_llamadaFuncion -> .)

    np_llamadaFuncion              shift and go to state 126

state 92

    (87) posibleID -> ID np_contieneID . np_enviarACuadruplos
    (88) posibleID -> ID np_contieneID . np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> ID np_contieneID . np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (110) np_enviarACuadruplos -> .

    OCORCH          reduce using rule 110 (np_enviarACuadruplos -> .)
    ASSIGN          reduce using rule 110 (np_enviarACuadruplos -> .)
    OPMATRIZ        reduce using rule 110 (np_enviarACuadruplos -> .)
    PLUS            reduce using rule 110 (np_enviarACuadruplos -> .)
    MINUS           reduce using rule 110 (np_enviarACuadruplos -> .)
    MULTIPLY        reduce using rule 110 (np_enviarACuadruplos -> .)
    DIVIDE          reduce using rule 110 (np_enviarACuadruplos -> .)
    LOGIC           reduce using rule 110 (np_enviarACuadruplos -> .)
    RELOP           reduce using rule 110 (np_enviarACuadruplos -> .)
    SEMICOLON       reduce using rule 110 (np_enviarACuadruplos -> .)
    COMA            reduce using rule 110 (np_enviarACuadruplos -> .)
    CPAREN          reduce using rule 110 (np_enviarACuadruplos -> .)
    HAZ             reduce using rule 110 (np_enviarACuadruplos -> .)
    CCORCH          reduce using rule 110 (np_enviarACuadruplos -> .)

    np_enviarACuadruplos           shift and go to state 127

state 93

    (97) estatutoRepeticionCondicional -> MIENTRAS OPAREN . np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (112) np_agregarFondo -> .

    ENTERO          reduce using rule 112 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 112 (np_agregarFondo -> .)
    OPAREN          reduce using rule 112 (np_agregarFondo -> .)
    QUOT            reduce using rule 112 (np_agregarFondo -> .)
    ID              reduce using rule 112 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 128

state 94

    (67) lectura -> LEE OPAREN . posibleID lectura2 CPAREN SEMICOLON
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    ID              shift and go to state 130

    posibleID                      shift and go to state 129

state 95

    (70) asignacion -> posibleID np_agregarFondo . ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON

    ASSIGN          shift and go to state 131


state 96

    (45) escritura -> ESCRIBE OPAREN . escritura2 CPAREN SEMICOLON
    (46) escritura2 -> . empty
    (47) escritura2 -> . posibleID escritura3
    (48) escritura2 -> . STRING escritura3
    (115) empty -> .
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    STRING          shift and go to state 135
    CPAREN          reduce using rule 115 (empty -> .)
    ID              shift and go to state 130

    escritura2                     shift and go to state 132
    empty                          shift and go to state 133
    posibleID                      shift and go to state 134

state 97

    (52) decision -> SI OPAREN . np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> SI OPAREN . np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (112) np_agregarFondo -> .

    ENTERO          reduce using rule 112 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 112 (np_agregarFondo -> .)
    OPAREN          reduce using rule 112 (np_agregarFondo -> .)
    QUOT            reduce using rule 112 (np_agregarFondo -> .)
    ID              reduce using rule 112 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 136

state 98

    (16) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros . np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (21) np_yaNoEsParametro -> .

    CPAREN          reduce using rule 21 (np_yaNoEsParametro -> .)

    np_yaNoEsParametro             shift and go to state 137

state 99

    (24) declaracionFuncionParametros -> empty .

    CPAREN          reduce using rule 24 (declaracionFuncionParametros -> empty .)


state 100

    (25) declaracionFuncionParametros -> INT . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (10) np_defineTipo -> .

    ID              reduce using rule 10 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 138

state 101

    (26) declaracionFuncionParametros -> CHAR . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (10) np_defineTipo -> .

    ID              reduce using rule 10 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 139

state 102

    (27) declaracionFuncionParametros -> FLOAT . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (10) np_defineTipo -> .

    ID              reduce using rule 10 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 140

state 103

    (17) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros . np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (21) np_yaNoEsParametro -> .

    CPAREN          reduce using rule 21 (np_yaNoEsParametro -> .)

    np_yaNoEsParametro             shift and go to state 141

state 104

    (18) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros . CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    CPAREN          shift and go to state 142


state 105

    (19) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros . CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    CPAREN          shift and go to state 143


state 106

    (12) declaracion3 -> np_quitarFondo SEMICOLON .

    VAR             reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)
    FUNCION         reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)
    REGRESA         reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)
    DESDE           reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)
    MIENTRAS        reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)
    LEE             reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)
    ESCRIBE         reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)
    SI              reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)
    ID              reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)
    CBRACKET        reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)
    OBRACKET        reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)


state 107

    (13) declaracion3 -> np_quitarFondo COMA . declaracion2
    (11) declaracion2 -> . np_agregarFondo posibleIDDeclaracion declaracion3
    (112) np_agregarFondo -> .

    ID              reduce using rule 112 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 144
    np_agregarFondo                shift and go to state 38

state 108

    (14) declaracion3 -> ASSIGN np_insertarOperador . expresion np_quitarFondo SEMICOLON
    (15) declaracion3 -> ASSIGN np_insertarOperador . expresion np_quitarFondo COMA declaracion2
    (71) expresion -> . expresion LOGIC np_insertarOperador expresion
    (72) expresion -> . expresion RELOP np_insertarOperador expresion
    (73) expresion -> . termino
    (74) termino -> . termino PLUS np_insertarOperador termino
    (75) termino -> . termino MINUS np_insertarOperador termino
    (76) termino -> . termino MULTIPLY np_insertarOperador termino
    (77) termino -> . termino DIVIDE np_insertarOperador termino
    (79) termino -> . termino1 OPMATRIZ np_insertarOperador
    (80) termino -> . termino1
    (81) termino1 -> . posibleID
    (82) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (83) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (84) termino1 -> . llamadaFuncion
    (85) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (86) termino1 -> . QUOT CARACTER QUOT
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB

    ENTERO          shift and go to state 118
    FLOTANTE        shift and go to state 119
    OPAREN          shift and go to state 121
    QUOT            shift and go to state 122
    ID              shift and go to state 123

    expresion                      shift and go to state 145
    termino                        shift and go to state 115
    termino1                       shift and go to state 116
    posibleID                      shift and go to state 117
    llamadaFuncion                 shift and go to state 120

state 109

    (90) posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable . np_enviarACuadruplos np_actualizarDimensiones
    (110) np_enviarACuadruplos -> .

    ASSIGN          reduce using rule 110 (np_enviarACuadruplos -> .)
    SEMICOLON       reduce using rule 110 (np_enviarACuadruplos -> .)
    COMA            reduce using rule 110 (np_enviarACuadruplos -> .)
    CPAREN          reduce using rule 110 (np_enviarACuadruplos -> .)

    np_enviarACuadruplos           shift and go to state 146

state 110

    (91) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable . np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (110) np_enviarACuadruplos -> .

    OCORCH          reduce using rule 110 (np_enviarACuadruplos -> .)

    np_enviarACuadruplos           shift and go to state 147

state 111

    (92) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable . np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (110) np_enviarACuadruplos -> .

    OCORCH          reduce using rule 110 (np_enviarACuadruplos -> .)

    np_enviarACuadruplos           shift and go to state 148

state 112

    (5) principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos . np_printTablas
    (6) np_printTablas -> .

    $end            reduce using rule 6 (np_printTablas -> .)

    np_printTablas                 shift and go to state 149

state 113

    (44) estatutos -> llamadaFuncion SEMICOLON estatutos .

    CBRACKET        reduce using rule 44 (estatutos -> llamadaFuncion SEMICOLON estatutos .)


state 114

    (101) return -> REGRESA np_agregarFondo expresion . np_quitarFondo SEMICOLON np_return
    (71) expresion -> expresion . LOGIC np_insertarOperador expresion
    (72) expresion -> expresion . RELOP np_insertarOperador expresion
    (113) np_quitarFondo -> .

    LOGIC           shift and go to state 151
    RELOP           shift and go to state 152
    SEMICOLON       reduce using rule 113 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 150

state 115

    (73) expresion -> termino .
    (74) termino -> termino . PLUS np_insertarOperador termino
    (75) termino -> termino . MINUS np_insertarOperador termino
    (76) termino -> termino . MULTIPLY np_insertarOperador termino
    (77) termino -> termino . DIVIDE np_insertarOperador termino

    LOGIC           reduce using rule 73 (expresion -> termino .)
    RELOP           reduce using rule 73 (expresion -> termino .)
    SEMICOLON       reduce using rule 73 (expresion -> termino .)
    COMA            reduce using rule 73 (expresion -> termino .)
    CPAREN          reduce using rule 73 (expresion -> termino .)
    HAZ             reduce using rule 73 (expresion -> termino .)
    CCORCH          reduce using rule 73 (expresion -> termino .)
    PLUS            shift and go to state 153
    MINUS           shift and go to state 154
    MULTIPLY        shift and go to state 155
    DIVIDE          shift and go to state 156


state 116

    (79) termino -> termino1 . OPMATRIZ np_insertarOperador
    (80) termino -> termino1 .

    OPMATRIZ        shift and go to state 157
    PLUS            reduce using rule 80 (termino -> termino1 .)
    MINUS           reduce using rule 80 (termino -> termino1 .)
    MULTIPLY        reduce using rule 80 (termino -> termino1 .)
    DIVIDE          reduce using rule 80 (termino -> termino1 .)
    LOGIC           reduce using rule 80 (termino -> termino1 .)
    RELOP           reduce using rule 80 (termino -> termino1 .)
    SEMICOLON       reduce using rule 80 (termino -> termino1 .)
    COMA            reduce using rule 80 (termino -> termino1 .)
    CPAREN          reduce using rule 80 (termino -> termino1 .)
    HAZ             reduce using rule 80 (termino -> termino1 .)
    CCORCH          reduce using rule 80 (termino -> termino1 .)


state 117

    (81) termino1 -> posibleID .

    OPMATRIZ        reduce using rule 81 (termino1 -> posibleID .)
    PLUS            reduce using rule 81 (termino1 -> posibleID .)
    MINUS           reduce using rule 81 (termino1 -> posibleID .)
    MULTIPLY        reduce using rule 81 (termino1 -> posibleID .)
    DIVIDE          reduce using rule 81 (termino1 -> posibleID .)
    LOGIC           reduce using rule 81 (termino1 -> posibleID .)
    RELOP           reduce using rule 81 (termino1 -> posibleID .)
    SEMICOLON       reduce using rule 81 (termino1 -> posibleID .)
    COMA            reduce using rule 81 (termino1 -> posibleID .)
    CPAREN          reduce using rule 81 (termino1 -> posibleID .)
    HAZ             reduce using rule 81 (termino1 -> posibleID .)
    CCORCH          reduce using rule 81 (termino1 -> posibleID .)


state 118

    (82) termino1 -> ENTERO . np_contieneID_Constante_Entero
    (106) np_contieneID_Constante_Entero -> .

    OPMATRIZ        reduce using rule 106 (np_contieneID_Constante_Entero -> .)
    PLUS            reduce using rule 106 (np_contieneID_Constante_Entero -> .)
    MINUS           reduce using rule 106 (np_contieneID_Constante_Entero -> .)
    MULTIPLY        reduce using rule 106 (np_contieneID_Constante_Entero -> .)
    DIVIDE          reduce using rule 106 (np_contieneID_Constante_Entero -> .)
    LOGIC           reduce using rule 106 (np_contieneID_Constante_Entero -> .)
    RELOP           reduce using rule 106 (np_contieneID_Constante_Entero -> .)
    SEMICOLON       reduce using rule 106 (np_contieneID_Constante_Entero -> .)
    COMA            reduce using rule 106 (np_contieneID_Constante_Entero -> .)
    CPAREN          reduce using rule 106 (np_contieneID_Constante_Entero -> .)
    HAZ             reduce using rule 106 (np_contieneID_Constante_Entero -> .)
    CCORCH          reduce using rule 106 (np_contieneID_Constante_Entero -> .)

    np_contieneID_Constante_Entero shift and go to state 158

state 119

    (83) termino1 -> FLOTANTE . np_contieneID_Constante_Flotante
    (107) np_contieneID_Constante_Flotante -> .

    OPMATRIZ        reduce using rule 107 (np_contieneID_Constante_Flotante -> .)
    PLUS            reduce using rule 107 (np_contieneID_Constante_Flotante -> .)
    MINUS           reduce using rule 107 (np_contieneID_Constante_Flotante -> .)
    MULTIPLY        reduce using rule 107 (np_contieneID_Constante_Flotante -> .)
    DIVIDE          reduce using rule 107 (np_contieneID_Constante_Flotante -> .)
    LOGIC           reduce using rule 107 (np_contieneID_Constante_Flotante -> .)
    RELOP           reduce using rule 107 (np_contieneID_Constante_Flotante -> .)
    SEMICOLON       reduce using rule 107 (np_contieneID_Constante_Flotante -> .)
    COMA            reduce using rule 107 (np_contieneID_Constante_Flotante -> .)
    CPAREN          reduce using rule 107 (np_contieneID_Constante_Flotante -> .)
    HAZ             reduce using rule 107 (np_contieneID_Constante_Flotante -> .)
    CCORCH          reduce using rule 107 (np_contieneID_Constante_Flotante -> .)

    np_contieneID_Constante_Flotante shift and go to state 159

state 120

    (84) termino1 -> llamadaFuncion .

    OPMATRIZ        reduce using rule 84 (termino1 -> llamadaFuncion .)
    PLUS            reduce using rule 84 (termino1 -> llamadaFuncion .)
    MINUS           reduce using rule 84 (termino1 -> llamadaFuncion .)
    MULTIPLY        reduce using rule 84 (termino1 -> llamadaFuncion .)
    DIVIDE          reduce using rule 84 (termino1 -> llamadaFuncion .)
    LOGIC           reduce using rule 84 (termino1 -> llamadaFuncion .)
    RELOP           reduce using rule 84 (termino1 -> llamadaFuncion .)
    SEMICOLON       reduce using rule 84 (termino1 -> llamadaFuncion .)
    COMA            reduce using rule 84 (termino1 -> llamadaFuncion .)
    CPAREN          reduce using rule 84 (termino1 -> llamadaFuncion .)
    HAZ             reduce using rule 84 (termino1 -> llamadaFuncion .)
    CCORCH          reduce using rule 84 (termino1 -> llamadaFuncion .)


state 121

    (85) termino1 -> OPAREN . np_insertarOperador expresion CPAREN np_insertarOperador
    (78) np_insertarOperador -> .

    ENTERO          reduce using rule 78 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 78 (np_insertarOperador -> .)
    OPAREN          reduce using rule 78 (np_insertarOperador -> .)
    QUOT            reduce using rule 78 (np_insertarOperador -> .)
    ID              reduce using rule 78 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 160

state 122

    (86) termino1 -> QUOT . CARACTER QUOT

    CARACTER        shift and go to state 161


state 123

    (87) posibleID -> ID . np_contieneID np_enviarACuadruplos
    (88) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (58) llamadaFuncion -> ID . np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB
    (105) np_contieneID -> .
    (59) np_existeFuncion -> .

    OCORCH          reduce using rule 105 (np_contieneID -> .)
    OPMATRIZ        reduce using rule 105 (np_contieneID -> .)
    PLUS            reduce using rule 105 (np_contieneID -> .)
    MINUS           reduce using rule 105 (np_contieneID -> .)
    MULTIPLY        reduce using rule 105 (np_contieneID -> .)
    DIVIDE          reduce using rule 105 (np_contieneID -> .)
    LOGIC           reduce using rule 105 (np_contieneID -> .)
    RELOP           reduce using rule 105 (np_contieneID -> .)
    SEMICOLON       reduce using rule 105 (np_contieneID -> .)
    COMA            reduce using rule 105 (np_contieneID -> .)
    CPAREN          reduce using rule 105 (np_contieneID -> .)
    HAZ             reduce using rule 105 (np_contieneID -> .)
    CCORCH          reduce using rule 105 (np_contieneID -> .)
    OPAREN          reduce using rule 59 (np_existeFuncion -> .)

    np_contieneID                  shift and go to state 92
    np_existeFuncion               shift and go to state 91

state 124

    (102) return -> REGRESA SEMICOLON np_returnVOID .

    CBRACKET        reduce using rule 102 (return -> REGRESA SEMICOLON np_returnVOID .)


state 125

    (96) estatutoRepeticionIncondicional -> DESDE ID np_contieneID . HASTA expresion HAZ OBRACKET estatutos CBRACKET

    HASTA           shift and go to state 162


state 126

    (58) llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion . OPAREN paramsLlamada1 CPAREN np_goSUB

    OPAREN          shift and go to state 163


state 127

    (87) posibleID -> ID np_contieneID np_enviarACuadruplos .
    (88) posibleID -> ID np_contieneID np_enviarACuadruplos . OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> ID np_contieneID np_enviarACuadruplos . OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    ASSIGN          reduce using rule 87 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    OPMATRIZ        reduce using rule 87 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    PLUS            reduce using rule 87 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    MINUS           reduce using rule 87 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    MULTIPLY        reduce using rule 87 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    DIVIDE          reduce using rule 87 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    LOGIC           reduce using rule 87 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    RELOP           reduce using rule 87 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    SEMICOLON       reduce using rule 87 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    COMA            reduce using rule 87 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    CPAREN          reduce using rule 87 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    HAZ             reduce using rule 87 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    CCORCH          reduce using rule 87 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    OCORCH          shift and go to state 164


state 128

    (97) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo . npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (98) npWhileStExp -> .

    ENTERO          reduce using rule 98 (npWhileStExp -> .)
    FLOTANTE        reduce using rule 98 (npWhileStExp -> .)
    OPAREN          reduce using rule 98 (npWhileStExp -> .)
    QUOT            reduce using rule 98 (npWhileStExp -> .)
    ID              reduce using rule 98 (npWhileStExp -> .)

    npWhileStExp                   shift and go to state 165

state 129

    (67) lectura -> LEE OPAREN posibleID . lectura2 CPAREN SEMICOLON
    (68) lectura2 -> . empty
    (69) lectura2 -> . COMA posibleID lectura2
    (115) empty -> .

    COMA            shift and go to state 168
    CPAREN          reduce using rule 115 (empty -> .)

    lectura2                       shift and go to state 166
    empty                          shift and go to state 167

state 130

    (87) posibleID -> ID . np_contieneID np_enviarACuadruplos
    (88) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (105) np_contieneID -> .

    OCORCH          reduce using rule 105 (np_contieneID -> .)
    COMA            reduce using rule 105 (np_contieneID -> .)
    CPAREN          reduce using rule 105 (np_contieneID -> .)

    np_contieneID                  shift and go to state 92

state 131

    (70) asignacion -> posibleID np_agregarFondo ASSIGN . np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (78) np_insertarOperador -> .

    ENTERO          reduce using rule 78 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 78 (np_insertarOperador -> .)
    OPAREN          reduce using rule 78 (np_insertarOperador -> .)
    QUOT            reduce using rule 78 (np_insertarOperador -> .)
    ID              reduce using rule 78 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 169

state 132

    (45) escritura -> ESCRIBE OPAREN escritura2 . CPAREN SEMICOLON

    CPAREN          shift and go to state 170


state 133

    (46) escritura2 -> empty .

    CPAREN          reduce using rule 46 (escritura2 -> empty .)


state 134

    (47) escritura2 -> posibleID . escritura3
    (49) escritura3 -> . empty
    (50) escritura3 -> . COMA expresion escritura3
    (51) escritura3 -> . COMA STRING escritura3
    (115) empty -> .

    COMA            shift and go to state 173
    CPAREN          reduce using rule 115 (empty -> .)

    escritura3                     shift and go to state 171
    empty                          shift and go to state 172

state 135

    (48) escritura2 -> STRING . escritura3
    (49) escritura3 -> . empty
    (50) escritura3 -> . COMA expresion escritura3
    (51) escritura3 -> . COMA STRING escritura3
    (115) empty -> .

    COMA            shift and go to state 173
    CPAREN          reduce using rule 115 (empty -> .)

    escritura3                     shift and go to state 174
    empty                          shift and go to state 172

state 136

    (52) decision -> SI OPAREN np_agregarFondo . expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> SI OPAREN np_agregarFondo . expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (71) expresion -> . expresion LOGIC np_insertarOperador expresion
    (72) expresion -> . expresion RELOP np_insertarOperador expresion
    (73) expresion -> . termino
    (74) termino -> . termino PLUS np_insertarOperador termino
    (75) termino -> . termino MINUS np_insertarOperador termino
    (76) termino -> . termino MULTIPLY np_insertarOperador termino
    (77) termino -> . termino DIVIDE np_insertarOperador termino
    (79) termino -> . termino1 OPMATRIZ np_insertarOperador
    (80) termino -> . termino1
    (81) termino1 -> . posibleID
    (82) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (83) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (84) termino1 -> . llamadaFuncion
    (85) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (86) termino1 -> . QUOT CARACTER QUOT
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB

    ENTERO          shift and go to state 118
    FLOTANTE        shift and go to state 119
    OPAREN          shift and go to state 121
    QUOT            shift and go to state 122
    ID              shift and go to state 123

    expresion                      shift and go to state 175
    termino                        shift and go to state 115
    termino1                       shift and go to state 116
    posibleID                      shift and go to state 117
    llamadaFuncion                 shift and go to state 120

state 137

    (16) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro . CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    CPAREN          shift and go to state 176


state 138

    (25) declaracionFuncionParametros -> INT np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (112) np_agregarFondo -> .

    ID              reduce using rule 112 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 177

state 139

    (26) declaracionFuncionParametros -> CHAR np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (112) np_agregarFondo -> .

    ID              reduce using rule 112 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 178

state 140

    (27) declaracionFuncionParametros -> FLOAT np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (112) np_agregarFondo -> .

    ID              reduce using rule 112 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 179

state 141

    (17) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro . CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc

    CPAREN          shift and go to state 180


state 142

    (18) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN . np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (21) np_yaNoEsParametro -> .

    VAR             reduce using rule 21 (np_yaNoEsParametro -> .)
    OBRACKET        reduce using rule 21 (np_yaNoEsParametro -> .)

    np_yaNoEsParametro             shift and go to state 181

state 143

    (19) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN . np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (21) np_yaNoEsParametro -> .

    VAR             reduce using rule 21 (np_yaNoEsParametro -> .)
    OBRACKET        reduce using rule 21 (np_yaNoEsParametro -> .)

    np_yaNoEsParametro             shift and go to state 182

state 144

    (13) declaracion3 -> np_quitarFondo COMA declaracion2 .

    VAR             reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    FUNCION         reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    REGRESA         reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    DESDE           reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    MIENTRAS        reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    LEE             reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    ESCRIBE         reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    SI              reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    ID              reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    CBRACKET        reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    OBRACKET        reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)


state 145

    (14) declaracion3 -> ASSIGN np_insertarOperador expresion . np_quitarFondo SEMICOLON
    (15) declaracion3 -> ASSIGN np_insertarOperador expresion . np_quitarFondo COMA declaracion2
    (71) expresion -> expresion . LOGIC np_insertarOperador expresion
    (72) expresion -> expresion . RELOP np_insertarOperador expresion
    (113) np_quitarFondo -> .

    LOGIC           shift and go to state 151
    RELOP           shift and go to state 152
    SEMICOLON       reduce using rule 113 (np_quitarFondo -> .)
    COMA            reduce using rule 113 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 183

state 146

    (90) posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos . np_actualizarDimensiones
    (111) np_actualizarDimensiones -> .

    ASSIGN          reduce using rule 111 (np_actualizarDimensiones -> .)
    SEMICOLON       reduce using rule 111 (np_actualizarDimensiones -> .)
    COMA            reduce using rule 111 (np_actualizarDimensiones -> .)
    CPAREN          reduce using rule 111 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 184

state 147

    (91) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos . np_actualizarDimensiones OCORCH expresion CCORCH
    (111) np_actualizarDimensiones -> .

    OCORCH          reduce using rule 111 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 185

state 148

    (92) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos . np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (111) np_actualizarDimensiones -> .

    OCORCH          reduce using rule 111 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 186

state 149

    (5) principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos np_printTablas .

    $end            reduce using rule 5 (principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos np_printTablas .)


state 150

    (101) return -> REGRESA np_agregarFondo expresion np_quitarFondo . SEMICOLON np_return

    SEMICOLON       shift and go to state 187


state 151

    (71) expresion -> expresion LOGIC . np_insertarOperador expresion
    (78) np_insertarOperador -> .

    ENTERO          reduce using rule 78 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 78 (np_insertarOperador -> .)
    OPAREN          reduce using rule 78 (np_insertarOperador -> .)
    QUOT            reduce using rule 78 (np_insertarOperador -> .)
    ID              reduce using rule 78 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 188

state 152

    (72) expresion -> expresion RELOP . np_insertarOperador expresion
    (78) np_insertarOperador -> .

    ENTERO          reduce using rule 78 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 78 (np_insertarOperador -> .)
    OPAREN          reduce using rule 78 (np_insertarOperador -> .)
    QUOT            reduce using rule 78 (np_insertarOperador -> .)
    ID              reduce using rule 78 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 189

state 153

    (74) termino -> termino PLUS . np_insertarOperador termino
    (78) np_insertarOperador -> .

    ENTERO          reduce using rule 78 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 78 (np_insertarOperador -> .)
    OPAREN          reduce using rule 78 (np_insertarOperador -> .)
    QUOT            reduce using rule 78 (np_insertarOperador -> .)
    ID              reduce using rule 78 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 190

state 154

    (75) termino -> termino MINUS . np_insertarOperador termino
    (78) np_insertarOperador -> .

    ENTERO          reduce using rule 78 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 78 (np_insertarOperador -> .)
    OPAREN          reduce using rule 78 (np_insertarOperador -> .)
    QUOT            reduce using rule 78 (np_insertarOperador -> .)
    ID              reduce using rule 78 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 191

state 155

    (76) termino -> termino MULTIPLY . np_insertarOperador termino
    (78) np_insertarOperador -> .

    ENTERO          reduce using rule 78 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 78 (np_insertarOperador -> .)
    OPAREN          reduce using rule 78 (np_insertarOperador -> .)
    QUOT            reduce using rule 78 (np_insertarOperador -> .)
    ID              reduce using rule 78 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 192

state 156

    (77) termino -> termino DIVIDE . np_insertarOperador termino
    (78) np_insertarOperador -> .

    ENTERO          reduce using rule 78 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 78 (np_insertarOperador -> .)
    OPAREN          reduce using rule 78 (np_insertarOperador -> .)
    QUOT            reduce using rule 78 (np_insertarOperador -> .)
    ID              reduce using rule 78 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 193

state 157

    (79) termino -> termino1 OPMATRIZ . np_insertarOperador
    (78) np_insertarOperador -> .

    PLUS            reduce using rule 78 (np_insertarOperador -> .)
    MINUS           reduce using rule 78 (np_insertarOperador -> .)
    MULTIPLY        reduce using rule 78 (np_insertarOperador -> .)
    DIVIDE          reduce using rule 78 (np_insertarOperador -> .)
    LOGIC           reduce using rule 78 (np_insertarOperador -> .)
    RELOP           reduce using rule 78 (np_insertarOperador -> .)
    SEMICOLON       reduce using rule 78 (np_insertarOperador -> .)
    COMA            reduce using rule 78 (np_insertarOperador -> .)
    CPAREN          reduce using rule 78 (np_insertarOperador -> .)
    HAZ             reduce using rule 78 (np_insertarOperador -> .)
    CCORCH          reduce using rule 78 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 194

state 158

    (82) termino1 -> ENTERO np_contieneID_Constante_Entero .

    OPMATRIZ        reduce using rule 82 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    PLUS            reduce using rule 82 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    MINUS           reduce using rule 82 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    MULTIPLY        reduce using rule 82 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    DIVIDE          reduce using rule 82 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    LOGIC           reduce using rule 82 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    RELOP           reduce using rule 82 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    SEMICOLON       reduce using rule 82 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    COMA            reduce using rule 82 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    CPAREN          reduce using rule 82 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    HAZ             reduce using rule 82 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    CCORCH          reduce using rule 82 (termino1 -> ENTERO np_contieneID_Constante_Entero .)


state 159

    (83) termino1 -> FLOTANTE np_contieneID_Constante_Flotante .

    OPMATRIZ        reduce using rule 83 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    PLUS            reduce using rule 83 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    MINUS           reduce using rule 83 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    MULTIPLY        reduce using rule 83 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    DIVIDE          reduce using rule 83 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    LOGIC           reduce using rule 83 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    RELOP           reduce using rule 83 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    SEMICOLON       reduce using rule 83 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    COMA            reduce using rule 83 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    CPAREN          reduce using rule 83 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    HAZ             reduce using rule 83 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    CCORCH          reduce using rule 83 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)


state 160

    (85) termino1 -> OPAREN np_insertarOperador . expresion CPAREN np_insertarOperador
    (71) expresion -> . expresion LOGIC np_insertarOperador expresion
    (72) expresion -> . expresion RELOP np_insertarOperador expresion
    (73) expresion -> . termino
    (74) termino -> . termino PLUS np_insertarOperador termino
    (75) termino -> . termino MINUS np_insertarOperador termino
    (76) termino -> . termino MULTIPLY np_insertarOperador termino
    (77) termino -> . termino DIVIDE np_insertarOperador termino
    (79) termino -> . termino1 OPMATRIZ np_insertarOperador
    (80) termino -> . termino1
    (81) termino1 -> . posibleID
    (82) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (83) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (84) termino1 -> . llamadaFuncion
    (85) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (86) termino1 -> . QUOT CARACTER QUOT
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB

    ENTERO          shift and go to state 118
    FLOTANTE        shift and go to state 119
    OPAREN          shift and go to state 121
    QUOT            shift and go to state 122
    ID              shift and go to state 123

    expresion                      shift and go to state 195
    termino                        shift and go to state 115
    termino1                       shift and go to state 116
    posibleID                      shift and go to state 117
    llamadaFuncion                 shift and go to state 120

state 161

    (86) termino1 -> QUOT CARACTER . QUOT

    QUOT            shift and go to state 196


state 162

    (96) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA . expresion HAZ OBRACKET estatutos CBRACKET
    (71) expresion -> . expresion LOGIC np_insertarOperador expresion
    (72) expresion -> . expresion RELOP np_insertarOperador expresion
    (73) expresion -> . termino
    (74) termino -> . termino PLUS np_insertarOperador termino
    (75) termino -> . termino MINUS np_insertarOperador termino
    (76) termino -> . termino MULTIPLY np_insertarOperador termino
    (77) termino -> . termino DIVIDE np_insertarOperador termino
    (79) termino -> . termino1 OPMATRIZ np_insertarOperador
    (80) termino -> . termino1
    (81) termino1 -> . posibleID
    (82) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (83) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (84) termino1 -> . llamadaFuncion
    (85) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (86) termino1 -> . QUOT CARACTER QUOT
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB

    ENTERO          shift and go to state 118
    FLOTANTE        shift and go to state 119
    OPAREN          shift and go to state 121
    QUOT            shift and go to state 122
    ID              shift and go to state 123

    expresion                      shift and go to state 197
    termino                        shift and go to state 115
    termino1                       shift and go to state 116
    posibleID                      shift and go to state 117
    llamadaFuncion                 shift and go to state 120

state 163

    (58) llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion OPAREN . paramsLlamada1 CPAREN np_goSUB
    (61) paramsLlamada1 -> . empty
    (62) paramsLlamada1 -> . paramsLlamada2
    (115) empty -> .
    (63) paramsLlamada2 -> . np_agregarFondo expresion np_quitarFondo np_resolverParam
    (64) paramsLlamada2 -> . np_agregarFondo expresion np_quitarFondo np_resolverParam COMA paramsLlamada2
    (112) np_agregarFondo -> .

    CPAREN          reduce using rule 115 (empty -> .)
    ENTERO          reduce using rule 112 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 112 (np_agregarFondo -> .)
    OPAREN          reduce using rule 112 (np_agregarFondo -> .)
    QUOT            reduce using rule 112 (np_agregarFondo -> .)
    ID              reduce using rule 112 (np_agregarFondo -> .)

    paramsLlamada1                 shift and go to state 198
    empty                          shift and go to state 199
    paramsLlamada2                 shift and go to state 200
    np_agregarFondo                shift and go to state 201

state 164

    (88) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH . np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH . np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (112) np_agregarFondo -> .

    ENTERO          reduce using rule 112 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 112 (np_agregarFondo -> .)
    OPAREN          reduce using rule 112 (np_agregarFondo -> .)
    QUOT            reduce using rule 112 (np_agregarFondo -> .)
    ID              reduce using rule 112 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 202

state 165

    (97) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp . expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (71) expresion -> . expresion LOGIC np_insertarOperador expresion
    (72) expresion -> . expresion RELOP np_insertarOperador expresion
    (73) expresion -> . termino
    (74) termino -> . termino PLUS np_insertarOperador termino
    (75) termino -> . termino MINUS np_insertarOperador termino
    (76) termino -> . termino MULTIPLY np_insertarOperador termino
    (77) termino -> . termino DIVIDE np_insertarOperador termino
    (79) termino -> . termino1 OPMATRIZ np_insertarOperador
    (80) termino -> . termino1
    (81) termino1 -> . posibleID
    (82) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (83) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (84) termino1 -> . llamadaFuncion
    (85) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (86) termino1 -> . QUOT CARACTER QUOT
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB

    ENTERO          shift and go to state 118
    FLOTANTE        shift and go to state 119
    OPAREN          shift and go to state 121
    QUOT            shift and go to state 122
    ID              shift and go to state 123

    expresion                      shift and go to state 203
    termino                        shift and go to state 115
    termino1                       shift and go to state 116
    posibleID                      shift and go to state 117
    llamadaFuncion                 shift and go to state 120

state 166

    (67) lectura -> LEE OPAREN posibleID lectura2 . CPAREN SEMICOLON

    CPAREN          shift and go to state 204


state 167

    (68) lectura2 -> empty .

    CPAREN          reduce using rule 68 (lectura2 -> empty .)


state 168

    (69) lectura2 -> COMA . posibleID lectura2
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    ID              shift and go to state 130

    posibleID                      shift and go to state 205

state 169

    (70) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador . np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (112) np_agregarFondo -> .

    ENTERO          reduce using rule 112 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 112 (np_agregarFondo -> .)
    OPAREN          reduce using rule 112 (np_agregarFondo -> .)
    QUOT            reduce using rule 112 (np_agregarFondo -> .)
    ID              reduce using rule 112 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 206

state 170

    (45) escritura -> ESCRIBE OPAREN escritura2 CPAREN . SEMICOLON

    SEMICOLON       shift and go to state 207


state 171

    (47) escritura2 -> posibleID escritura3 .

    CPAREN          reduce using rule 47 (escritura2 -> posibleID escritura3 .)


state 172

    (49) escritura3 -> empty .

    CPAREN          reduce using rule 49 (escritura3 -> empty .)


state 173

    (50) escritura3 -> COMA . expresion escritura3
    (51) escritura3 -> COMA . STRING escritura3
    (71) expresion -> . expresion LOGIC np_insertarOperador expresion
    (72) expresion -> . expresion RELOP np_insertarOperador expresion
    (73) expresion -> . termino
    (74) termino -> . termino PLUS np_insertarOperador termino
    (75) termino -> . termino MINUS np_insertarOperador termino
    (76) termino -> . termino MULTIPLY np_insertarOperador termino
    (77) termino -> . termino DIVIDE np_insertarOperador termino
    (79) termino -> . termino1 OPMATRIZ np_insertarOperador
    (80) termino -> . termino1
    (81) termino1 -> . posibleID
    (82) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (83) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (84) termino1 -> . llamadaFuncion
    (85) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (86) termino1 -> . QUOT CARACTER QUOT
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB

    STRING          shift and go to state 209
    ENTERO          shift and go to state 118
    FLOTANTE        shift and go to state 119
    OPAREN          shift and go to state 121
    QUOT            shift and go to state 122
    ID              shift and go to state 123

    expresion                      shift and go to state 208
    termino                        shift and go to state 115
    termino1                       shift and go to state 116
    posibleID                      shift and go to state 117
    llamadaFuncion                 shift and go to state 120

state 174

    (48) escritura2 -> STRING escritura3 .

    CPAREN          reduce using rule 48 (escritura2 -> STRING escritura3 .)


state 175

    (52) decision -> SI OPAREN np_agregarFondo expresion . np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> SI OPAREN np_agregarFondo expresion . np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (71) expresion -> expresion . LOGIC np_insertarOperador expresion
    (72) expresion -> expresion . RELOP np_insertarOperador expresion
    (113) np_quitarFondo -> .

    LOGIC           shift and go to state 151
    RELOP           shift and go to state 152
    CPAREN          reduce using rule 113 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 210

state 176

    (16) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN . declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (32) declaracionFuncionVariables -> . empty
    (33) declaracionFuncionVariables -> . declaracion
    (115) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2

    OBRACKET        reduce using rule 115 (empty -> .)
    VAR             shift and go to state 8

    declaracionFuncionVariables    shift and go to state 211
    empty                          shift and go to state 212
    declaracion                    shift and go to state 213

state 177

    (25) declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (90) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (91) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (92) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (93) np_updateCurrentDimension0 -> .
    (94) np_updateCurrentDimension1 -> .
    (95) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 93 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 93 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 93 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 94 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 95 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 214
    np_updateCurrentDimension0     shift and go to state 47
    np_updateCurrentDimension1     shift and go to state 48
    np_updateCurrentDimension2     shift and go to state 49

state 178

    (26) declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (90) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (91) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (92) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (93) np_updateCurrentDimension0 -> .
    (94) np_updateCurrentDimension1 -> .
    (95) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 93 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 93 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 93 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 94 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 95 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 215
    np_updateCurrentDimension0     shift and go to state 47
    np_updateCurrentDimension1     shift and go to state 48
    np_updateCurrentDimension2     shift and go to state 49

state 179

    (27) declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (90) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (91) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (92) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (93) np_updateCurrentDimension0 -> .
    (94) np_updateCurrentDimension1 -> .
    (95) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 93 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 93 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 93 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 94 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 95 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 216
    np_updateCurrentDimension0     shift and go to state 47
    np_updateCurrentDimension1     shift and go to state 48
    np_updateCurrentDimension2     shift and go to state 49

state 180

    (17) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN . declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (32) declaracionFuncionVariables -> . empty
    (33) declaracionFuncionVariables -> . declaracion
    (115) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2

    OBRACKET        reduce using rule 115 (empty -> .)
    VAR             shift and go to state 8

    declaracionFuncionVariables    shift and go to state 217
    empty                          shift and go to state 212
    declaracion                    shift and go to state 213

state 181

    (18) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro . declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (32) declaracionFuncionVariables -> . empty
    (33) declaracionFuncionVariables -> . declaracion
    (115) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2

    OBRACKET        reduce using rule 115 (empty -> .)
    VAR             shift and go to state 8

    declaracionFuncionVariables    shift and go to state 218
    empty                          shift and go to state 212
    declaracion                    shift and go to state 213

state 182

    (19) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro . declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc
    (32) declaracionFuncionVariables -> . empty
    (33) declaracionFuncionVariables -> . declaracion
    (115) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2

    OBRACKET        reduce using rule 115 (empty -> .)
    VAR             shift and go to state 8

    declaracionFuncionVariables    shift and go to state 219
    empty                          shift and go to state 212
    declaracion                    shift and go to state 213

state 183

    (14) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo . SEMICOLON
    (15) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo . COMA declaracion2

    SEMICOLON       shift and go to state 220
    COMA            shift and go to state 221


state 184

    (90) posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones .

    ASSIGN          reduce using rule 90 (posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones .)
    SEMICOLON       reduce using rule 90 (posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones .)
    COMA            reduce using rule 90 (posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones .)
    CPAREN          reduce using rule 90 (posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones .)


state 185

    (91) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones . OCORCH expresion CCORCH

    OCORCH          shift and go to state 222


state 186

    (92) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones . OCORCH expresion COMA expresion CCORCH

    OCORCH          shift and go to state 223


state 187

    (101) return -> REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON . np_return
    (103) np_return -> .

    CBRACKET        reduce using rule 103 (np_return -> .)

    np_return                      shift and go to state 224

state 188

    (71) expresion -> expresion LOGIC np_insertarOperador . expresion
    (71) expresion -> . expresion LOGIC np_insertarOperador expresion
    (72) expresion -> . expresion RELOP np_insertarOperador expresion
    (73) expresion -> . termino
    (74) termino -> . termino PLUS np_insertarOperador termino
    (75) termino -> . termino MINUS np_insertarOperador termino
    (76) termino -> . termino MULTIPLY np_insertarOperador termino
    (77) termino -> . termino DIVIDE np_insertarOperador termino
    (79) termino -> . termino1 OPMATRIZ np_insertarOperador
    (80) termino -> . termino1
    (81) termino1 -> . posibleID
    (82) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (83) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (84) termino1 -> . llamadaFuncion
    (85) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (86) termino1 -> . QUOT CARACTER QUOT
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB

    ENTERO          shift and go to state 118
    FLOTANTE        shift and go to state 119
    OPAREN          shift and go to state 121
    QUOT            shift and go to state 122
    ID              shift and go to state 123

    expresion                      shift and go to state 225
    termino                        shift and go to state 115
    termino1                       shift and go to state 116
    posibleID                      shift and go to state 117
    llamadaFuncion                 shift and go to state 120

state 189

    (72) expresion -> expresion RELOP np_insertarOperador . expresion
    (71) expresion -> . expresion LOGIC np_insertarOperador expresion
    (72) expresion -> . expresion RELOP np_insertarOperador expresion
    (73) expresion -> . termino
    (74) termino -> . termino PLUS np_insertarOperador termino
    (75) termino -> . termino MINUS np_insertarOperador termino
    (76) termino -> . termino MULTIPLY np_insertarOperador termino
    (77) termino -> . termino DIVIDE np_insertarOperador termino
    (79) termino -> . termino1 OPMATRIZ np_insertarOperador
    (80) termino -> . termino1
    (81) termino1 -> . posibleID
    (82) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (83) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (84) termino1 -> . llamadaFuncion
    (85) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (86) termino1 -> . QUOT CARACTER QUOT
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB

    ENTERO          shift and go to state 118
    FLOTANTE        shift and go to state 119
    OPAREN          shift and go to state 121
    QUOT            shift and go to state 122
    ID              shift and go to state 123

    expresion                      shift and go to state 226
    termino                        shift and go to state 115
    termino1                       shift and go to state 116
    posibleID                      shift and go to state 117
    llamadaFuncion                 shift and go to state 120

state 190

    (74) termino -> termino PLUS np_insertarOperador . termino
    (74) termino -> . termino PLUS np_insertarOperador termino
    (75) termino -> . termino MINUS np_insertarOperador termino
    (76) termino -> . termino MULTIPLY np_insertarOperador termino
    (77) termino -> . termino DIVIDE np_insertarOperador termino
    (79) termino -> . termino1 OPMATRIZ np_insertarOperador
    (80) termino -> . termino1
    (81) termino1 -> . posibleID
    (82) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (83) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (84) termino1 -> . llamadaFuncion
    (85) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (86) termino1 -> . QUOT CARACTER QUOT
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB

    ENTERO          shift and go to state 118
    FLOTANTE        shift and go to state 119
    OPAREN          shift and go to state 121
    QUOT            shift and go to state 122
    ID              shift and go to state 123

    termino                        shift and go to state 227
    termino1                       shift and go to state 116
    posibleID                      shift and go to state 117
    llamadaFuncion                 shift and go to state 120

state 191

    (75) termino -> termino MINUS np_insertarOperador . termino
    (74) termino -> . termino PLUS np_insertarOperador termino
    (75) termino -> . termino MINUS np_insertarOperador termino
    (76) termino -> . termino MULTIPLY np_insertarOperador termino
    (77) termino -> . termino DIVIDE np_insertarOperador termino
    (79) termino -> . termino1 OPMATRIZ np_insertarOperador
    (80) termino -> . termino1
    (81) termino1 -> . posibleID
    (82) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (83) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (84) termino1 -> . llamadaFuncion
    (85) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (86) termino1 -> . QUOT CARACTER QUOT
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB

    ENTERO          shift and go to state 118
    FLOTANTE        shift and go to state 119
    OPAREN          shift and go to state 121
    QUOT            shift and go to state 122
    ID              shift and go to state 123

    termino                        shift and go to state 228
    termino1                       shift and go to state 116
    posibleID                      shift and go to state 117
    llamadaFuncion                 shift and go to state 120

state 192

    (76) termino -> termino MULTIPLY np_insertarOperador . termino
    (74) termino -> . termino PLUS np_insertarOperador termino
    (75) termino -> . termino MINUS np_insertarOperador termino
    (76) termino -> . termino MULTIPLY np_insertarOperador termino
    (77) termino -> . termino DIVIDE np_insertarOperador termino
    (79) termino -> . termino1 OPMATRIZ np_insertarOperador
    (80) termino -> . termino1
    (81) termino1 -> . posibleID
    (82) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (83) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (84) termino1 -> . llamadaFuncion
    (85) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (86) termino1 -> . QUOT CARACTER QUOT
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB

    ENTERO          shift and go to state 118
    FLOTANTE        shift and go to state 119
    OPAREN          shift and go to state 121
    QUOT            shift and go to state 122
    ID              shift and go to state 123

    termino                        shift and go to state 229
    termino1                       shift and go to state 116
    posibleID                      shift and go to state 117
    llamadaFuncion                 shift and go to state 120

state 193

    (77) termino -> termino DIVIDE np_insertarOperador . termino
    (74) termino -> . termino PLUS np_insertarOperador termino
    (75) termino -> . termino MINUS np_insertarOperador termino
    (76) termino -> . termino MULTIPLY np_insertarOperador termino
    (77) termino -> . termino DIVIDE np_insertarOperador termino
    (79) termino -> . termino1 OPMATRIZ np_insertarOperador
    (80) termino -> . termino1
    (81) termino1 -> . posibleID
    (82) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (83) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (84) termino1 -> . llamadaFuncion
    (85) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (86) termino1 -> . QUOT CARACTER QUOT
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB

    ENTERO          shift and go to state 118
    FLOTANTE        shift and go to state 119
    OPAREN          shift and go to state 121
    QUOT            shift and go to state 122
    ID              shift and go to state 123

    termino                        shift and go to state 230
    termino1                       shift and go to state 116
    posibleID                      shift and go to state 117
    llamadaFuncion                 shift and go to state 120

state 194

    (79) termino -> termino1 OPMATRIZ np_insertarOperador .

    PLUS            reduce using rule 79 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    MINUS           reduce using rule 79 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    MULTIPLY        reduce using rule 79 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    DIVIDE          reduce using rule 79 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    LOGIC           reduce using rule 79 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    RELOP           reduce using rule 79 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    SEMICOLON       reduce using rule 79 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    COMA            reduce using rule 79 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    CPAREN          reduce using rule 79 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    HAZ             reduce using rule 79 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    CCORCH          reduce using rule 79 (termino -> termino1 OPMATRIZ np_insertarOperador .)


state 195

    (85) termino1 -> OPAREN np_insertarOperador expresion . CPAREN np_insertarOperador
    (71) expresion -> expresion . LOGIC np_insertarOperador expresion
    (72) expresion -> expresion . RELOP np_insertarOperador expresion

    CPAREN          shift and go to state 231
    LOGIC           shift and go to state 151
    RELOP           shift and go to state 152


state 196

    (86) termino1 -> QUOT CARACTER QUOT .

    OPMATRIZ        reduce using rule 86 (termino1 -> QUOT CARACTER QUOT .)
    PLUS            reduce using rule 86 (termino1 -> QUOT CARACTER QUOT .)
    MINUS           reduce using rule 86 (termino1 -> QUOT CARACTER QUOT .)
    MULTIPLY        reduce using rule 86 (termino1 -> QUOT CARACTER QUOT .)
    DIVIDE          reduce using rule 86 (termino1 -> QUOT CARACTER QUOT .)
    LOGIC           reduce using rule 86 (termino1 -> QUOT CARACTER QUOT .)
    RELOP           reduce using rule 86 (termino1 -> QUOT CARACTER QUOT .)
    SEMICOLON       reduce using rule 86 (termino1 -> QUOT CARACTER QUOT .)
    COMA            reduce using rule 86 (termino1 -> QUOT CARACTER QUOT .)
    CPAREN          reduce using rule 86 (termino1 -> QUOT CARACTER QUOT .)
    HAZ             reduce using rule 86 (termino1 -> QUOT CARACTER QUOT .)
    CCORCH          reduce using rule 86 (termino1 -> QUOT CARACTER QUOT .)


state 197

    (96) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion . HAZ OBRACKET estatutos CBRACKET
    (71) expresion -> expresion . LOGIC np_insertarOperador expresion
    (72) expresion -> expresion . RELOP np_insertarOperador expresion

    HAZ             shift and go to state 232
    LOGIC           shift and go to state 151
    RELOP           shift and go to state 152


state 198

    (58) llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 . CPAREN np_goSUB

    CPAREN          shift and go to state 233


state 199

    (61) paramsLlamada1 -> empty .

    CPAREN          reduce using rule 61 (paramsLlamada1 -> empty .)


state 200

    (62) paramsLlamada1 -> paramsLlamada2 .

    CPAREN          reduce using rule 62 (paramsLlamada1 -> paramsLlamada2 .)


state 201

    (63) paramsLlamada2 -> np_agregarFondo . expresion np_quitarFondo np_resolverParam
    (64) paramsLlamada2 -> np_agregarFondo . expresion np_quitarFondo np_resolverParam COMA paramsLlamada2
    (71) expresion -> . expresion LOGIC np_insertarOperador expresion
    (72) expresion -> . expresion RELOP np_insertarOperador expresion
    (73) expresion -> . termino
    (74) termino -> . termino PLUS np_insertarOperador termino
    (75) termino -> . termino MINUS np_insertarOperador termino
    (76) termino -> . termino MULTIPLY np_insertarOperador termino
    (77) termino -> . termino DIVIDE np_insertarOperador termino
    (79) termino -> . termino1 OPMATRIZ np_insertarOperador
    (80) termino -> . termino1
    (81) termino1 -> . posibleID
    (82) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (83) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (84) termino1 -> . llamadaFuncion
    (85) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (86) termino1 -> . QUOT CARACTER QUOT
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB

    ENTERO          shift and go to state 118
    FLOTANTE        shift and go to state 119
    OPAREN          shift and go to state 121
    QUOT            shift and go to state 122
    ID              shift and go to state 123

    expresion                      shift and go to state 234
    termino                        shift and go to state 115
    termino1                       shift and go to state 116
    posibleID                      shift and go to state 117
    llamadaFuncion                 shift and go to state 120

state 202

    (88) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo . expresion np_quitarFondo CCORCH
    (89) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo . expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (71) expresion -> . expresion LOGIC np_insertarOperador expresion
    (72) expresion -> . expresion RELOP np_insertarOperador expresion
    (73) expresion -> . termino
    (74) termino -> . termino PLUS np_insertarOperador termino
    (75) termino -> . termino MINUS np_insertarOperador termino
    (76) termino -> . termino MULTIPLY np_insertarOperador termino
    (77) termino -> . termino DIVIDE np_insertarOperador termino
    (79) termino -> . termino1 OPMATRIZ np_insertarOperador
    (80) termino -> . termino1
    (81) termino1 -> . posibleID
    (82) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (83) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (84) termino1 -> . llamadaFuncion
    (85) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (86) termino1 -> . QUOT CARACTER QUOT
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB

    ENTERO          shift and go to state 118
    FLOTANTE        shift and go to state 119
    OPAREN          shift and go to state 121
    QUOT            shift and go to state 122
    ID              shift and go to state 123

    expresion                      shift and go to state 235
    termino                        shift and go to state 115
    termino1                       shift and go to state 116
    posibleID                      shift and go to state 117
    llamadaFuncion                 shift and go to state 120

state 203

    (97) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion . np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (71) expresion -> expresion . LOGIC np_insertarOperador expresion
    (72) expresion -> expresion . RELOP np_insertarOperador expresion
    (113) np_quitarFondo -> .

    LOGIC           shift and go to state 151
    RELOP           shift and go to state 152
    CPAREN          reduce using rule 113 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 236

state 204

    (67) lectura -> LEE OPAREN posibleID lectura2 CPAREN . SEMICOLON

    SEMICOLON       shift and go to state 237


state 205

    (69) lectura2 -> COMA posibleID . lectura2
    (68) lectura2 -> . empty
    (69) lectura2 -> . COMA posibleID lectura2
    (115) empty -> .

    COMA            shift and go to state 168
    CPAREN          reduce using rule 115 (empty -> .)

    lectura2                       shift and go to state 238
    empty                          shift and go to state 167

state 206

    (70) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo . expresion np_quitarFondo np_quitarFondo SEMICOLON
    (71) expresion -> . expresion LOGIC np_insertarOperador expresion
    (72) expresion -> . expresion RELOP np_insertarOperador expresion
    (73) expresion -> . termino
    (74) termino -> . termino PLUS np_insertarOperador termino
    (75) termino -> . termino MINUS np_insertarOperador termino
    (76) termino -> . termino MULTIPLY np_insertarOperador termino
    (77) termino -> . termino DIVIDE np_insertarOperador termino
    (79) termino -> . termino1 OPMATRIZ np_insertarOperador
    (80) termino -> . termino1
    (81) termino1 -> . posibleID
    (82) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (83) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (84) termino1 -> . llamadaFuncion
    (85) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (86) termino1 -> . QUOT CARACTER QUOT
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB

    ENTERO          shift and go to state 118
    FLOTANTE        shift and go to state 119
    OPAREN          shift and go to state 121
    QUOT            shift and go to state 122
    ID              shift and go to state 123

    posibleID                      shift and go to state 117
    expresion                      shift and go to state 239
    termino                        shift and go to state 115
    termino1                       shift and go to state 116
    llamadaFuncion                 shift and go to state 120

state 207

    (45) escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .

    REGRESA         reduce using rule 45 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    VAR             reduce using rule 45 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    DESDE           reduce using rule 45 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 45 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    LEE             reduce using rule 45 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 45 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    SI              reduce using rule 45 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    ID              reduce using rule 45 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    CBRACKET        reduce using rule 45 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)


state 208

    (50) escritura3 -> COMA expresion . escritura3
    (71) expresion -> expresion . LOGIC np_insertarOperador expresion
    (72) expresion -> expresion . RELOP np_insertarOperador expresion
    (49) escritura3 -> . empty
    (50) escritura3 -> . COMA expresion escritura3
    (51) escritura3 -> . COMA STRING escritura3
    (115) empty -> .

    LOGIC           shift and go to state 151
    RELOP           shift and go to state 152
    COMA            shift and go to state 173
    CPAREN          reduce using rule 115 (empty -> .)

    escritura3                     shift and go to state 240
    empty                          shift and go to state 172

state 209

    (51) escritura3 -> COMA STRING . escritura3
    (49) escritura3 -> . empty
    (50) escritura3 -> . COMA expresion escritura3
    (51) escritura3 -> . COMA STRING escritura3
    (115) empty -> .

    COMA            shift and go to state 173
    CPAREN          reduce using rule 115 (empty -> .)

    escritura3                     shift and go to state 241
    empty                          shift and go to state 172

state 210

    (52) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo . np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo . np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (54) np_iniciaIf -> .

    CPAREN          reduce using rule 54 (np_iniciaIf -> .)

    np_iniciaIf                    shift and go to state 242

state 211

    (16) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables . OBRACKET estatutos CBRACKET np_endFunc

    OBRACKET        shift and go to state 243


state 212

    (32) declaracionFuncionVariables -> empty .

    OBRACKET        reduce using rule 32 (declaracionFuncionVariables -> empty .)


state 213

    (33) declaracionFuncionVariables -> declaracion .

    OBRACKET        reduce using rule 33 (declaracionFuncionVariables -> declaracion .)


state 214

    (25) declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (113) np_quitarFondo -> .

    COMA            reduce using rule 113 (np_quitarFondo -> .)
    CPAREN          reduce using rule 113 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 244

state 215

    (26) declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (113) np_quitarFondo -> .

    COMA            reduce using rule 113 (np_quitarFondo -> .)
    CPAREN          reduce using rule 113 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 245

state 216

    (27) declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (113) np_quitarFondo -> .

    COMA            reduce using rule 113 (np_quitarFondo -> .)
    CPAREN          reduce using rule 113 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 246

state 217

    (17) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables . OBRACKET estatutos CBRACKET np_endFunc

    OBRACKET        shift and go to state 247


state 218

    (18) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables . OBRACKET estatutos CBRACKET np_endFunc

    OBRACKET        shift and go to state 248


state 219

    (19) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables . OBRACKET estatutos CBRACKET np_endFunc

    OBRACKET        shift and go to state 249


state 220

    (14) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .

    VAR             reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    FUNCION         reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    REGRESA         reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    DESDE           reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    MIENTRAS        reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    LEE             reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    ESCRIBE         reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    SI              reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    ID              reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    CBRACKET        reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    OBRACKET        reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)


state 221

    (15) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA . declaracion2
    (11) declaracion2 -> . np_agregarFondo posibleIDDeclaracion declaracion3
    (112) np_agregarFondo -> .

    ID              reduce using rule 112 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 250
    np_agregarFondo                shift and go to state 38

state 222

    (91) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH . expresion CCORCH
    (71) expresion -> . expresion LOGIC np_insertarOperador expresion
    (72) expresion -> . expresion RELOP np_insertarOperador expresion
    (73) expresion -> . termino
    (74) termino -> . termino PLUS np_insertarOperador termino
    (75) termino -> . termino MINUS np_insertarOperador termino
    (76) termino -> . termino MULTIPLY np_insertarOperador termino
    (77) termino -> . termino DIVIDE np_insertarOperador termino
    (79) termino -> . termino1 OPMATRIZ np_insertarOperador
    (80) termino -> . termino1
    (81) termino1 -> . posibleID
    (82) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (83) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (84) termino1 -> . llamadaFuncion
    (85) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (86) termino1 -> . QUOT CARACTER QUOT
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB

    ENTERO          shift and go to state 118
    FLOTANTE        shift and go to state 119
    OPAREN          shift and go to state 121
    QUOT            shift and go to state 122
    ID              shift and go to state 123

    expresion                      shift and go to state 251
    termino                        shift and go to state 115
    termino1                       shift and go to state 116
    posibleID                      shift and go to state 117
    llamadaFuncion                 shift and go to state 120

state 223

    (92) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH . expresion COMA expresion CCORCH
    (71) expresion -> . expresion LOGIC np_insertarOperador expresion
    (72) expresion -> . expresion RELOP np_insertarOperador expresion
    (73) expresion -> . termino
    (74) termino -> . termino PLUS np_insertarOperador termino
    (75) termino -> . termino MINUS np_insertarOperador termino
    (76) termino -> . termino MULTIPLY np_insertarOperador termino
    (77) termino -> . termino DIVIDE np_insertarOperador termino
    (79) termino -> . termino1 OPMATRIZ np_insertarOperador
    (80) termino -> . termino1
    (81) termino1 -> . posibleID
    (82) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (83) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (84) termino1 -> . llamadaFuncion
    (85) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (86) termino1 -> . QUOT CARACTER QUOT
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB

    ENTERO          shift and go to state 118
    FLOTANTE        shift and go to state 119
    OPAREN          shift and go to state 121
    QUOT            shift and go to state 122
    ID              shift and go to state 123

    expresion                      shift and go to state 252
    termino                        shift and go to state 115
    termino1                       shift and go to state 116
    posibleID                      shift and go to state 117
    llamadaFuncion                 shift and go to state 120

state 224

    (101) return -> REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return .

    CBRACKET        reduce using rule 101 (return -> REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return .)


state 225

    (71) expresion -> expresion LOGIC np_insertarOperador expresion .
    (71) expresion -> expresion . LOGIC np_insertarOperador expresion
    (72) expresion -> expresion . RELOP np_insertarOperador expresion

  ! shift/reduce conflict for LOGIC resolved as shift
  ! shift/reduce conflict for RELOP resolved as shift
    SEMICOLON       reduce using rule 71 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    COMA            reduce using rule 71 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    CPAREN          reduce using rule 71 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    HAZ             reduce using rule 71 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    CCORCH          reduce using rule 71 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    LOGIC           shift and go to state 151
    RELOP           shift and go to state 152

  ! LOGIC           [ reduce using rule 71 (expresion -> expresion LOGIC np_insertarOperador expresion .) ]
  ! RELOP           [ reduce using rule 71 (expresion -> expresion LOGIC np_insertarOperador expresion .) ]


state 226

    (72) expresion -> expresion RELOP np_insertarOperador expresion .
    (71) expresion -> expresion . LOGIC np_insertarOperador expresion
    (72) expresion -> expresion . RELOP np_insertarOperador expresion

  ! shift/reduce conflict for LOGIC resolved as shift
  ! shift/reduce conflict for RELOP resolved as shift
    SEMICOLON       reduce using rule 72 (expresion -> expresion RELOP np_insertarOperador expresion .)
    COMA            reduce using rule 72 (expresion -> expresion RELOP np_insertarOperador expresion .)
    CPAREN          reduce using rule 72 (expresion -> expresion RELOP np_insertarOperador expresion .)
    HAZ             reduce using rule 72 (expresion -> expresion RELOP np_insertarOperador expresion .)
    CCORCH          reduce using rule 72 (expresion -> expresion RELOP np_insertarOperador expresion .)
    LOGIC           shift and go to state 151
    RELOP           shift and go to state 152

  ! LOGIC           [ reduce using rule 72 (expresion -> expresion RELOP np_insertarOperador expresion .) ]
  ! RELOP           [ reduce using rule 72 (expresion -> expresion RELOP np_insertarOperador expresion .) ]


state 227

    (74) termino -> termino PLUS np_insertarOperador termino .
    (74) termino -> termino . PLUS np_insertarOperador termino
    (75) termino -> termino . MINUS np_insertarOperador termino
    (76) termino -> termino . MULTIPLY np_insertarOperador termino
    (77) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 74 (termino -> termino PLUS np_insertarOperador termino .)
    MINUS           reduce using rule 74 (termino -> termino PLUS np_insertarOperador termino .)
    LOGIC           reduce using rule 74 (termino -> termino PLUS np_insertarOperador termino .)
    RELOP           reduce using rule 74 (termino -> termino PLUS np_insertarOperador termino .)
    SEMICOLON       reduce using rule 74 (termino -> termino PLUS np_insertarOperador termino .)
    COMA            reduce using rule 74 (termino -> termino PLUS np_insertarOperador termino .)
    CPAREN          reduce using rule 74 (termino -> termino PLUS np_insertarOperador termino .)
    HAZ             reduce using rule 74 (termino -> termino PLUS np_insertarOperador termino .)
    CCORCH          reduce using rule 74 (termino -> termino PLUS np_insertarOperador termino .)
    MULTIPLY        shift and go to state 155
    DIVIDE          shift and go to state 156

  ! MULTIPLY        [ reduce using rule 74 (termino -> termino PLUS np_insertarOperador termino .) ]
  ! DIVIDE          [ reduce using rule 74 (termino -> termino PLUS np_insertarOperador termino .) ]
  ! PLUS            [ shift and go to state 153 ]
  ! MINUS           [ shift and go to state 154 ]


state 228

    (75) termino -> termino MINUS np_insertarOperador termino .
    (74) termino -> termino . PLUS np_insertarOperador termino
    (75) termino -> termino . MINUS np_insertarOperador termino
    (76) termino -> termino . MULTIPLY np_insertarOperador termino
    (77) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 75 (termino -> termino MINUS np_insertarOperador termino .)
    MINUS           reduce using rule 75 (termino -> termino MINUS np_insertarOperador termino .)
    LOGIC           reduce using rule 75 (termino -> termino MINUS np_insertarOperador termino .)
    RELOP           reduce using rule 75 (termino -> termino MINUS np_insertarOperador termino .)
    SEMICOLON       reduce using rule 75 (termino -> termino MINUS np_insertarOperador termino .)
    COMA            reduce using rule 75 (termino -> termino MINUS np_insertarOperador termino .)
    CPAREN          reduce using rule 75 (termino -> termino MINUS np_insertarOperador termino .)
    HAZ             reduce using rule 75 (termino -> termino MINUS np_insertarOperador termino .)
    CCORCH          reduce using rule 75 (termino -> termino MINUS np_insertarOperador termino .)
    MULTIPLY        shift and go to state 155
    DIVIDE          shift and go to state 156

  ! MULTIPLY        [ reduce using rule 75 (termino -> termino MINUS np_insertarOperador termino .) ]
  ! DIVIDE          [ reduce using rule 75 (termino -> termino MINUS np_insertarOperador termino .) ]
  ! PLUS            [ shift and go to state 153 ]
  ! MINUS           [ shift and go to state 154 ]


state 229

    (76) termino -> termino MULTIPLY np_insertarOperador termino .
    (74) termino -> termino . PLUS np_insertarOperador termino
    (75) termino -> termino . MINUS np_insertarOperador termino
    (76) termino -> termino . MULTIPLY np_insertarOperador termino
    (77) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 76 (termino -> termino MULTIPLY np_insertarOperador termino .)
    MINUS           reduce using rule 76 (termino -> termino MULTIPLY np_insertarOperador termino .)
    MULTIPLY        reduce using rule 76 (termino -> termino MULTIPLY np_insertarOperador termino .)
    DIVIDE          reduce using rule 76 (termino -> termino MULTIPLY np_insertarOperador termino .)
    LOGIC           reduce using rule 76 (termino -> termino MULTIPLY np_insertarOperador termino .)
    RELOP           reduce using rule 76 (termino -> termino MULTIPLY np_insertarOperador termino .)
    SEMICOLON       reduce using rule 76 (termino -> termino MULTIPLY np_insertarOperador termino .)
    COMA            reduce using rule 76 (termino -> termino MULTIPLY np_insertarOperador termino .)
    CPAREN          reduce using rule 76 (termino -> termino MULTIPLY np_insertarOperador termino .)
    HAZ             reduce using rule 76 (termino -> termino MULTIPLY np_insertarOperador termino .)
    CCORCH          reduce using rule 76 (termino -> termino MULTIPLY np_insertarOperador termino .)

  ! PLUS            [ shift and go to state 153 ]
  ! MINUS           [ shift and go to state 154 ]
  ! MULTIPLY        [ shift and go to state 155 ]
  ! DIVIDE          [ shift and go to state 156 ]


state 230

    (77) termino -> termino DIVIDE np_insertarOperador termino .
    (74) termino -> termino . PLUS np_insertarOperador termino
    (75) termino -> termino . MINUS np_insertarOperador termino
    (76) termino -> termino . MULTIPLY np_insertarOperador termino
    (77) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 77 (termino -> termino DIVIDE np_insertarOperador termino .)
    MINUS           reduce using rule 77 (termino -> termino DIVIDE np_insertarOperador termino .)
    MULTIPLY        reduce using rule 77 (termino -> termino DIVIDE np_insertarOperador termino .)
    DIVIDE          reduce using rule 77 (termino -> termino DIVIDE np_insertarOperador termino .)
    LOGIC           reduce using rule 77 (termino -> termino DIVIDE np_insertarOperador termino .)
    RELOP           reduce using rule 77 (termino -> termino DIVIDE np_insertarOperador termino .)
    SEMICOLON       reduce using rule 77 (termino -> termino DIVIDE np_insertarOperador termino .)
    COMA            reduce using rule 77 (termino -> termino DIVIDE np_insertarOperador termino .)
    CPAREN          reduce using rule 77 (termino -> termino DIVIDE np_insertarOperador termino .)
    HAZ             reduce using rule 77 (termino -> termino DIVIDE np_insertarOperador termino .)
    CCORCH          reduce using rule 77 (termino -> termino DIVIDE np_insertarOperador termino .)

  ! PLUS            [ shift and go to state 153 ]
  ! MINUS           [ shift and go to state 154 ]
  ! MULTIPLY        [ shift and go to state 155 ]
  ! DIVIDE          [ shift and go to state 156 ]


state 231

    (85) termino1 -> OPAREN np_insertarOperador expresion CPAREN . np_insertarOperador
    (78) np_insertarOperador -> .

    OPMATRIZ        reduce using rule 78 (np_insertarOperador -> .)
    PLUS            reduce using rule 78 (np_insertarOperador -> .)
    MINUS           reduce using rule 78 (np_insertarOperador -> .)
    MULTIPLY        reduce using rule 78 (np_insertarOperador -> .)
    DIVIDE          reduce using rule 78 (np_insertarOperador -> .)
    LOGIC           reduce using rule 78 (np_insertarOperador -> .)
    RELOP           reduce using rule 78 (np_insertarOperador -> .)
    SEMICOLON       reduce using rule 78 (np_insertarOperador -> .)
    COMA            reduce using rule 78 (np_insertarOperador -> .)
    CPAREN          reduce using rule 78 (np_insertarOperador -> .)
    HAZ             reduce using rule 78 (np_insertarOperador -> .)
    CCORCH          reduce using rule 78 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 253

state 232

    (96) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ . OBRACKET estatutos CBRACKET

    OBRACKET        shift and go to state 254


state 233

    (58) llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN . np_goSUB
    (66) np_goSUB -> .

    SEMICOLON       reduce using rule 66 (np_goSUB -> .)
    OPMATRIZ        reduce using rule 66 (np_goSUB -> .)
    PLUS            reduce using rule 66 (np_goSUB -> .)
    MINUS           reduce using rule 66 (np_goSUB -> .)
    MULTIPLY        reduce using rule 66 (np_goSUB -> .)
    DIVIDE          reduce using rule 66 (np_goSUB -> .)
    LOGIC           reduce using rule 66 (np_goSUB -> .)
    RELOP           reduce using rule 66 (np_goSUB -> .)
    COMA            reduce using rule 66 (np_goSUB -> .)
    CPAREN          reduce using rule 66 (np_goSUB -> .)
    HAZ             reduce using rule 66 (np_goSUB -> .)
    CCORCH          reduce using rule 66 (np_goSUB -> .)

    np_goSUB                       shift and go to state 255

state 234

    (63) paramsLlamada2 -> np_agregarFondo expresion . np_quitarFondo np_resolverParam
    (64) paramsLlamada2 -> np_agregarFondo expresion . np_quitarFondo np_resolverParam COMA paramsLlamada2
    (71) expresion -> expresion . LOGIC np_insertarOperador expresion
    (72) expresion -> expresion . RELOP np_insertarOperador expresion
    (113) np_quitarFondo -> .

    LOGIC           shift and go to state 151
    RELOP           shift and go to state 152
    COMA            reduce using rule 113 (np_quitarFondo -> .)
    CPAREN          reduce using rule 113 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 256

state 235

    (88) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion . np_quitarFondo CCORCH
    (89) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion . np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (71) expresion -> expresion . LOGIC np_insertarOperador expresion
    (72) expresion -> expresion . RELOP np_insertarOperador expresion
    (113) np_quitarFondo -> .

    LOGIC           shift and go to state 151
    RELOP           shift and go to state 152
    CCORCH          reduce using rule 113 (np_quitarFondo -> .)
    COMA            reduce using rule 113 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 257

state 236

    (97) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo . CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina

    CPAREN          shift and go to state 258


state 237

    (67) lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .

    REGRESA         reduce using rule 67 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    VAR             reduce using rule 67 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    DESDE           reduce using rule 67 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 67 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    LEE             reduce using rule 67 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 67 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    SI              reduce using rule 67 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    ID              reduce using rule 67 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    CBRACKET        reduce using rule 67 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)


state 238

    (69) lectura2 -> COMA posibleID lectura2 .

    CPAREN          reduce using rule 69 (lectura2 -> COMA posibleID lectura2 .)


state 239

    (70) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion . np_quitarFondo np_quitarFondo SEMICOLON
    (71) expresion -> expresion . LOGIC np_insertarOperador expresion
    (72) expresion -> expresion . RELOP np_insertarOperador expresion
    (113) np_quitarFondo -> .

    LOGIC           shift and go to state 151
    RELOP           shift and go to state 152
    SEMICOLON       reduce using rule 113 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 259

state 240

    (50) escritura3 -> COMA expresion escritura3 .

    CPAREN          reduce using rule 50 (escritura3 -> COMA expresion escritura3 .)


state 241

    (51) escritura3 -> COMA STRING escritura3 .

    CPAREN          reduce using rule 51 (escritura3 -> COMA STRING escritura3 .)


state 242

    (52) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf . CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf . CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf

    CPAREN          shift and go to state 260


state 243

    (16) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET . estatutos CBRACKET np_endFunc
    (35) estatutos -> . return
    (36) estatutos -> . empty
    (37) estatutos -> . declaracion estatutos
    (38) estatutos -> . estatutoRepeticionIncondicional estatutos
    (39) estatutos -> . estatutoRepeticionCondicional estatutos
    (40) estatutos -> . lectura estatutos
    (41) estatutos -> . asignacion estatutos
    (42) estatutos -> . escritura estatutos
    (43) estatutos -> . decision estatutos
    (44) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (102) return -> . REGRESA SEMICOLON np_returnVOID
    (115) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (96) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (97) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (67) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (70) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (45) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (52) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 115 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 261
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 244

    (25) declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (28) declaracionFuncionParametros2 -> . empty
    (29) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (30) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (31) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (115) empty -> .

    COMA            shift and go to state 264
    CPAREN          reduce using rule 115 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 262
    empty                          shift and go to state 263

state 245

    (26) declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (28) declaracionFuncionParametros2 -> . empty
    (29) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (30) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (31) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (115) empty -> .

    COMA            shift and go to state 264
    CPAREN          reduce using rule 115 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 265
    empty                          shift and go to state 263

state 246

    (27) declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (28) declaracionFuncionParametros2 -> . empty
    (29) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (30) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (31) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (115) empty -> .

    COMA            shift and go to state 264
    CPAREN          reduce using rule 115 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 266
    empty                          shift and go to state 263

state 247

    (17) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET . estatutos CBRACKET np_endFunc
    (35) estatutos -> . return
    (36) estatutos -> . empty
    (37) estatutos -> . declaracion estatutos
    (38) estatutos -> . estatutoRepeticionIncondicional estatutos
    (39) estatutos -> . estatutoRepeticionCondicional estatutos
    (40) estatutos -> . lectura estatutos
    (41) estatutos -> . asignacion estatutos
    (42) estatutos -> . escritura estatutos
    (43) estatutos -> . decision estatutos
    (44) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (102) return -> . REGRESA SEMICOLON np_returnVOID
    (115) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (96) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (97) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (67) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (70) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (45) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (52) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 115 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 267
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 248

    (18) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET . estatutos CBRACKET np_endFunc
    (35) estatutos -> . return
    (36) estatutos -> . empty
    (37) estatutos -> . declaracion estatutos
    (38) estatutos -> . estatutoRepeticionIncondicional estatutos
    (39) estatutos -> . estatutoRepeticionCondicional estatutos
    (40) estatutos -> . lectura estatutos
    (41) estatutos -> . asignacion estatutos
    (42) estatutos -> . escritura estatutos
    (43) estatutos -> . decision estatutos
    (44) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (102) return -> . REGRESA SEMICOLON np_returnVOID
    (115) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (96) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (97) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (67) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (70) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (45) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (52) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 115 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 268
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 249

    (19) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET . estatutos CBRACKET np_endFunc
    (35) estatutos -> . return
    (36) estatutos -> . empty
    (37) estatutos -> . declaracion estatutos
    (38) estatutos -> . estatutoRepeticionIncondicional estatutos
    (39) estatutos -> . estatutoRepeticionCondicional estatutos
    (40) estatutos -> . lectura estatutos
    (41) estatutos -> . asignacion estatutos
    (42) estatutos -> . escritura estatutos
    (43) estatutos -> . decision estatutos
    (44) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (102) return -> . REGRESA SEMICOLON np_returnVOID
    (115) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (96) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (97) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (67) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (70) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (45) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (52) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 115 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 269
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 250

    (15) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .

    VAR             reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    FUNCION         reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    REGRESA         reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    DESDE           reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    MIENTRAS        reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    LEE             reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    ESCRIBE         reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    SI              reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    ID              reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    CBRACKET        reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    OBRACKET        reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)


state 251

    (91) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion . CCORCH
    (71) expresion -> expresion . LOGIC np_insertarOperador expresion
    (72) expresion -> expresion . RELOP np_insertarOperador expresion

    CCORCH          shift and go to state 270
    LOGIC           shift and go to state 151
    RELOP           shift and go to state 152


state 252

    (92) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion . COMA expresion CCORCH
    (71) expresion -> expresion . LOGIC np_insertarOperador expresion
    (72) expresion -> expresion . RELOP np_insertarOperador expresion

    COMA            shift and go to state 271
    LOGIC           shift and go to state 151
    RELOP           shift and go to state 152


state 253

    (85) termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .

    OPMATRIZ        reduce using rule 85 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    PLUS            reduce using rule 85 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    MINUS           reduce using rule 85 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    MULTIPLY        reduce using rule 85 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    DIVIDE          reduce using rule 85 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    LOGIC           reduce using rule 85 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    RELOP           reduce using rule 85 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    SEMICOLON       reduce using rule 85 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    COMA            reduce using rule 85 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    CPAREN          reduce using rule 85 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    HAZ             reduce using rule 85 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    CCORCH          reduce using rule 85 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)


state 254

    (96) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET . estatutos CBRACKET
    (35) estatutos -> . return
    (36) estatutos -> . empty
    (37) estatutos -> . declaracion estatutos
    (38) estatutos -> . estatutoRepeticionIncondicional estatutos
    (39) estatutos -> . estatutoRepeticionCondicional estatutos
    (40) estatutos -> . lectura estatutos
    (41) estatutos -> . asignacion estatutos
    (42) estatutos -> . escritura estatutos
    (43) estatutos -> . decision estatutos
    (44) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (102) return -> . REGRESA SEMICOLON np_returnVOID
    (115) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (96) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (97) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (67) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (70) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (45) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (52) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 115 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 272
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 255

    (58) llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB .

    SEMICOLON       reduce using rule 58 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB .)
    OPMATRIZ        reduce using rule 58 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB .)
    PLUS            reduce using rule 58 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB .)
    MINUS           reduce using rule 58 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB .)
    MULTIPLY        reduce using rule 58 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB .)
    DIVIDE          reduce using rule 58 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB .)
    LOGIC           reduce using rule 58 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB .)
    RELOP           reduce using rule 58 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB .)
    COMA            reduce using rule 58 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB .)
    CPAREN          reduce using rule 58 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB .)
    HAZ             reduce using rule 58 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB .)
    CCORCH          reduce using rule 58 (llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB .)


state 256

    (63) paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo . np_resolverParam
    (64) paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo . np_resolverParam COMA paramsLlamada2
    (65) np_resolverParam -> .

    COMA            reduce using rule 65 (np_resolverParam -> .)
    CPAREN          reduce using rule 65 (np_resolverParam -> .)

    np_resolverParam               shift and go to state 273

state 257

    (88) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo . CCORCH
    (89) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo . COMA np_agregarFondo expresion np_quitarFondo CCORCH

    CCORCH          shift and go to state 274
    COMA            shift and go to state 275


state 258

    (97) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN . HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina

    HAZ             shift and go to state 276


state 259

    (70) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo . np_quitarFondo SEMICOLON
    (113) np_quitarFondo -> .

    SEMICOLON       reduce using rule 113 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 277

state 260

    (52) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN . ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN . ENTONCES OBRACKET estatutos CBRACKET np_terminaIf

    ENTONCES        shift and go to state 278


state 261

    (16) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos . CBRACKET np_endFunc

    CBRACKET        shift and go to state 279


state 262

    (25) declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 25 (declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 263

    (28) declaracionFuncionParametros2 -> empty .

    CPAREN          reduce using rule 28 (declaracionFuncionParametros2 -> empty .)


state 264

    (29) declaracionFuncionParametros2 -> COMA . INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (30) declaracionFuncionParametros2 -> COMA . FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (31) declaracionFuncionParametros2 -> COMA . CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2

    INT             shift and go to state 280
    FLOAT           shift and go to state 281
    CHAR            shift and go to state 282


state 265

    (26) declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 26 (declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 266

    (27) declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 27 (declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 267

    (17) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos . CBRACKET np_endFunc

    CBRACKET        shift and go to state 283


state 268

    (18) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos . CBRACKET np_endFunc

    CBRACKET        shift and go to state 284


state 269

    (19) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos . CBRACKET np_endFunc

    CBRACKET        shift and go to state 285


state 270

    (91) posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH .

    ASSIGN          reduce using rule 91 (posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH .)
    SEMICOLON       reduce using rule 91 (posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH .)
    COMA            reduce using rule 91 (posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH .)
    CPAREN          reduce using rule 91 (posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH .)


state 271

    (92) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA . expresion CCORCH
    (71) expresion -> . expresion LOGIC np_insertarOperador expresion
    (72) expresion -> . expresion RELOP np_insertarOperador expresion
    (73) expresion -> . termino
    (74) termino -> . termino PLUS np_insertarOperador termino
    (75) termino -> . termino MINUS np_insertarOperador termino
    (76) termino -> . termino MULTIPLY np_insertarOperador termino
    (77) termino -> . termino DIVIDE np_insertarOperador termino
    (79) termino -> . termino1 OPMATRIZ np_insertarOperador
    (80) termino -> . termino1
    (81) termino1 -> . posibleID
    (82) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (83) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (84) termino1 -> . llamadaFuncion
    (85) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (86) termino1 -> . QUOT CARACTER QUOT
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB

    ENTERO          shift and go to state 118
    FLOTANTE        shift and go to state 119
    OPAREN          shift and go to state 121
    QUOT            shift and go to state 122
    ID              shift and go to state 123

    expresion                      shift and go to state 286
    termino                        shift and go to state 115
    termino1                       shift and go to state 116
    posibleID                      shift and go to state 117
    llamadaFuncion                 shift and go to state 120

state 272

    (96) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos . CBRACKET

    CBRACKET        shift and go to state 287


state 273

    (63) paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo np_resolverParam .
    (64) paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo np_resolverParam . COMA paramsLlamada2

    CPAREN          reduce using rule 63 (paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo np_resolverParam .)
    COMA            shift and go to state 288


state 274

    (88) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .

    ASSIGN          reduce using rule 88 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    OPMATRIZ        reduce using rule 88 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    PLUS            reduce using rule 88 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    MINUS           reduce using rule 88 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    MULTIPLY        reduce using rule 88 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    DIVIDE          reduce using rule 88 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    LOGIC           reduce using rule 88 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    RELOP           reduce using rule 88 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    SEMICOLON       reduce using rule 88 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    COMA            reduce using rule 88 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    CPAREN          reduce using rule 88 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    HAZ             reduce using rule 88 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)
    CCORCH          reduce using rule 88 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH .)


state 275

    (89) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA . np_agregarFondo expresion np_quitarFondo CCORCH
    (112) np_agregarFondo -> .

    ENTERO          reduce using rule 112 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 112 (np_agregarFondo -> .)
    OPAREN          reduce using rule 112 (np_agregarFondo -> .)
    QUOT            reduce using rule 112 (np_agregarFondo -> .)
    ID              reduce using rule 112 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 289

state 276

    (97) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ . OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina

    OBRACKET        shift and go to state 290


state 277

    (70) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo . SEMICOLON

    SEMICOLON       shift and go to state 291


state 278

    (52) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES . OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES . OBRACKET estatutos CBRACKET np_terminaIf

    OBRACKET        shift and go to state 292


state 279

    (16) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET . np_endFunc
    (22) np_endFunc -> .

    PRINCIPAL       reduce using rule 22 (np_endFunc -> .)

    np_endFunc                     shift and go to state 293

state 280

    (29) declaracionFuncionParametros2 -> COMA INT . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (10) np_defineTipo -> .

    ID              reduce using rule 10 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 294

state 281

    (30) declaracionFuncionParametros2 -> COMA FLOAT . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (10) np_defineTipo -> .

    ID              reduce using rule 10 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 295

state 282

    (31) declaracionFuncionParametros2 -> COMA CHAR . np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (10) np_defineTipo -> .

    ID              reduce using rule 10 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 296

state 283

    (17) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET . np_endFunc
    (22) np_endFunc -> .

    PRINCIPAL       reduce using rule 22 (np_endFunc -> .)

    np_endFunc                     shift and go to state 297

state 284

    (18) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET . np_endFunc
    (22) np_endFunc -> .

    PRINCIPAL       reduce using rule 22 (np_endFunc -> .)

    np_endFunc                     shift and go to state 298

state 285

    (19) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET . np_endFunc
    (22) np_endFunc -> .

    PRINCIPAL       reduce using rule 22 (np_endFunc -> .)

    np_endFunc                     shift and go to state 299

state 286

    (92) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion . CCORCH
    (71) expresion -> expresion . LOGIC np_insertarOperador expresion
    (72) expresion -> expresion . RELOP np_insertarOperador expresion

    CCORCH          shift and go to state 300
    LOGIC           shift and go to state 151
    RELOP           shift and go to state 152


state 287

    (96) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .

    REGRESA         reduce using rule 96 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    VAR             reduce using rule 96 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    DESDE           reduce using rule 96 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    MIENTRAS        reduce using rule 96 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    LEE             reduce using rule 96 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    ESCRIBE         reduce using rule 96 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    SI              reduce using rule 96 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    ID              reduce using rule 96 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    CBRACKET        reduce using rule 96 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)


state 288

    (64) paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo np_resolverParam COMA . paramsLlamada2
    (63) paramsLlamada2 -> . np_agregarFondo expresion np_quitarFondo np_resolverParam
    (64) paramsLlamada2 -> . np_agregarFondo expresion np_quitarFondo np_resolverParam COMA paramsLlamada2
    (112) np_agregarFondo -> .

    ENTERO          reduce using rule 112 (np_agregarFondo -> .)
    FLOTANTE        reduce using rule 112 (np_agregarFondo -> .)
    OPAREN          reduce using rule 112 (np_agregarFondo -> .)
    QUOT            reduce using rule 112 (np_agregarFondo -> .)
    ID              reduce using rule 112 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 201
    paramsLlamada2                 shift and go to state 301

state 289

    (89) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo . expresion np_quitarFondo CCORCH
    (71) expresion -> . expresion LOGIC np_insertarOperador expresion
    (72) expresion -> . expresion RELOP np_insertarOperador expresion
    (73) expresion -> . termino
    (74) termino -> . termino PLUS np_insertarOperador termino
    (75) termino -> . termino MINUS np_insertarOperador termino
    (76) termino -> . termino MULTIPLY np_insertarOperador termino
    (77) termino -> . termino DIVIDE np_insertarOperador termino
    (79) termino -> . termino1 OPMATRIZ np_insertarOperador
    (80) termino -> . termino1
    (81) termino1 -> . posibleID
    (82) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (83) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (84) termino1 -> . llamadaFuncion
    (85) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (86) termino1 -> . QUOT CARACTER QUOT
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB

    ENTERO          shift and go to state 118
    FLOTANTE        shift and go to state 119
    OPAREN          shift and go to state 121
    QUOT            shift and go to state 122
    ID              shift and go to state 123

    expresion                      shift and go to state 302
    termino                        shift and go to state 115
    termino1                       shift and go to state 116
    posibleID                      shift and go to state 117
    llamadaFuncion                 shift and go to state 120

state 290

    (97) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET . npWhileInicia estatutos CBRACKET npWhileTermina
    (99) npWhileInicia -> .

    REGRESA         reduce using rule 99 (npWhileInicia -> .)
    VAR             reduce using rule 99 (npWhileInicia -> .)
    DESDE           reduce using rule 99 (npWhileInicia -> .)
    MIENTRAS        reduce using rule 99 (npWhileInicia -> .)
    LEE             reduce using rule 99 (npWhileInicia -> .)
    ESCRIBE         reduce using rule 99 (npWhileInicia -> .)
    SI              reduce using rule 99 (npWhileInicia -> .)
    ID              reduce using rule 99 (npWhileInicia -> .)
    CBRACKET        reduce using rule 99 (npWhileInicia -> .)

    npWhileInicia                  shift and go to state 303

state 291

    (70) asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .

    REGRESA         reduce using rule 70 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    VAR             reduce using rule 70 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    DESDE           reduce using rule 70 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    MIENTRAS        reduce using rule 70 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    LEE             reduce using rule 70 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    ESCRIBE         reduce using rule 70 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    SI              reduce using rule 70 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    ID              reduce using rule 70 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)
    CBRACKET        reduce using rule 70 (asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON .)


state 292

    (52) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET . estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET . estatutos CBRACKET np_terminaIf
    (35) estatutos -> . return
    (36) estatutos -> . empty
    (37) estatutos -> . declaracion estatutos
    (38) estatutos -> . estatutoRepeticionIncondicional estatutos
    (39) estatutos -> . estatutoRepeticionCondicional estatutos
    (40) estatutos -> . lectura estatutos
    (41) estatutos -> . asignacion estatutos
    (42) estatutos -> . escritura estatutos
    (43) estatutos -> . decision estatutos
    (44) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (102) return -> . REGRESA SEMICOLON np_returnVOID
    (115) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (96) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (97) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (67) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (70) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (45) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (52) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 115 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 304
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 293

    (16) declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .

    PRINCIPAL       reduce using rule 16 (declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .)


state 294

    (29) declaracionFuncionParametros2 -> COMA INT np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (112) np_agregarFondo -> .

    ID              reduce using rule 112 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 305

state 295

    (30) declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (112) np_agregarFondo -> .

    ID              reduce using rule 112 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 306

state 296

    (31) declaracionFuncionParametros2 -> COMA CHAR np_defineTipo . np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (112) np_agregarFondo -> .

    ID              reduce using rule 112 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 307

state 297

    (17) declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .

    PRINCIPAL       reduce using rule 17 (declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .)


state 298

    (18) declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .

    PRINCIPAL       reduce using rule 18 (declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .)


state 299

    (19) declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .

    PRINCIPAL       reduce using rule 19 (declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc .)


state 300

    (92) posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH .

    ASSIGN          reduce using rule 92 (posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH .)
    SEMICOLON       reduce using rule 92 (posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH .)
    COMA            reduce using rule 92 (posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH .)
    CPAREN          reduce using rule 92 (posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH .)


state 301

    (64) paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo np_resolverParam COMA paramsLlamada2 .

    CPAREN          reduce using rule 64 (paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo np_resolverParam COMA paramsLlamada2 .)


state 302

    (89) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion . np_quitarFondo CCORCH
    (71) expresion -> expresion . LOGIC np_insertarOperador expresion
    (72) expresion -> expresion . RELOP np_insertarOperador expresion
    (113) np_quitarFondo -> .

    LOGIC           shift and go to state 151
    RELOP           shift and go to state 152
    CCORCH          reduce using rule 113 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 308

state 303

    (97) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia . estatutos CBRACKET npWhileTermina
    (35) estatutos -> . return
    (36) estatutos -> . empty
    (37) estatutos -> . declaracion estatutos
    (38) estatutos -> . estatutoRepeticionIncondicional estatutos
    (39) estatutos -> . estatutoRepeticionCondicional estatutos
    (40) estatutos -> . lectura estatutos
    (41) estatutos -> . asignacion estatutos
    (42) estatutos -> . escritura estatutos
    (43) estatutos -> . decision estatutos
    (44) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (102) return -> . REGRESA SEMICOLON np_returnVOID
    (115) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (96) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (97) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (67) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (70) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (45) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (52) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 115 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 309
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 304

    (52) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos . CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos . CBRACKET np_terminaIf

    CBRACKET        shift and go to state 310


state 305

    (29) declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (90) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (91) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (92) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (93) np_updateCurrentDimension0 -> .
    (94) np_updateCurrentDimension1 -> .
    (95) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 93 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 93 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 93 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 94 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 95 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 311
    np_updateCurrentDimension0     shift and go to state 47
    np_updateCurrentDimension1     shift and go to state 48
    np_updateCurrentDimension2     shift and go to state 49

state 306

    (30) declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (90) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (91) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (92) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (93) np_updateCurrentDimension0 -> .
    (94) np_updateCurrentDimension1 -> .
    (95) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 93 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 93 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 93 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 94 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 95 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 312
    np_updateCurrentDimension0     shift and go to state 47
    np_updateCurrentDimension1     shift and go to state 48
    np_updateCurrentDimension2     shift and go to state 49

state 307

    (31) declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo . posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (90) posibleIDDeclaracion -> . np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones
    (91) posibleIDDeclaracion -> . np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH
    (92) posibleIDDeclaracion -> . np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH
    (93) np_updateCurrentDimension0 -> .
    (94) np_updateCurrentDimension1 -> .
    (95) np_updateCurrentDimension2 -> .

  ! reduce/reduce conflict for ID resolved using rule 93 (np_updateCurrentDimension0 -> .)
  ! reduce/reduce conflict for ID resolved using rule 93 (np_updateCurrentDimension0 -> .)
    ID              reduce using rule 93 (np_updateCurrentDimension0 -> .)

  ! ID              [ reduce using rule 94 (np_updateCurrentDimension1 -> .) ]
  ! ID              [ reduce using rule 95 (np_updateCurrentDimension2 -> .) ]

    posibleIDDeclaracion           shift and go to state 313
    np_updateCurrentDimension0     shift and go to state 47
    np_updateCurrentDimension1     shift and go to state 48
    np_updateCurrentDimension2     shift and go to state 49

state 308

    (89) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo . CCORCH

    CCORCH          shift and go to state 314


state 309

    (97) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos . CBRACKET npWhileTermina

    CBRACKET        shift and go to state 315


state 310

    (52) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET . SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET . np_terminaIf
    (55) np_terminaIf -> .

    SINO            shift and go to state 316
    REGRESA         reduce using rule 55 (np_terminaIf -> .)
    VAR             reduce using rule 55 (np_terminaIf -> .)
    DESDE           reduce using rule 55 (np_terminaIf -> .)
    MIENTRAS        reduce using rule 55 (np_terminaIf -> .)
    LEE             reduce using rule 55 (np_terminaIf -> .)
    ESCRIBE         reduce using rule 55 (np_terminaIf -> .)
    SI              reduce using rule 55 (np_terminaIf -> .)
    ID              reduce using rule 55 (np_terminaIf -> .)
    CBRACKET        reduce using rule 55 (np_terminaIf -> .)

    np_terminaIf                   shift and go to state 317

state 311

    (29) declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (113) np_quitarFondo -> .

    COMA            reduce using rule 113 (np_quitarFondo -> .)
    CPAREN          reduce using rule 113 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 318

state 312

    (30) declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (113) np_quitarFondo -> .

    COMA            reduce using rule 113 (np_quitarFondo -> .)
    CPAREN          reduce using rule 113 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 319

state 313

    (31) declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion . np_quitarFondo declaracionFuncionParametros2
    (113) np_quitarFondo -> .

    COMA            reduce using rule 113 (np_quitarFondo -> .)
    CPAREN          reduce using rule 113 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 320

state 314

    (89) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .

    ASSIGN          reduce using rule 89 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    OPMATRIZ        reduce using rule 89 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    PLUS            reduce using rule 89 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    MINUS           reduce using rule 89 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    MULTIPLY        reduce using rule 89 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    DIVIDE          reduce using rule 89 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    LOGIC           reduce using rule 89 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    RELOP           reduce using rule 89 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    SEMICOLON       reduce using rule 89 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    COMA            reduce using rule 89 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    CPAREN          reduce using rule 89 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    HAZ             reduce using rule 89 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)
    CCORCH          reduce using rule 89 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH .)


state 315

    (97) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET . npWhileTermina
    (100) npWhileTermina -> .

    REGRESA         reduce using rule 100 (npWhileTermina -> .)
    VAR             reduce using rule 100 (npWhileTermina -> .)
    DESDE           reduce using rule 100 (npWhileTermina -> .)
    MIENTRAS        reduce using rule 100 (npWhileTermina -> .)
    LEE             reduce using rule 100 (npWhileTermina -> .)
    ESCRIBE         reduce using rule 100 (npWhileTermina -> .)
    SI              reduce using rule 100 (npWhileTermina -> .)
    ID              reduce using rule 100 (npWhileTermina -> .)
    CBRACKET        reduce using rule 100 (npWhileTermina -> .)

    npWhileTermina                 shift and go to state 321

state 316

    (52) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO . OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET

    OBRACKET        shift and go to state 322


state 317

    (53) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .

    REGRESA         reduce using rule 53 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    VAR             reduce using rule 53 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    DESDE           reduce using rule 53 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    MIENTRAS        reduce using rule 53 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    LEE             reduce using rule 53 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    ESCRIBE         reduce using rule 53 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    SI              reduce using rule 53 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    ID              reduce using rule 53 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    CBRACKET        reduce using rule 53 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)


state 318

    (29) declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (28) declaracionFuncionParametros2 -> . empty
    (29) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (30) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (31) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (115) empty -> .

    COMA            shift and go to state 264
    CPAREN          reduce using rule 115 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 323
    empty                          shift and go to state 263

state 319

    (30) declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (28) declaracionFuncionParametros2 -> . empty
    (29) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (30) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (31) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (115) empty -> .

    COMA            shift and go to state 264
    CPAREN          reduce using rule 115 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 324
    empty                          shift and go to state 263

state 320

    (31) declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo . declaracionFuncionParametros2
    (28) declaracionFuncionParametros2 -> . empty
    (29) declaracionFuncionParametros2 -> . COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (30) declaracionFuncionParametros2 -> . COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (31) declaracionFuncionParametros2 -> . COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2
    (115) empty -> .

    COMA            shift and go to state 264
    CPAREN          reduce using rule 115 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 325
    empty                          shift and go to state 263

state 321

    (97) estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .

    REGRESA         reduce using rule 97 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    VAR             reduce using rule 97 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    DESDE           reduce using rule 97 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    MIENTRAS        reduce using rule 97 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    LEE             reduce using rule 97 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    ESCRIBE         reduce using rule 97 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    SI              reduce using rule 97 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    ID              reduce using rule 97 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)
    CBRACKET        reduce using rule 97 (estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina .)


state 322

    (52) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET . np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (56) np_iniciaElse -> .

    REGRESA         reduce using rule 56 (np_iniciaElse -> .)
    VAR             reduce using rule 56 (np_iniciaElse -> .)
    DESDE           reduce using rule 56 (np_iniciaElse -> .)
    MIENTRAS        reduce using rule 56 (np_iniciaElse -> .)
    LEE             reduce using rule 56 (np_iniciaElse -> .)
    ESCRIBE         reduce using rule 56 (np_iniciaElse -> .)
    SI              reduce using rule 56 (np_iniciaElse -> .)
    ID              reduce using rule 56 (np_iniciaElse -> .)
    CBRACKET        reduce using rule 56 (np_iniciaElse -> .)

    np_iniciaElse                  shift and go to state 326

state 323

    (29) declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 29 (declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 324

    (30) declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 30 (declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 325

    (31) declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .

    CPAREN          reduce using rule 31 (declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2 .)


state 326

    (52) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse . np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (112) np_agregarFondo -> .

    REGRESA         reduce using rule 112 (np_agregarFondo -> .)
    VAR             reduce using rule 112 (np_agregarFondo -> .)
    DESDE           reduce using rule 112 (np_agregarFondo -> .)
    MIENTRAS        reduce using rule 112 (np_agregarFondo -> .)
    LEE             reduce using rule 112 (np_agregarFondo -> .)
    ESCRIBE         reduce using rule 112 (np_agregarFondo -> .)
    SI              reduce using rule 112 (np_agregarFondo -> .)
    ID              reduce using rule 112 (np_agregarFondo -> .)
    CBRACKET        reduce using rule 112 (np_agregarFondo -> .)

    np_agregarFondo                shift and go to state 327

state 327

    (52) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo . estatutos np_quitarFondo np_terminaElse CBRACKET
    (35) estatutos -> . return
    (36) estatutos -> . empty
    (37) estatutos -> . declaracion estatutos
    (38) estatutos -> . estatutoRepeticionIncondicional estatutos
    (39) estatutos -> . estatutoRepeticionCondicional estatutos
    (40) estatutos -> . lectura estatutos
    (41) estatutos -> . asignacion estatutos
    (42) estatutos -> . escritura estatutos
    (43) estatutos -> . decision estatutos
    (44) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (101) return -> . REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return
    (102) return -> . REGRESA SEMICOLON np_returnVOID
    (115) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (96) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (97) estatutoRepeticionCondicional -> . MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina
    (67) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (70) asignacion -> . posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON
    (45) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (52) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET
    (53) decision -> . SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (58) llamadaFuncion -> . ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB
    (87) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (88) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH
    (89) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH

    REGRESA         shift and go to state 61
    CBRACKET        reduce using rule 115 (empty -> .)
    VAR             shift and go to state 8
    DESDE           shift and go to state 62
    MIENTRAS        shift and go to state 64
    LEE             shift and go to state 65
    ESCRIBE         shift and go to state 67
    SI              shift and go to state 68
    ID              shift and go to state 63

    estatutos                      shift and go to state 328
    return                         shift and go to state 51
    empty                          shift and go to state 52
    declaracion                    shift and go to state 53
    estatutoRepeticionIncondicional shift and go to state 54
    estatutoRepeticionCondicional  shift and go to state 55
    lectura                        shift and go to state 56
    asignacion                     shift and go to state 57
    escritura                      shift and go to state 58
    decision                       shift and go to state 59
    llamadaFuncion                 shift and go to state 60
    posibleID                      shift and go to state 66

state 328

    (52) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos . np_quitarFondo np_terminaElse CBRACKET
    (113) np_quitarFondo -> .

    CBRACKET        reduce using rule 113 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 329

state 329

    (52) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo . np_terminaElse CBRACKET
    (57) np_terminaElse -> .

    CBRACKET        reduce using rule 57 (np_terminaElse -> .)

    np_terminaElse                 shift and go to state 330

state 330

    (52) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse . CBRACKET

    CBRACKET        shift and go to state 331


state 331

    (52) decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .

    REGRESA         reduce using rule 52 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    VAR             reduce using rule 52 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    DESDE           reduce using rule 52 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    MIENTRAS        reduce using rule 52 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    LEE             reduce using rule 52 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    ESCRIBE         reduce using rule 52 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    SI              reduce using rule 52 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    ID              reduce using rule 52 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)
    CBRACKET        reduce using rule 52 (decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LOGIC in state 225 resolved as shift
WARNING: shift/reduce conflict for RELOP in state 225 resolved as shift
WARNING: shift/reduce conflict for LOGIC in state 226 resolved as shift
WARNING: shift/reduce conflict for RELOP in state 226 resolved as shift
WARNING: reduce/reduce conflict in state 38 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 38
WARNING: reduce/reduce conflict in state 38 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 38
WARNING: reduce/reduce conflict in state 177 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 177
WARNING: reduce/reduce conflict in state 177 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 177
WARNING: reduce/reduce conflict in state 178 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 178
WARNING: reduce/reduce conflict in state 178 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 178
WARNING: reduce/reduce conflict in state 179 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 179
WARNING: reduce/reduce conflict in state 179 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 179
WARNING: reduce/reduce conflict in state 305 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 305
WARNING: reduce/reduce conflict in state 305 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 305
WARNING: reduce/reduce conflict in state 306 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 306
WARNING: reduce/reduce conflict in state 306 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 306
WARNING: reduce/reduce conflict in state 307 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension1 -> <empty>) in state 307
WARNING: reduce/reduce conflict in state 307 resolved using rule (np_updateCurrentDimension0 -> <empty>)
WARNING: rejected rule (np_updateCurrentDimension2 -> <empty>) in state 307
WARNING: Rule (np_updateCurrentDimension1 -> <empty>) is never reduced
WARNING: Rule (np_updateCurrentDimension2 -> <empty>) is never reduced
