Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMENTARIO
    IGNORE
    NEWLINE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID SEMICOLON programa2
Rule 2     programa2 -> declaracion programa2
Rule 3     programa2 -> programa3
Rule 4     programa3 -> declaracionFuncion programa3
Rule 5     programa3 -> principal
Rule 6     principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos
Rule 7     declaracion -> VAR INT np_defineTipo COLON declaracion2
Rule 8     declaracion -> VAR FLOAT np_defineTipo COLON declaracion2
Rule 9     declaracion -> VAR CHAR np_defineTipo COLON declaracion2
Rule 10    np_defineTipo -> <empty>
Rule 11    declaracion2 -> np_agregarFondo posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3
Rule 12    declaracion3 -> np_quitarFondo SEMICOLON
Rule 13    declaracion3 -> np_quitarFondo COMA declaracion2
Rule 14    declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON
Rule 15    declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2
Rule 16    np_agregarFondo -> <empty>
Rule 17    np_quitarFondo -> <empty>
Rule 18    declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
Rule 19    declaracionFuncion -> FUNCION INT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
Rule 20    declaracionFuncion -> FUNCION FLOAT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
Rule 21    declaracionFuncion -> FUNCION CHAR ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
Rule 22    declaracionFuncionParametros -> empty
Rule 23    declaracionFuncionParametros -> INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
Rule 24    declaracionFuncionParametros -> FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
Rule 25    declaracionFuncionParametros -> CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
Rule 26    declaracionFuncionParametros2 -> empty
Rule 27    declaracionFuncionParametros2 -> COMA INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
Rule 28    declaracionFuncionParametros2 -> COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
Rule 29    declaracionFuncionParametros2 -> COMA CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
Rule 30    declaracionFuncionVariables -> empty
Rule 31    declaracionFuncionVariables -> declaracion
Rule 32    npdeclfunc -> <empty>
Rule 33    estatutos -> empty
Rule 34    estatutos -> return
Rule 35    estatutos -> declaracion estatutos
Rule 36    estatutos -> estatutoRepeticionIncondicional estatutos
Rule 37    estatutos -> estatutoRepeticionCondicional estatutos
Rule 38    estatutos -> lectura estatutos
Rule 39    estatutos -> asignacion estatutos
Rule 40    estatutos -> escritura estatutos
Rule 41    estatutos -> decision estatutos
Rule 42    estatutos -> llamadaFuncion SEMICOLON estatutos
Rule 43    escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
Rule 44    escritura2 -> empty
Rule 45    escritura2 -> posibleID escritura3
Rule 46    escritura2 -> STRING escritura3
Rule 47    escritura3 -> empty
Rule 48    escritura3 -> COMA expresion escritura3
Rule 49    escritura3 -> COMA STRING escritura3
Rule 50    decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
Rule 51    decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
Rule 52    np_iniciaIf -> <empty>
Rule 53    np_terminaIf -> <empty>
Rule 54    np_iniciaElse -> <empty>
Rule 55    np_terminaElse -> <empty>
Rule 56    llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN
Rule 57    primerParametro -> expresion
Rule 58    primerParametro -> empty
Rule 59    extraParametros -> COMA expresion extraParametros
Rule 60    extraParametros -> empty
Rule 61    lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
Rule 62    lectura2 -> empty
Rule 63    lectura2 -> COMA posibleID lectura2
Rule 64    asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON
Rule 65    expresion -> expresion LOGIC np_insertarOperador expresion
Rule 66    expresion -> expresion RELOP np_insertarOperador expresion
Rule 67    expresion -> termino
Rule 68    termino -> termino PLUS np_insertarOperador termino
Rule 69    termino -> termino MINUS np_insertarOperador termino
Rule 70    termino -> termino MULTIPLY np_insertarOperador termino
Rule 71    termino -> termino DIVIDE np_insertarOperador termino
Rule 72    np_insertarOperador -> <empty>
Rule 73    termino -> termino1 OPMATRIZ np_insertarOperador
Rule 74    termino -> termino1
Rule 75    termino1 -> posibleID
Rule 76    termino1 -> ENTERO np_contieneID_Constante_Entero
Rule 77    termino1 -> FLOTANTE np_contieneID_Constante_Flotante
Rule 78    termino1 -> llamadaFuncion
Rule 79    posibleID -> ID np_contieneID np_enviarACuadruplos
Rule 80    posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
Rule 81    posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
Rule 82    np_enviarACuadruplos -> <empty>
Rule 83    posibleIDDeclaracion -> ID
Rule 84    posibleIDDeclaracion -> ID OCORCH expresion CCORCH
Rule 85    posibleIDDeclaracion -> ID OCORCH expresion COMA expresion CCORCH
Rule 86    termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
Rule 87    termino1 -> QUOT CARACTER QUOT
Rule 88    estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
Rule 89    estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
Rule 90    return -> REGRESA expresion SEMICOLON
Rule 91    np_contieneID -> <empty>
Rule 92    np_contieneID_Constante_Entero -> <empty>
Rule 93    np_contieneID_Constante_Flotante -> <empty>
Rule 94    np_addVariableParametro -> <empty>
Rule 95    np_addVariable -> <empty>
Rule 96    np_actualizarDimensiones -> <empty>
Rule 97    np_printCuadruplos -> <empty>
Rule 98    empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 14 15 64
CARACTER             : 87
CBRACKET             : 6 18 19 20 21 50 50 51 88 89
CCORCH               : 80 81 84 85
CHAR                 : 9 21 25 29
COLON                : 7 8 9
COMA                 : 13 15 27 28 29 48 49 59 63 81 85
COMENTARIO           : 
CPAREN               : 6 18 19 20 21 43 50 51 56 61 86 89
DESDE                : 88
DIVIDE               : 71
ENTERO               : 76
ENTONCES             : 50 51
ESCRIBE              : 43
FLOAT                : 8 20 24 28
FLOTANTE             : 77
FUNCION              : 18 19 20 21
HASTA                : 88
HAZ                  : 88 89
ID                   : 1 18 19 20 21 23 24 25 27 28 29 56 79 80 81 83 84 85 88
IGNORE               : 
INT                  : 7 19 23 27
LEE                  : 61
LOGIC                : 65
MIENTRAS             : 89
MINUS                : 69
MULTIPLY             : 70
NEWLINE              : 
OBRACKET             : 6 18 19 20 21 50 50 51 88 89
OCORCH               : 80 81 84 85
OPAREN               : 6 18 19 20 21 43 50 51 56 61 86 89
OPMATRIZ             : 73
PLUS                 : 68
PRINCIPAL            : 6
PROGRAMA             : 1
QUOT                 : 87 87
REGRESA              : 90
RELOP                : 66
SEMICOLON            : 1 12 14 42 43 61 64 90
SI                   : 50 51
SINO                 : 50
STRING               : 46 49
VAR                  : 7 8 9
VOID                 : 18
error                : 

Nonterminals, with rules where they appear

asignacion           : 39
decision             : 41
declaracion          : 2 31 35
declaracion2         : 7 8 9 13 15
declaracion3         : 11
declaracionFuncion   : 4
declaracionFuncionParametros : 18 19 20 21
declaracionFuncionParametros2 : 23 24 25 27 28 29
declaracionFuncionVariables : 18 19 20 21
empty                : 22 26 30 33 44 47 58 60 62
escritura            : 40
escritura2           : 43
escritura3           : 45 46 48 49
estatutoRepeticionCondicional : 37
estatutoRepeticionIncondicional : 36
estatutos            : 6 18 19 20 21 35 36 37 38 39 40 41 42 50 50 51 88 89
expresion            : 14 15 48 50 51 57 59 64 65 65 66 66 80 81 81 84 85 85 86 88 89 90
extraParametros      : 56 59
lectura              : 38
lectura2             : 61 63
llamadaFuncion       : 42 78
np_actualizarDimensiones : 11 23 24 25 27 28 29
np_addVariable       : 11
np_addVariableParametro : 23 24 25 27 28 29
np_agregarFondo      : 11
np_contieneID        : 79 80 81 88
np_contieneID_Constante_Entero : 76
np_contieneID_Constante_Flotante : 77
np_defineTipo        : 7 8 9
np_enviarACuadruplos : 79 80 81
np_iniciaElse        : 50
np_iniciaIf          : 50 51
np_insertarOperador  : 14 15 64 65 66 68 69 70 71 73 86 86
np_printCuadruplos   : 6
np_quitarFondo       : 12 13 14 15
np_terminaElse       : 50
np_terminaIf         : 51
npdeclfunc           : 18 19 20 21
posibleID            : 45 61 63 64 75
posibleIDDeclaracion : 11
primerParametro      : 56
principal            : 5
programa             : 0
programa2            : 1 2
programa3            : 3 4
return               : 34
termino              : 67 68 68 69 69 70 70 71 71
termino1             : 73 74

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID SEMICOLON programa2

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID SEMICOLON programa2

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . SEMICOLON programa2

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID SEMICOLON . programa2
    (2) programa2 -> . declaracion programa2
    (3) programa2 -> . programa3
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (4) programa3 -> . declaracionFuncion programa3
    (5) programa3 -> . principal
    (18) declaracionFuncion -> . FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (19) declaracionFuncion -> . FUNCION INT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (20) declaracionFuncion -> . FUNCION FLOAT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (21) declaracionFuncion -> . FUNCION CHAR ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (6) principal -> . PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos

    VAR             shift and go to state 8
    FUNCION         shift and go to state 11
    PRINCIPAL       shift and go to state 12

    programa2                      shift and go to state 5
    declaracion                    shift and go to state 6
    programa3                      shift and go to state 7
    declaracionFuncion             shift and go to state 9
    principal                      shift and go to state 10

state 5

    (1) programa -> PROGRAMA ID SEMICOLON programa2 .

    $end            reduce using rule 1 (programa -> PROGRAMA ID SEMICOLON programa2 .)


state 6

    (2) programa2 -> declaracion . programa2
    (2) programa2 -> . declaracion programa2
    (3) programa2 -> . programa3
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (4) programa3 -> . declaracionFuncion programa3
    (5) programa3 -> . principal
    (18) declaracionFuncion -> . FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (19) declaracionFuncion -> . FUNCION INT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (20) declaracionFuncion -> . FUNCION FLOAT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (21) declaracionFuncion -> . FUNCION CHAR ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (6) principal -> . PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos

    VAR             shift and go to state 8
    FUNCION         shift and go to state 11
    PRINCIPAL       shift and go to state 12

    declaracion                    shift and go to state 6
    programa2                      shift and go to state 13
    programa3                      shift and go to state 7
    declaracionFuncion             shift and go to state 9
    principal                      shift and go to state 10

state 7

    (3) programa2 -> programa3 .

    $end            reduce using rule 3 (programa2 -> programa3 .)


state 8

    (7) declaracion -> VAR . INT np_defineTipo COLON declaracion2
    (8) declaracion -> VAR . FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> VAR . CHAR np_defineTipo COLON declaracion2

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16


state 9

    (4) programa3 -> declaracionFuncion . programa3
    (4) programa3 -> . declaracionFuncion programa3
    (5) programa3 -> . principal
    (18) declaracionFuncion -> . FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (19) declaracionFuncion -> . FUNCION INT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (20) declaracionFuncion -> . FUNCION FLOAT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (21) declaracionFuncion -> . FUNCION CHAR ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (6) principal -> . PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos

    FUNCION         shift and go to state 11
    PRINCIPAL       shift and go to state 12

    declaracionFuncion             shift and go to state 9
    programa3                      shift and go to state 17
    principal                      shift and go to state 10

state 10

    (5) programa3 -> principal .

    $end            reduce using rule 5 (programa3 -> principal .)


state 11

    (18) declaracionFuncion -> FUNCION . VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (19) declaracionFuncion -> FUNCION . INT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (20) declaracionFuncion -> FUNCION . FLOAT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (21) declaracionFuncion -> FUNCION . CHAR ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    VOID            shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21


state 12

    (6) principal -> PRINCIPAL . OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos

    OPAREN          shift and go to state 22


state 13

    (2) programa2 -> declaracion programa2 .

    $end            reduce using rule 2 (programa2 -> declaracion programa2 .)


state 14

    (7) declaracion -> VAR INT . np_defineTipo COLON declaracion2
    (10) np_defineTipo -> .

    COLON           reduce using rule 10 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 23

state 15

    (8) declaracion -> VAR FLOAT . np_defineTipo COLON declaracion2
    (10) np_defineTipo -> .

    COLON           reduce using rule 10 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 24

state 16

    (9) declaracion -> VAR CHAR . np_defineTipo COLON declaracion2
    (10) np_defineTipo -> .

    COLON           reduce using rule 10 (np_defineTipo -> .)

    np_defineTipo                  shift and go to state 25

state 17

    (4) programa3 -> declaracionFuncion programa3 .

    $end            reduce using rule 4 (programa3 -> declaracionFuncion programa3 .)


state 18

    (18) declaracionFuncion -> FUNCION VOID . ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    ID              shift and go to state 26


state 19

    (19) declaracionFuncion -> FUNCION INT . ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    ID              shift and go to state 27


state 20

    (20) declaracionFuncion -> FUNCION FLOAT . ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    ID              shift and go to state 28


state 21

    (21) declaracionFuncion -> FUNCION CHAR . ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    ID              shift and go to state 29


state 22

    (6) principal -> PRINCIPAL OPAREN . CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos

    CPAREN          shift and go to state 30


state 23

    (7) declaracion -> VAR INT np_defineTipo . COLON declaracion2

    COLON           shift and go to state 31


state 24

    (8) declaracion -> VAR FLOAT np_defineTipo . COLON declaracion2

    COLON           shift and go to state 32


state 25

    (9) declaracion -> VAR CHAR np_defineTipo . COLON declaracion2

    COLON           shift and go to state 33


state 26

    (18) declaracionFuncion -> FUNCION VOID ID . npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (32) npdeclfunc -> .

    OPAREN          reduce using rule 32 (npdeclfunc -> .)

    npdeclfunc                     shift and go to state 34

state 27

    (19) declaracionFuncion -> FUNCION INT ID . npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (32) npdeclfunc -> .

    OPAREN          reduce using rule 32 (npdeclfunc -> .)

    npdeclfunc                     shift and go to state 35

state 28

    (20) declaracionFuncion -> FUNCION FLOAT ID . npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (32) npdeclfunc -> .

    OPAREN          reduce using rule 32 (npdeclfunc -> .)

    npdeclfunc                     shift and go to state 36

state 29

    (21) declaracionFuncion -> FUNCION CHAR ID . npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (32) npdeclfunc -> .

    OPAREN          reduce using rule 32 (npdeclfunc -> .)

    npdeclfunc                     shift and go to state 37

state 30

    (6) principal -> PRINCIPAL OPAREN CPAREN . OBRACKET estatutos CBRACKET np_printCuadruplos

    OBRACKET        shift and go to state 38


state 31

    (7) declaracion -> VAR INT np_defineTipo COLON . declaracion2
    (11) declaracion2 -> . np_agregarFondo posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3
    (16) np_agregarFondo -> .

    ID              reduce using rule 16 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 39
    np_agregarFondo                shift and go to state 40

state 32

    (8) declaracion -> VAR FLOAT np_defineTipo COLON . declaracion2
    (11) declaracion2 -> . np_agregarFondo posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3
    (16) np_agregarFondo -> .

    ID              reduce using rule 16 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 41
    np_agregarFondo                shift and go to state 40

state 33

    (9) declaracion -> VAR CHAR np_defineTipo COLON . declaracion2
    (11) declaracion2 -> . np_agregarFondo posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3
    (16) np_agregarFondo -> .

    ID              reduce using rule 16 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 42
    np_agregarFondo                shift and go to state 40

state 34

    (18) declaracionFuncion -> FUNCION VOID ID npdeclfunc . OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    OPAREN          shift and go to state 43


state 35

    (19) declaracionFuncion -> FUNCION INT ID npdeclfunc . OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    OPAREN          shift and go to state 44


state 36

    (20) declaracionFuncion -> FUNCION FLOAT ID npdeclfunc . OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    OPAREN          shift and go to state 45


state 37

    (21) declaracionFuncion -> FUNCION CHAR ID npdeclfunc . OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    OPAREN          shift and go to state 46


state 38

    (6) principal -> PRINCIPAL OPAREN CPAREN OBRACKET . estatutos CBRACKET np_printCuadruplos
    (33) estatutos -> . empty
    (34) estatutos -> . return
    (35) estatutos -> . declaracion estatutos
    (36) estatutos -> . estatutoRepeticionIncondicional estatutos
    (37) estatutos -> . estatutoRepeticionCondicional estatutos
    (38) estatutos -> . lectura estatutos
    (39) estatutos -> . asignacion estatutos
    (40) estatutos -> . escritura estatutos
    (41) estatutos -> . decision estatutos
    (42) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (98) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (61) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (64) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (43) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (50) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 98 (empty -> .)
    REGRESA         shift and go to state 58
    VAR             shift and go to state 8
    DESDE           shift and go to state 59
    MIENTRAS        shift and go to state 61
    LEE             shift and go to state 62
    ESCRIBE         shift and go to state 64
    SI              shift and go to state 65
    ID              shift and go to state 60

    estatutos                      shift and go to state 47
    empty                          shift and go to state 48
    return                         shift and go to state 49
    declaracion                    shift and go to state 50
    estatutoRepeticionIncondicional shift and go to state 51
    estatutoRepeticionCondicional  shift and go to state 52
    lectura                        shift and go to state 53
    asignacion                     shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    llamadaFuncion                 shift and go to state 57
    posibleID                      shift and go to state 63

state 39

    (7) declaracion -> VAR INT np_defineTipo COLON declaracion2 .

    VAR             reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    FUNCION         reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    PRINCIPAL       reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    REGRESA         reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    DESDE           reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    MIENTRAS        reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    LEE             reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    ESCRIBE         reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    SI              reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    ID              reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    CBRACKET        reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)
    OBRACKET        reduce using rule 7 (declaracion -> VAR INT np_defineTipo COLON declaracion2 .)


state 40

    (11) declaracion2 -> np_agregarFondo . posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3
    (83) posibleIDDeclaracion -> . ID
    (84) posibleIDDeclaracion -> . ID OCORCH expresion CCORCH
    (85) posibleIDDeclaracion -> . ID OCORCH expresion COMA expresion CCORCH

    ID              shift and go to state 67

    posibleIDDeclaracion           shift and go to state 66

state 41

    (8) declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .

    VAR             reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    FUNCION         reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    PRINCIPAL       reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    REGRESA         reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    DESDE           reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    MIENTRAS        reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    LEE             reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    ESCRIBE         reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    SI              reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    ID              reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    CBRACKET        reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)
    OBRACKET        reduce using rule 8 (declaracion -> VAR FLOAT np_defineTipo COLON declaracion2 .)


state 42

    (9) declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .

    VAR             reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    FUNCION         reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    PRINCIPAL       reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    REGRESA         reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    DESDE           reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    MIENTRAS        reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    LEE             reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    ESCRIBE         reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    SI              reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    ID              reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    CBRACKET        reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)
    OBRACKET        reduce using rule 9 (declaracion -> VAR CHAR np_defineTipo COLON declaracion2 .)


state 43

    (18) declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN . declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (22) declaracionFuncionParametros -> . empty
    (23) declaracionFuncionParametros -> . INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (24) declaracionFuncionParametros -> . FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (25) declaracionFuncionParametros -> . CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (98) empty -> .

    INT             shift and go to state 70
    FLOAT           shift and go to state 71
    CHAR            shift and go to state 72
    CPAREN          reduce using rule 98 (empty -> .)

    declaracionFuncionParametros   shift and go to state 68
    empty                          shift and go to state 69

state 44

    (19) declaracionFuncion -> FUNCION INT ID npdeclfunc OPAREN . declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (22) declaracionFuncionParametros -> . empty
    (23) declaracionFuncionParametros -> . INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (24) declaracionFuncionParametros -> . FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (25) declaracionFuncionParametros -> . CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (98) empty -> .

    INT             shift and go to state 70
    FLOAT           shift and go to state 71
    CHAR            shift and go to state 72
    CPAREN          reduce using rule 98 (empty -> .)

    declaracionFuncionParametros   shift and go to state 73
    empty                          shift and go to state 69

state 45

    (20) declaracionFuncion -> FUNCION FLOAT ID npdeclfunc OPAREN . declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (22) declaracionFuncionParametros -> . empty
    (23) declaracionFuncionParametros -> . INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (24) declaracionFuncionParametros -> . FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (25) declaracionFuncionParametros -> . CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (98) empty -> .

    INT             shift and go to state 70
    FLOAT           shift and go to state 71
    CHAR            shift and go to state 72
    CPAREN          reduce using rule 98 (empty -> .)

    declaracionFuncionParametros   shift and go to state 74
    empty                          shift and go to state 69

state 46

    (21) declaracionFuncion -> FUNCION CHAR ID npdeclfunc OPAREN . declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (22) declaracionFuncionParametros -> . empty
    (23) declaracionFuncionParametros -> . INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (24) declaracionFuncionParametros -> . FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (25) declaracionFuncionParametros -> . CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (98) empty -> .

    INT             shift and go to state 70
    FLOAT           shift and go to state 71
    CHAR            shift and go to state 72
    CPAREN          reduce using rule 98 (empty -> .)

    declaracionFuncionParametros   shift and go to state 75
    empty                          shift and go to state 69

state 47

    (6) principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos . CBRACKET np_printCuadruplos

    CBRACKET        shift and go to state 76


state 48

    (33) estatutos -> empty .

    CBRACKET        reduce using rule 33 (estatutos -> empty .)


state 49

    (34) estatutos -> return .

    CBRACKET        reduce using rule 34 (estatutos -> return .)


state 50

    (35) estatutos -> declaracion . estatutos
    (33) estatutos -> . empty
    (34) estatutos -> . return
    (35) estatutos -> . declaracion estatutos
    (36) estatutos -> . estatutoRepeticionIncondicional estatutos
    (37) estatutos -> . estatutoRepeticionCondicional estatutos
    (38) estatutos -> . lectura estatutos
    (39) estatutos -> . asignacion estatutos
    (40) estatutos -> . escritura estatutos
    (41) estatutos -> . decision estatutos
    (42) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (98) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (61) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (64) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (43) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (50) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 98 (empty -> .)
    REGRESA         shift and go to state 58
    VAR             shift and go to state 8
    DESDE           shift and go to state 59
    MIENTRAS        shift and go to state 61
    LEE             shift and go to state 62
    ESCRIBE         shift and go to state 64
    SI              shift and go to state 65
    ID              shift and go to state 60

    declaracion                    shift and go to state 50
    estatutos                      shift and go to state 77
    empty                          shift and go to state 48
    return                         shift and go to state 49
    estatutoRepeticionIncondicional shift and go to state 51
    estatutoRepeticionCondicional  shift and go to state 52
    lectura                        shift and go to state 53
    asignacion                     shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    llamadaFuncion                 shift and go to state 57
    posibleID                      shift and go to state 63

state 51

    (36) estatutos -> estatutoRepeticionIncondicional . estatutos
    (33) estatutos -> . empty
    (34) estatutos -> . return
    (35) estatutos -> . declaracion estatutos
    (36) estatutos -> . estatutoRepeticionIncondicional estatutos
    (37) estatutos -> . estatutoRepeticionCondicional estatutos
    (38) estatutos -> . lectura estatutos
    (39) estatutos -> . asignacion estatutos
    (40) estatutos -> . escritura estatutos
    (41) estatutos -> . decision estatutos
    (42) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (98) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (61) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (64) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (43) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (50) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 98 (empty -> .)
    REGRESA         shift and go to state 58
    VAR             shift and go to state 8
    DESDE           shift and go to state 59
    MIENTRAS        shift and go to state 61
    LEE             shift and go to state 62
    ESCRIBE         shift and go to state 64
    SI              shift and go to state 65
    ID              shift and go to state 60

    estatutoRepeticionIncondicional shift and go to state 51
    estatutos                      shift and go to state 78
    empty                          shift and go to state 48
    return                         shift and go to state 49
    declaracion                    shift and go to state 50
    estatutoRepeticionCondicional  shift and go to state 52
    lectura                        shift and go to state 53
    asignacion                     shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    llamadaFuncion                 shift and go to state 57
    posibleID                      shift and go to state 63

state 52

    (37) estatutos -> estatutoRepeticionCondicional . estatutos
    (33) estatutos -> . empty
    (34) estatutos -> . return
    (35) estatutos -> . declaracion estatutos
    (36) estatutos -> . estatutoRepeticionIncondicional estatutos
    (37) estatutos -> . estatutoRepeticionCondicional estatutos
    (38) estatutos -> . lectura estatutos
    (39) estatutos -> . asignacion estatutos
    (40) estatutos -> . escritura estatutos
    (41) estatutos -> . decision estatutos
    (42) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (98) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (61) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (64) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (43) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (50) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 98 (empty -> .)
    REGRESA         shift and go to state 58
    VAR             shift and go to state 8
    DESDE           shift and go to state 59
    MIENTRAS        shift and go to state 61
    LEE             shift and go to state 62
    ESCRIBE         shift and go to state 64
    SI              shift and go to state 65
    ID              shift and go to state 60

    estatutoRepeticionCondicional  shift and go to state 52
    estatutos                      shift and go to state 79
    empty                          shift and go to state 48
    return                         shift and go to state 49
    declaracion                    shift and go to state 50
    estatutoRepeticionIncondicional shift and go to state 51
    lectura                        shift and go to state 53
    asignacion                     shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    llamadaFuncion                 shift and go to state 57
    posibleID                      shift and go to state 63

state 53

    (38) estatutos -> lectura . estatutos
    (33) estatutos -> . empty
    (34) estatutos -> . return
    (35) estatutos -> . declaracion estatutos
    (36) estatutos -> . estatutoRepeticionIncondicional estatutos
    (37) estatutos -> . estatutoRepeticionCondicional estatutos
    (38) estatutos -> . lectura estatutos
    (39) estatutos -> . asignacion estatutos
    (40) estatutos -> . escritura estatutos
    (41) estatutos -> . decision estatutos
    (42) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (98) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (61) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (64) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (43) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (50) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 98 (empty -> .)
    REGRESA         shift and go to state 58
    VAR             shift and go to state 8
    DESDE           shift and go to state 59
    MIENTRAS        shift and go to state 61
    LEE             shift and go to state 62
    ESCRIBE         shift and go to state 64
    SI              shift and go to state 65
    ID              shift and go to state 60

    lectura                        shift and go to state 53
    estatutos                      shift and go to state 80
    empty                          shift and go to state 48
    return                         shift and go to state 49
    declaracion                    shift and go to state 50
    estatutoRepeticionIncondicional shift and go to state 51
    estatutoRepeticionCondicional  shift and go to state 52
    asignacion                     shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    llamadaFuncion                 shift and go to state 57
    posibleID                      shift and go to state 63

state 54

    (39) estatutos -> asignacion . estatutos
    (33) estatutos -> . empty
    (34) estatutos -> . return
    (35) estatutos -> . declaracion estatutos
    (36) estatutos -> . estatutoRepeticionIncondicional estatutos
    (37) estatutos -> . estatutoRepeticionCondicional estatutos
    (38) estatutos -> . lectura estatutos
    (39) estatutos -> . asignacion estatutos
    (40) estatutos -> . escritura estatutos
    (41) estatutos -> . decision estatutos
    (42) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (98) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (61) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (64) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (43) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (50) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 98 (empty -> .)
    REGRESA         shift and go to state 58
    VAR             shift and go to state 8
    DESDE           shift and go to state 59
    MIENTRAS        shift and go to state 61
    LEE             shift and go to state 62
    ESCRIBE         shift and go to state 64
    SI              shift and go to state 65
    ID              shift and go to state 60

    asignacion                     shift and go to state 54
    estatutos                      shift and go to state 81
    empty                          shift and go to state 48
    return                         shift and go to state 49
    declaracion                    shift and go to state 50
    estatutoRepeticionIncondicional shift and go to state 51
    estatutoRepeticionCondicional  shift and go to state 52
    lectura                        shift and go to state 53
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    llamadaFuncion                 shift and go to state 57
    posibleID                      shift and go to state 63

state 55

    (40) estatutos -> escritura . estatutos
    (33) estatutos -> . empty
    (34) estatutos -> . return
    (35) estatutos -> . declaracion estatutos
    (36) estatutos -> . estatutoRepeticionIncondicional estatutos
    (37) estatutos -> . estatutoRepeticionCondicional estatutos
    (38) estatutos -> . lectura estatutos
    (39) estatutos -> . asignacion estatutos
    (40) estatutos -> . escritura estatutos
    (41) estatutos -> . decision estatutos
    (42) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (98) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (61) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (64) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (43) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (50) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 98 (empty -> .)
    REGRESA         shift and go to state 58
    VAR             shift and go to state 8
    DESDE           shift and go to state 59
    MIENTRAS        shift and go to state 61
    LEE             shift and go to state 62
    ESCRIBE         shift and go to state 64
    SI              shift and go to state 65
    ID              shift and go to state 60

    escritura                      shift and go to state 55
    estatutos                      shift and go to state 82
    empty                          shift and go to state 48
    return                         shift and go to state 49
    declaracion                    shift and go to state 50
    estatutoRepeticionIncondicional shift and go to state 51
    estatutoRepeticionCondicional  shift and go to state 52
    lectura                        shift and go to state 53
    asignacion                     shift and go to state 54
    decision                       shift and go to state 56
    llamadaFuncion                 shift and go to state 57
    posibleID                      shift and go to state 63

state 56

    (41) estatutos -> decision . estatutos
    (33) estatutos -> . empty
    (34) estatutos -> . return
    (35) estatutos -> . declaracion estatutos
    (36) estatutos -> . estatutoRepeticionIncondicional estatutos
    (37) estatutos -> . estatutoRepeticionCondicional estatutos
    (38) estatutos -> . lectura estatutos
    (39) estatutos -> . asignacion estatutos
    (40) estatutos -> . escritura estatutos
    (41) estatutos -> . decision estatutos
    (42) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (98) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (61) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (64) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (43) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (50) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 98 (empty -> .)
    REGRESA         shift and go to state 58
    VAR             shift and go to state 8
    DESDE           shift and go to state 59
    MIENTRAS        shift and go to state 61
    LEE             shift and go to state 62
    ESCRIBE         shift and go to state 64
    SI              shift and go to state 65
    ID              shift and go to state 60

    decision                       shift and go to state 56
    estatutos                      shift and go to state 83
    empty                          shift and go to state 48
    return                         shift and go to state 49
    declaracion                    shift and go to state 50
    estatutoRepeticionIncondicional shift and go to state 51
    estatutoRepeticionCondicional  shift and go to state 52
    lectura                        shift and go to state 53
    asignacion                     shift and go to state 54
    escritura                      shift and go to state 55
    llamadaFuncion                 shift and go to state 57
    posibleID                      shift and go to state 63

state 57

    (42) estatutos -> llamadaFuncion . SEMICOLON estatutos

    SEMICOLON       shift and go to state 84


state 58

    (90) return -> REGRESA . expresion SEMICOLON
    (65) expresion -> . expresion LOGIC np_insertarOperador expresion
    (66) expresion -> . expresion RELOP np_insertarOperador expresion
    (67) expresion -> . termino
    (68) termino -> . termino PLUS np_insertarOperador termino
    (69) termino -> . termino MINUS np_insertarOperador termino
    (70) termino -> . termino MULTIPLY np_insertarOperador termino
    (71) termino -> . termino DIVIDE np_insertarOperador termino
    (73) termino -> . termino1 OPMATRIZ np_insertarOperador
    (74) termino -> . termino1
    (75) termino1 -> . posibleID
    (76) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (77) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (78) termino1 -> . llamadaFuncion
    (86) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (87) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90
    OPAREN          shift and go to state 92
    QUOT            shift and go to state 93
    ID              shift and go to state 94

    expresion                      shift and go to state 85
    termino                        shift and go to state 86
    termino1                       shift and go to state 87
    posibleID                      shift and go to state 88
    llamadaFuncion                 shift and go to state 91

state 59

    (88) estatutoRepeticionIncondicional -> DESDE . ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET

    ID              shift and go to state 95


state 60

    (56) llamadaFuncion -> ID . OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> ID . np_contieneID np_enviarACuadruplos
    (80) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (91) np_contieneID -> .

    OPAREN          shift and go to state 96
    OCORCH          reduce using rule 91 (np_contieneID -> .)
    ASSIGN          reduce using rule 91 (np_contieneID -> .)

    np_contieneID                  shift and go to state 97

state 61

    (89) estatutoRepeticionCondicional -> MIENTRAS . OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET

    OPAREN          shift and go to state 98


state 62

    (61) lectura -> LEE . OPAREN posibleID lectura2 CPAREN SEMICOLON

    OPAREN          shift and go to state 99


state 63

    (64) asignacion -> posibleID . ASSIGN np_insertarOperador expresion SEMICOLON

    ASSIGN          shift and go to state 100


state 64

    (43) escritura -> ESCRIBE . OPAREN escritura2 CPAREN SEMICOLON

    OPAREN          shift and go to state 101


state 65

    (50) decision -> SI . OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> SI . OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf

    OPAREN          shift and go to state 102


state 66

    (11) declaracion2 -> np_agregarFondo posibleIDDeclaracion . np_addVariable np_actualizarDimensiones declaracion3
    (95) np_addVariable -> .

    ASSIGN          reduce using rule 95 (np_addVariable -> .)
    SEMICOLON       reduce using rule 95 (np_addVariable -> .)
    COMA            reduce using rule 95 (np_addVariable -> .)

    np_addVariable                 shift and go to state 103

state 67

    (83) posibleIDDeclaracion -> ID .
    (84) posibleIDDeclaracion -> ID . OCORCH expresion CCORCH
    (85) posibleIDDeclaracion -> ID . OCORCH expresion COMA expresion CCORCH

    ASSIGN          reduce using rule 83 (posibleIDDeclaracion -> ID .)
    SEMICOLON       reduce using rule 83 (posibleIDDeclaracion -> ID .)
    COMA            reduce using rule 83 (posibleIDDeclaracion -> ID .)
    OCORCH          shift and go to state 104


state 68

    (18) declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros . CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    CPAREN          shift and go to state 105


state 69

    (22) declaracionFuncionParametros -> empty .

    CPAREN          reduce using rule 22 (declaracionFuncionParametros -> empty .)


state 70

    (23) declaracionFuncionParametros -> INT . ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2

    ID              shift and go to state 106


state 71

    (24) declaracionFuncionParametros -> FLOAT . ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2

    ID              shift and go to state 107


state 72

    (25) declaracionFuncionParametros -> CHAR . ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2

    ID              shift and go to state 108


state 73

    (19) declaracionFuncion -> FUNCION INT ID npdeclfunc OPAREN declaracionFuncionParametros . CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    CPAREN          shift and go to state 109


state 74

    (20) declaracionFuncion -> FUNCION FLOAT ID npdeclfunc OPAREN declaracionFuncionParametros . CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    CPAREN          shift and go to state 110


state 75

    (21) declaracionFuncion -> FUNCION CHAR ID npdeclfunc OPAREN declaracionFuncionParametros . CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET

    CPAREN          shift and go to state 111


state 76

    (6) principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET . np_printCuadruplos
    (97) np_printCuadruplos -> .

    $end            reduce using rule 97 (np_printCuadruplos -> .)

    np_printCuadruplos             shift and go to state 112

state 77

    (35) estatutos -> declaracion estatutos .

    CBRACKET        reduce using rule 35 (estatutos -> declaracion estatutos .)


state 78

    (36) estatutos -> estatutoRepeticionIncondicional estatutos .

    CBRACKET        reduce using rule 36 (estatutos -> estatutoRepeticionIncondicional estatutos .)


state 79

    (37) estatutos -> estatutoRepeticionCondicional estatutos .

    CBRACKET        reduce using rule 37 (estatutos -> estatutoRepeticionCondicional estatutos .)


state 80

    (38) estatutos -> lectura estatutos .

    CBRACKET        reduce using rule 38 (estatutos -> lectura estatutos .)


state 81

    (39) estatutos -> asignacion estatutos .

    CBRACKET        reduce using rule 39 (estatutos -> asignacion estatutos .)


state 82

    (40) estatutos -> escritura estatutos .

    CBRACKET        reduce using rule 40 (estatutos -> escritura estatutos .)


state 83

    (41) estatutos -> decision estatutos .

    CBRACKET        reduce using rule 41 (estatutos -> decision estatutos .)


state 84

    (42) estatutos -> llamadaFuncion SEMICOLON . estatutos
    (33) estatutos -> . empty
    (34) estatutos -> . return
    (35) estatutos -> . declaracion estatutos
    (36) estatutos -> . estatutoRepeticionIncondicional estatutos
    (37) estatutos -> . estatutoRepeticionCondicional estatutos
    (38) estatutos -> . lectura estatutos
    (39) estatutos -> . asignacion estatutos
    (40) estatutos -> . escritura estatutos
    (41) estatutos -> . decision estatutos
    (42) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (98) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (61) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (64) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (43) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (50) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 98 (empty -> .)
    REGRESA         shift and go to state 58
    VAR             shift and go to state 8
    DESDE           shift and go to state 59
    MIENTRAS        shift and go to state 61
    LEE             shift and go to state 62
    ESCRIBE         shift and go to state 64
    SI              shift and go to state 65
    ID              shift and go to state 60

    llamadaFuncion                 shift and go to state 57
    estatutos                      shift and go to state 113
    empty                          shift and go to state 48
    return                         shift and go to state 49
    declaracion                    shift and go to state 50
    estatutoRepeticionIncondicional shift and go to state 51
    estatutoRepeticionCondicional  shift and go to state 52
    lectura                        shift and go to state 53
    asignacion                     shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    posibleID                      shift and go to state 63

state 85

    (90) return -> REGRESA expresion . SEMICOLON
    (65) expresion -> expresion . LOGIC np_insertarOperador expresion
    (66) expresion -> expresion . RELOP np_insertarOperador expresion

    SEMICOLON       shift and go to state 114
    LOGIC           shift and go to state 115
    RELOP           shift and go to state 116


state 86

    (67) expresion -> termino .
    (68) termino -> termino . PLUS np_insertarOperador termino
    (69) termino -> termino . MINUS np_insertarOperador termino
    (70) termino -> termino . MULTIPLY np_insertarOperador termino
    (71) termino -> termino . DIVIDE np_insertarOperador termino

    SEMICOLON       reduce using rule 67 (expresion -> termino .)
    LOGIC           reduce using rule 67 (expresion -> termino .)
    RELOP           reduce using rule 67 (expresion -> termino .)
    COMA            reduce using rule 67 (expresion -> termino .)
    CPAREN          reduce using rule 67 (expresion -> termino .)
    CCORCH          reduce using rule 67 (expresion -> termino .)
    HAZ             reduce using rule 67 (expresion -> termino .)
    PLUS            shift and go to state 117
    MINUS           shift and go to state 118
    MULTIPLY        shift and go to state 119
    DIVIDE          shift and go to state 120


state 87

    (73) termino -> termino1 . OPMATRIZ np_insertarOperador
    (74) termino -> termino1 .

    OPMATRIZ        shift and go to state 121
    PLUS            reduce using rule 74 (termino -> termino1 .)
    MINUS           reduce using rule 74 (termino -> termino1 .)
    MULTIPLY        reduce using rule 74 (termino -> termino1 .)
    DIVIDE          reduce using rule 74 (termino -> termino1 .)
    SEMICOLON       reduce using rule 74 (termino -> termino1 .)
    LOGIC           reduce using rule 74 (termino -> termino1 .)
    RELOP           reduce using rule 74 (termino -> termino1 .)
    COMA            reduce using rule 74 (termino -> termino1 .)
    CPAREN          reduce using rule 74 (termino -> termino1 .)
    CCORCH          reduce using rule 74 (termino -> termino1 .)
    HAZ             reduce using rule 74 (termino -> termino1 .)


state 88

    (75) termino1 -> posibleID .

    OPMATRIZ        reduce using rule 75 (termino1 -> posibleID .)
    PLUS            reduce using rule 75 (termino1 -> posibleID .)
    MINUS           reduce using rule 75 (termino1 -> posibleID .)
    MULTIPLY        reduce using rule 75 (termino1 -> posibleID .)
    DIVIDE          reduce using rule 75 (termino1 -> posibleID .)
    SEMICOLON       reduce using rule 75 (termino1 -> posibleID .)
    LOGIC           reduce using rule 75 (termino1 -> posibleID .)
    RELOP           reduce using rule 75 (termino1 -> posibleID .)
    COMA            reduce using rule 75 (termino1 -> posibleID .)
    CPAREN          reduce using rule 75 (termino1 -> posibleID .)
    CCORCH          reduce using rule 75 (termino1 -> posibleID .)
    HAZ             reduce using rule 75 (termino1 -> posibleID .)


state 89

    (76) termino1 -> ENTERO . np_contieneID_Constante_Entero
    (92) np_contieneID_Constante_Entero -> .

    OPMATRIZ        reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    PLUS            reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    MINUS           reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    MULTIPLY        reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    DIVIDE          reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    SEMICOLON       reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    LOGIC           reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    RELOP           reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    COMA            reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    CPAREN          reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    CCORCH          reduce using rule 92 (np_contieneID_Constante_Entero -> .)
    HAZ             reduce using rule 92 (np_contieneID_Constante_Entero -> .)

    np_contieneID_Constante_Entero shift and go to state 122

state 90

    (77) termino1 -> FLOTANTE . np_contieneID_Constante_Flotante
    (93) np_contieneID_Constante_Flotante -> .

    OPMATRIZ        reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    PLUS            reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    MINUS           reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    MULTIPLY        reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    DIVIDE          reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    SEMICOLON       reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    LOGIC           reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    RELOP           reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    COMA            reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    CPAREN          reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    CCORCH          reduce using rule 93 (np_contieneID_Constante_Flotante -> .)
    HAZ             reduce using rule 93 (np_contieneID_Constante_Flotante -> .)

    np_contieneID_Constante_Flotante shift and go to state 123

state 91

    (78) termino1 -> llamadaFuncion .

    OPMATRIZ        reduce using rule 78 (termino1 -> llamadaFuncion .)
    PLUS            reduce using rule 78 (termino1 -> llamadaFuncion .)
    MINUS           reduce using rule 78 (termino1 -> llamadaFuncion .)
    MULTIPLY        reduce using rule 78 (termino1 -> llamadaFuncion .)
    DIVIDE          reduce using rule 78 (termino1 -> llamadaFuncion .)
    SEMICOLON       reduce using rule 78 (termino1 -> llamadaFuncion .)
    LOGIC           reduce using rule 78 (termino1 -> llamadaFuncion .)
    RELOP           reduce using rule 78 (termino1 -> llamadaFuncion .)
    COMA            reduce using rule 78 (termino1 -> llamadaFuncion .)
    CPAREN          reduce using rule 78 (termino1 -> llamadaFuncion .)
    CCORCH          reduce using rule 78 (termino1 -> llamadaFuncion .)
    HAZ             reduce using rule 78 (termino1 -> llamadaFuncion .)


state 92

    (86) termino1 -> OPAREN . np_insertarOperador expresion CPAREN np_insertarOperador
    (72) np_insertarOperador -> .

    ENTERO          reduce using rule 72 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 72 (np_insertarOperador -> .)
    OPAREN          reduce using rule 72 (np_insertarOperador -> .)
    QUOT            reduce using rule 72 (np_insertarOperador -> .)
    ID              reduce using rule 72 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 124

state 93

    (87) termino1 -> QUOT . CARACTER QUOT

    CARACTER        shift and go to state 125


state 94

    (79) posibleID -> ID . np_contieneID np_enviarACuadruplos
    (80) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (56) llamadaFuncion -> ID . OPAREN primerParametro extraParametros CPAREN
    (91) np_contieneID -> .

    OPAREN          shift and go to state 96
    OCORCH          reduce using rule 91 (np_contieneID -> .)
    OPMATRIZ        reduce using rule 91 (np_contieneID -> .)
    PLUS            reduce using rule 91 (np_contieneID -> .)
    MINUS           reduce using rule 91 (np_contieneID -> .)
    MULTIPLY        reduce using rule 91 (np_contieneID -> .)
    DIVIDE          reduce using rule 91 (np_contieneID -> .)
    SEMICOLON       reduce using rule 91 (np_contieneID -> .)
    LOGIC           reduce using rule 91 (np_contieneID -> .)
    RELOP           reduce using rule 91 (np_contieneID -> .)
    COMA            reduce using rule 91 (np_contieneID -> .)
    CPAREN          reduce using rule 91 (np_contieneID -> .)
    CCORCH          reduce using rule 91 (np_contieneID -> .)
    HAZ             reduce using rule 91 (np_contieneID -> .)

    np_contieneID                  shift and go to state 97

state 95

    (88) estatutoRepeticionIncondicional -> DESDE ID . np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (91) np_contieneID -> .

    HASTA           reduce using rule 91 (np_contieneID -> .)

    np_contieneID                  shift and go to state 126

state 96

    (56) llamadaFuncion -> ID OPAREN . primerParametro extraParametros CPAREN
    (57) primerParametro -> . expresion
    (58) primerParametro -> . empty
    (65) expresion -> . expresion LOGIC np_insertarOperador expresion
    (66) expresion -> . expresion RELOP np_insertarOperador expresion
    (67) expresion -> . termino
    (98) empty -> .
    (68) termino -> . termino PLUS np_insertarOperador termino
    (69) termino -> . termino MINUS np_insertarOperador termino
    (70) termino -> . termino MULTIPLY np_insertarOperador termino
    (71) termino -> . termino DIVIDE np_insertarOperador termino
    (73) termino -> . termino1 OPMATRIZ np_insertarOperador
    (74) termino -> . termino1
    (75) termino1 -> . posibleID
    (76) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (77) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (78) termino1 -> . llamadaFuncion
    (86) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (87) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    COMA            reduce using rule 98 (empty -> .)
    CPAREN          reduce using rule 98 (empty -> .)
    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90
    OPAREN          shift and go to state 92
    QUOT            shift and go to state 93
    ID              shift and go to state 94

    primerParametro                shift and go to state 127
    expresion                      shift and go to state 128
    empty                          shift and go to state 129
    termino                        shift and go to state 86
    termino1                       shift and go to state 87
    posibleID                      shift and go to state 88
    llamadaFuncion                 shift and go to state 91

state 97

    (79) posibleID -> ID np_contieneID . np_enviarACuadruplos
    (80) posibleID -> ID np_contieneID . np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> ID np_contieneID . np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (82) np_enviarACuadruplos -> .

    OCORCH          reduce using rule 82 (np_enviarACuadruplos -> .)
    ASSIGN          reduce using rule 82 (np_enviarACuadruplos -> .)
    OPMATRIZ        reduce using rule 82 (np_enviarACuadruplos -> .)
    PLUS            reduce using rule 82 (np_enviarACuadruplos -> .)
    MINUS           reduce using rule 82 (np_enviarACuadruplos -> .)
    MULTIPLY        reduce using rule 82 (np_enviarACuadruplos -> .)
    DIVIDE          reduce using rule 82 (np_enviarACuadruplos -> .)
    SEMICOLON       reduce using rule 82 (np_enviarACuadruplos -> .)
    LOGIC           reduce using rule 82 (np_enviarACuadruplos -> .)
    RELOP           reduce using rule 82 (np_enviarACuadruplos -> .)
    COMA            reduce using rule 82 (np_enviarACuadruplos -> .)
    CPAREN          reduce using rule 82 (np_enviarACuadruplos -> .)
    CCORCH          reduce using rule 82 (np_enviarACuadruplos -> .)
    HAZ             reduce using rule 82 (np_enviarACuadruplos -> .)

    np_enviarACuadruplos           shift and go to state 130

state 98

    (89) estatutoRepeticionCondicional -> MIENTRAS OPAREN . expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (65) expresion -> . expresion LOGIC np_insertarOperador expresion
    (66) expresion -> . expresion RELOP np_insertarOperador expresion
    (67) expresion -> . termino
    (68) termino -> . termino PLUS np_insertarOperador termino
    (69) termino -> . termino MINUS np_insertarOperador termino
    (70) termino -> . termino MULTIPLY np_insertarOperador termino
    (71) termino -> . termino DIVIDE np_insertarOperador termino
    (73) termino -> . termino1 OPMATRIZ np_insertarOperador
    (74) termino -> . termino1
    (75) termino1 -> . posibleID
    (76) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (77) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (78) termino1 -> . llamadaFuncion
    (86) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (87) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90
    OPAREN          shift and go to state 92
    QUOT            shift and go to state 93
    ID              shift and go to state 94

    expresion                      shift and go to state 131
    termino                        shift and go to state 86
    termino1                       shift and go to state 87
    posibleID                      shift and go to state 88
    llamadaFuncion                 shift and go to state 91

state 99

    (61) lectura -> LEE OPAREN . posibleID lectura2 CPAREN SEMICOLON
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    ID              shift and go to state 133

    posibleID                      shift and go to state 132

state 100

    (64) asignacion -> posibleID ASSIGN . np_insertarOperador expresion SEMICOLON
    (72) np_insertarOperador -> .

    ENTERO          reduce using rule 72 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 72 (np_insertarOperador -> .)
    OPAREN          reduce using rule 72 (np_insertarOperador -> .)
    QUOT            reduce using rule 72 (np_insertarOperador -> .)
    ID              reduce using rule 72 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 134

state 101

    (43) escritura -> ESCRIBE OPAREN . escritura2 CPAREN SEMICOLON
    (44) escritura2 -> . empty
    (45) escritura2 -> . posibleID escritura3
    (46) escritura2 -> . STRING escritura3
    (98) empty -> .
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    STRING          shift and go to state 138
    CPAREN          reduce using rule 98 (empty -> .)
    ID              shift and go to state 133

    escritura2                     shift and go to state 135
    empty                          shift and go to state 136
    posibleID                      shift and go to state 137

state 102

    (50) decision -> SI OPAREN . expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> SI OPAREN . expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (65) expresion -> . expresion LOGIC np_insertarOperador expresion
    (66) expresion -> . expresion RELOP np_insertarOperador expresion
    (67) expresion -> . termino
    (68) termino -> . termino PLUS np_insertarOperador termino
    (69) termino -> . termino MINUS np_insertarOperador termino
    (70) termino -> . termino MULTIPLY np_insertarOperador termino
    (71) termino -> . termino DIVIDE np_insertarOperador termino
    (73) termino -> . termino1 OPMATRIZ np_insertarOperador
    (74) termino -> . termino1
    (75) termino1 -> . posibleID
    (76) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (77) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (78) termino1 -> . llamadaFuncion
    (86) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (87) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90
    OPAREN          shift and go to state 92
    QUOT            shift and go to state 93
    ID              shift and go to state 94

    expresion                      shift and go to state 139
    termino                        shift and go to state 86
    termino1                       shift and go to state 87
    posibleID                      shift and go to state 88
    llamadaFuncion                 shift and go to state 91

state 103

    (11) declaracion2 -> np_agregarFondo posibleIDDeclaracion np_addVariable . np_actualizarDimensiones declaracion3
    (96) np_actualizarDimensiones -> .

    ASSIGN          reduce using rule 96 (np_actualizarDimensiones -> .)
    SEMICOLON       reduce using rule 96 (np_actualizarDimensiones -> .)
    COMA            reduce using rule 96 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 140

state 104

    (84) posibleIDDeclaracion -> ID OCORCH . expresion CCORCH
    (85) posibleIDDeclaracion -> ID OCORCH . expresion COMA expresion CCORCH
    (65) expresion -> . expresion LOGIC np_insertarOperador expresion
    (66) expresion -> . expresion RELOP np_insertarOperador expresion
    (67) expresion -> . termino
    (68) termino -> . termino PLUS np_insertarOperador termino
    (69) termino -> . termino MINUS np_insertarOperador termino
    (70) termino -> . termino MULTIPLY np_insertarOperador termino
    (71) termino -> . termino DIVIDE np_insertarOperador termino
    (73) termino -> . termino1 OPMATRIZ np_insertarOperador
    (74) termino -> . termino1
    (75) termino1 -> . posibleID
    (76) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (77) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (78) termino1 -> . llamadaFuncion
    (86) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (87) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90
    OPAREN          shift and go to state 92
    QUOT            shift and go to state 93
    ID              shift and go to state 94

    expresion                      shift and go to state 141
    termino                        shift and go to state 86
    termino1                       shift and go to state 87
    posibleID                      shift and go to state 88
    llamadaFuncion                 shift and go to state 91

state 105

    (18) declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN . declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (30) declaracionFuncionVariables -> . empty
    (31) declaracionFuncionVariables -> . declaracion
    (98) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2

    OBRACKET        reduce using rule 98 (empty -> .)
    VAR             shift and go to state 8

    declaracionFuncionVariables    shift and go to state 142
    empty                          shift and go to state 143
    declaracion                    shift and go to state 144

state 106

    (23) declaracionFuncionParametros -> INT ID . np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (94) np_addVariableParametro -> .

    COMA            reduce using rule 94 (np_addVariableParametro -> .)
    CPAREN          reduce using rule 94 (np_addVariableParametro -> .)

    np_addVariableParametro        shift and go to state 145

state 107

    (24) declaracionFuncionParametros -> FLOAT ID . np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (94) np_addVariableParametro -> .

    COMA            reduce using rule 94 (np_addVariableParametro -> .)
    CPAREN          reduce using rule 94 (np_addVariableParametro -> .)

    np_addVariableParametro        shift and go to state 146

state 108

    (25) declaracionFuncionParametros -> CHAR ID . np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (94) np_addVariableParametro -> .

    COMA            reduce using rule 94 (np_addVariableParametro -> .)
    CPAREN          reduce using rule 94 (np_addVariableParametro -> .)

    np_addVariableParametro        shift and go to state 147

state 109

    (19) declaracionFuncion -> FUNCION INT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN . declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (30) declaracionFuncionVariables -> . empty
    (31) declaracionFuncionVariables -> . declaracion
    (98) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2

    OBRACKET        reduce using rule 98 (empty -> .)
    VAR             shift and go to state 8

    declaracionFuncionVariables    shift and go to state 148
    empty                          shift and go to state 143
    declaracion                    shift and go to state 144

state 110

    (20) declaracionFuncion -> FUNCION FLOAT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN . declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (30) declaracionFuncionVariables -> . empty
    (31) declaracionFuncionVariables -> . declaracion
    (98) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2

    OBRACKET        reduce using rule 98 (empty -> .)
    VAR             shift and go to state 8

    declaracionFuncionVariables    shift and go to state 149
    empty                          shift and go to state 143
    declaracion                    shift and go to state 144

state 111

    (21) declaracionFuncion -> FUNCION CHAR ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN . declaracionFuncionVariables OBRACKET estatutos CBRACKET
    (30) declaracionFuncionVariables -> . empty
    (31) declaracionFuncionVariables -> . declaracion
    (98) empty -> .
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2

    OBRACKET        reduce using rule 98 (empty -> .)
    VAR             shift and go to state 8

    declaracionFuncionVariables    shift and go to state 150
    empty                          shift and go to state 143
    declaracion                    shift and go to state 144

state 112

    (6) principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos .

    $end            reduce using rule 6 (principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos .)


state 113

    (42) estatutos -> llamadaFuncion SEMICOLON estatutos .

    CBRACKET        reduce using rule 42 (estatutos -> llamadaFuncion SEMICOLON estatutos .)


state 114

    (90) return -> REGRESA expresion SEMICOLON .

    CBRACKET        reduce using rule 90 (return -> REGRESA expresion SEMICOLON .)


state 115

    (65) expresion -> expresion LOGIC . np_insertarOperador expresion
    (72) np_insertarOperador -> .

    ENTERO          reduce using rule 72 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 72 (np_insertarOperador -> .)
    OPAREN          reduce using rule 72 (np_insertarOperador -> .)
    QUOT            reduce using rule 72 (np_insertarOperador -> .)
    ID              reduce using rule 72 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 151

state 116

    (66) expresion -> expresion RELOP . np_insertarOperador expresion
    (72) np_insertarOperador -> .

    ENTERO          reduce using rule 72 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 72 (np_insertarOperador -> .)
    OPAREN          reduce using rule 72 (np_insertarOperador -> .)
    QUOT            reduce using rule 72 (np_insertarOperador -> .)
    ID              reduce using rule 72 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 152

state 117

    (68) termino -> termino PLUS . np_insertarOperador termino
    (72) np_insertarOperador -> .

    ENTERO          reduce using rule 72 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 72 (np_insertarOperador -> .)
    OPAREN          reduce using rule 72 (np_insertarOperador -> .)
    QUOT            reduce using rule 72 (np_insertarOperador -> .)
    ID              reduce using rule 72 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 153

state 118

    (69) termino -> termino MINUS . np_insertarOperador termino
    (72) np_insertarOperador -> .

    ENTERO          reduce using rule 72 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 72 (np_insertarOperador -> .)
    OPAREN          reduce using rule 72 (np_insertarOperador -> .)
    QUOT            reduce using rule 72 (np_insertarOperador -> .)
    ID              reduce using rule 72 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 154

state 119

    (70) termino -> termino MULTIPLY . np_insertarOperador termino
    (72) np_insertarOperador -> .

    ENTERO          reduce using rule 72 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 72 (np_insertarOperador -> .)
    OPAREN          reduce using rule 72 (np_insertarOperador -> .)
    QUOT            reduce using rule 72 (np_insertarOperador -> .)
    ID              reduce using rule 72 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 155

state 120

    (71) termino -> termino DIVIDE . np_insertarOperador termino
    (72) np_insertarOperador -> .

    ENTERO          reduce using rule 72 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 72 (np_insertarOperador -> .)
    OPAREN          reduce using rule 72 (np_insertarOperador -> .)
    QUOT            reduce using rule 72 (np_insertarOperador -> .)
    ID              reduce using rule 72 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 156

state 121

    (73) termino -> termino1 OPMATRIZ . np_insertarOperador
    (72) np_insertarOperador -> .

    PLUS            reduce using rule 72 (np_insertarOperador -> .)
    MINUS           reduce using rule 72 (np_insertarOperador -> .)
    MULTIPLY        reduce using rule 72 (np_insertarOperador -> .)
    DIVIDE          reduce using rule 72 (np_insertarOperador -> .)
    SEMICOLON       reduce using rule 72 (np_insertarOperador -> .)
    LOGIC           reduce using rule 72 (np_insertarOperador -> .)
    RELOP           reduce using rule 72 (np_insertarOperador -> .)
    COMA            reduce using rule 72 (np_insertarOperador -> .)
    CPAREN          reduce using rule 72 (np_insertarOperador -> .)
    CCORCH          reduce using rule 72 (np_insertarOperador -> .)
    HAZ             reduce using rule 72 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 157

state 122

    (76) termino1 -> ENTERO np_contieneID_Constante_Entero .

    OPMATRIZ        reduce using rule 76 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    PLUS            reduce using rule 76 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    MINUS           reduce using rule 76 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    MULTIPLY        reduce using rule 76 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    DIVIDE          reduce using rule 76 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    SEMICOLON       reduce using rule 76 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    LOGIC           reduce using rule 76 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    RELOP           reduce using rule 76 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    COMA            reduce using rule 76 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    CPAREN          reduce using rule 76 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    CCORCH          reduce using rule 76 (termino1 -> ENTERO np_contieneID_Constante_Entero .)
    HAZ             reduce using rule 76 (termino1 -> ENTERO np_contieneID_Constante_Entero .)


state 123

    (77) termino1 -> FLOTANTE np_contieneID_Constante_Flotante .

    OPMATRIZ        reduce using rule 77 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    PLUS            reduce using rule 77 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    MINUS           reduce using rule 77 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    MULTIPLY        reduce using rule 77 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    DIVIDE          reduce using rule 77 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    SEMICOLON       reduce using rule 77 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    LOGIC           reduce using rule 77 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    RELOP           reduce using rule 77 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    COMA            reduce using rule 77 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    CPAREN          reduce using rule 77 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    CCORCH          reduce using rule 77 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)
    HAZ             reduce using rule 77 (termino1 -> FLOTANTE np_contieneID_Constante_Flotante .)


state 124

    (86) termino1 -> OPAREN np_insertarOperador . expresion CPAREN np_insertarOperador
    (65) expresion -> . expresion LOGIC np_insertarOperador expresion
    (66) expresion -> . expresion RELOP np_insertarOperador expresion
    (67) expresion -> . termino
    (68) termino -> . termino PLUS np_insertarOperador termino
    (69) termino -> . termino MINUS np_insertarOperador termino
    (70) termino -> . termino MULTIPLY np_insertarOperador termino
    (71) termino -> . termino DIVIDE np_insertarOperador termino
    (73) termino -> . termino1 OPMATRIZ np_insertarOperador
    (74) termino -> . termino1
    (75) termino1 -> . posibleID
    (76) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (77) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (78) termino1 -> . llamadaFuncion
    (86) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (87) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90
    OPAREN          shift and go to state 92
    QUOT            shift and go to state 93
    ID              shift and go to state 94

    expresion                      shift and go to state 158
    termino                        shift and go to state 86
    termino1                       shift and go to state 87
    posibleID                      shift and go to state 88
    llamadaFuncion                 shift and go to state 91

state 125

    (87) termino1 -> QUOT CARACTER . QUOT

    QUOT            shift and go to state 159


state 126

    (88) estatutoRepeticionIncondicional -> DESDE ID np_contieneID . HASTA expresion HAZ OBRACKET estatutos CBRACKET

    HASTA           shift and go to state 160


state 127

    (56) llamadaFuncion -> ID OPAREN primerParametro . extraParametros CPAREN
    (59) extraParametros -> . COMA expresion extraParametros
    (60) extraParametros -> . empty
    (98) empty -> .

    COMA            shift and go to state 162
    CPAREN          reduce using rule 98 (empty -> .)

    extraParametros                shift and go to state 161
    empty                          shift and go to state 163

state 128

    (57) primerParametro -> expresion .
    (65) expresion -> expresion . LOGIC np_insertarOperador expresion
    (66) expresion -> expresion . RELOP np_insertarOperador expresion

    COMA            reduce using rule 57 (primerParametro -> expresion .)
    CPAREN          reduce using rule 57 (primerParametro -> expresion .)
    LOGIC           shift and go to state 115
    RELOP           shift and go to state 116


state 129

    (58) primerParametro -> empty .

    COMA            reduce using rule 58 (primerParametro -> empty .)
    CPAREN          reduce using rule 58 (primerParametro -> empty .)


state 130

    (79) posibleID -> ID np_contieneID np_enviarACuadruplos .
    (80) posibleID -> ID np_contieneID np_enviarACuadruplos . OCORCH expresion CCORCH
    (81) posibleID -> ID np_contieneID np_enviarACuadruplos . OCORCH expresion COMA expresion CCORCH

    ASSIGN          reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    OPMATRIZ        reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    PLUS            reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    MINUS           reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    MULTIPLY        reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    DIVIDE          reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    SEMICOLON       reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    LOGIC           reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    RELOP           reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    COMA            reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    CPAREN          reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    CCORCH          reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    HAZ             reduce using rule 79 (posibleID -> ID np_contieneID np_enviarACuadruplos .)
    OCORCH          shift and go to state 164


state 131

    (89) estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion . CPAREN HAZ OBRACKET estatutos CBRACKET
    (65) expresion -> expresion . LOGIC np_insertarOperador expresion
    (66) expresion -> expresion . RELOP np_insertarOperador expresion

    CPAREN          shift and go to state 165
    LOGIC           shift and go to state 115
    RELOP           shift and go to state 116


state 132

    (61) lectura -> LEE OPAREN posibleID . lectura2 CPAREN SEMICOLON
    (62) lectura2 -> . empty
    (63) lectura2 -> . COMA posibleID lectura2
    (98) empty -> .

    COMA            shift and go to state 168
    CPAREN          reduce using rule 98 (empty -> .)

    lectura2                       shift and go to state 166
    empty                          shift and go to state 167

state 133

    (79) posibleID -> ID . np_contieneID np_enviarACuadruplos
    (80) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> ID . np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (91) np_contieneID -> .

    OCORCH          reduce using rule 91 (np_contieneID -> .)
    COMA            reduce using rule 91 (np_contieneID -> .)
    CPAREN          reduce using rule 91 (np_contieneID -> .)

    np_contieneID                  shift and go to state 97

state 134

    (64) asignacion -> posibleID ASSIGN np_insertarOperador . expresion SEMICOLON
    (65) expresion -> . expresion LOGIC np_insertarOperador expresion
    (66) expresion -> . expresion RELOP np_insertarOperador expresion
    (67) expresion -> . termino
    (68) termino -> . termino PLUS np_insertarOperador termino
    (69) termino -> . termino MINUS np_insertarOperador termino
    (70) termino -> . termino MULTIPLY np_insertarOperador termino
    (71) termino -> . termino DIVIDE np_insertarOperador termino
    (73) termino -> . termino1 OPMATRIZ np_insertarOperador
    (74) termino -> . termino1
    (75) termino1 -> . posibleID
    (76) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (77) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (78) termino1 -> . llamadaFuncion
    (86) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (87) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90
    OPAREN          shift and go to state 92
    QUOT            shift and go to state 93
    ID              shift and go to state 94

    posibleID                      shift and go to state 88
    expresion                      shift and go to state 169
    termino                        shift and go to state 86
    termino1                       shift and go to state 87
    llamadaFuncion                 shift and go to state 91

state 135

    (43) escritura -> ESCRIBE OPAREN escritura2 . CPAREN SEMICOLON

    CPAREN          shift and go to state 170


state 136

    (44) escritura2 -> empty .

    CPAREN          reduce using rule 44 (escritura2 -> empty .)


state 137

    (45) escritura2 -> posibleID . escritura3
    (47) escritura3 -> . empty
    (48) escritura3 -> . COMA expresion escritura3
    (49) escritura3 -> . COMA STRING escritura3
    (98) empty -> .

    COMA            shift and go to state 173
    CPAREN          reduce using rule 98 (empty -> .)

    escritura3                     shift and go to state 171
    empty                          shift and go to state 172

state 138

    (46) escritura2 -> STRING . escritura3
    (47) escritura3 -> . empty
    (48) escritura3 -> . COMA expresion escritura3
    (49) escritura3 -> . COMA STRING escritura3
    (98) empty -> .

    COMA            shift and go to state 173
    CPAREN          reduce using rule 98 (empty -> .)

    escritura3                     shift and go to state 174
    empty                          shift and go to state 172

state 139

    (50) decision -> SI OPAREN expresion . np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> SI OPAREN expresion . np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (65) expresion -> expresion . LOGIC np_insertarOperador expresion
    (66) expresion -> expresion . RELOP np_insertarOperador expresion
    (52) np_iniciaIf -> .

    LOGIC           shift and go to state 115
    RELOP           shift and go to state 116
    CPAREN          reduce using rule 52 (np_iniciaIf -> .)

    np_iniciaIf                    shift and go to state 175

state 140

    (11) declaracion2 -> np_agregarFondo posibleIDDeclaracion np_addVariable np_actualizarDimensiones . declaracion3
    (12) declaracion3 -> . np_quitarFondo SEMICOLON
    (13) declaracion3 -> . np_quitarFondo COMA declaracion2
    (14) declaracion3 -> . ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON
    (15) declaracion3 -> . ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2
    (17) np_quitarFondo -> .

    ASSIGN          shift and go to state 178
    SEMICOLON       reduce using rule 17 (np_quitarFondo -> .)
    COMA            reduce using rule 17 (np_quitarFondo -> .)

    declaracion3                   shift and go to state 176
    np_quitarFondo                 shift and go to state 177

state 141

    (84) posibleIDDeclaracion -> ID OCORCH expresion . CCORCH
    (85) posibleIDDeclaracion -> ID OCORCH expresion . COMA expresion CCORCH
    (65) expresion -> expresion . LOGIC np_insertarOperador expresion
    (66) expresion -> expresion . RELOP np_insertarOperador expresion

    CCORCH          shift and go to state 179
    COMA            shift and go to state 180
    LOGIC           shift and go to state 115
    RELOP           shift and go to state 116


state 142

    (18) declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables . OBRACKET estatutos CBRACKET

    OBRACKET        shift and go to state 181


state 143

    (30) declaracionFuncionVariables -> empty .

    OBRACKET        reduce using rule 30 (declaracionFuncionVariables -> empty .)


state 144

    (31) declaracionFuncionVariables -> declaracion .

    OBRACKET        reduce using rule 31 (declaracionFuncionVariables -> declaracion .)


state 145

    (23) declaracionFuncionParametros -> INT ID np_addVariableParametro . np_actualizarDimensiones declaracionFuncionParametros2
    (96) np_actualizarDimensiones -> .

    COMA            reduce using rule 96 (np_actualizarDimensiones -> .)
    CPAREN          reduce using rule 96 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 182

state 146

    (24) declaracionFuncionParametros -> FLOAT ID np_addVariableParametro . np_actualizarDimensiones declaracionFuncionParametros2
    (96) np_actualizarDimensiones -> .

    COMA            reduce using rule 96 (np_actualizarDimensiones -> .)
    CPAREN          reduce using rule 96 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 183

state 147

    (25) declaracionFuncionParametros -> CHAR ID np_addVariableParametro . np_actualizarDimensiones declaracionFuncionParametros2
    (96) np_actualizarDimensiones -> .

    COMA            reduce using rule 96 (np_actualizarDimensiones -> .)
    CPAREN          reduce using rule 96 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 184

state 148

    (19) declaracionFuncion -> FUNCION INT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables . OBRACKET estatutos CBRACKET

    OBRACKET        shift and go to state 185


state 149

    (20) declaracionFuncion -> FUNCION FLOAT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables . OBRACKET estatutos CBRACKET

    OBRACKET        shift and go to state 186


state 150

    (21) declaracionFuncion -> FUNCION CHAR ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables . OBRACKET estatutos CBRACKET

    OBRACKET        shift and go to state 187


state 151

    (65) expresion -> expresion LOGIC np_insertarOperador . expresion
    (65) expresion -> . expresion LOGIC np_insertarOperador expresion
    (66) expresion -> . expresion RELOP np_insertarOperador expresion
    (67) expresion -> . termino
    (68) termino -> . termino PLUS np_insertarOperador termino
    (69) termino -> . termino MINUS np_insertarOperador termino
    (70) termino -> . termino MULTIPLY np_insertarOperador termino
    (71) termino -> . termino DIVIDE np_insertarOperador termino
    (73) termino -> . termino1 OPMATRIZ np_insertarOperador
    (74) termino -> . termino1
    (75) termino1 -> . posibleID
    (76) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (77) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (78) termino1 -> . llamadaFuncion
    (86) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (87) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90
    OPAREN          shift and go to state 92
    QUOT            shift and go to state 93
    ID              shift and go to state 94

    expresion                      shift and go to state 188
    termino                        shift and go to state 86
    termino1                       shift and go to state 87
    posibleID                      shift and go to state 88
    llamadaFuncion                 shift and go to state 91

state 152

    (66) expresion -> expresion RELOP np_insertarOperador . expresion
    (65) expresion -> . expresion LOGIC np_insertarOperador expresion
    (66) expresion -> . expresion RELOP np_insertarOperador expresion
    (67) expresion -> . termino
    (68) termino -> . termino PLUS np_insertarOperador termino
    (69) termino -> . termino MINUS np_insertarOperador termino
    (70) termino -> . termino MULTIPLY np_insertarOperador termino
    (71) termino -> . termino DIVIDE np_insertarOperador termino
    (73) termino -> . termino1 OPMATRIZ np_insertarOperador
    (74) termino -> . termino1
    (75) termino1 -> . posibleID
    (76) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (77) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (78) termino1 -> . llamadaFuncion
    (86) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (87) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90
    OPAREN          shift and go to state 92
    QUOT            shift and go to state 93
    ID              shift and go to state 94

    expresion                      shift and go to state 189
    termino                        shift and go to state 86
    termino1                       shift and go to state 87
    posibleID                      shift and go to state 88
    llamadaFuncion                 shift and go to state 91

state 153

    (68) termino -> termino PLUS np_insertarOperador . termino
    (68) termino -> . termino PLUS np_insertarOperador termino
    (69) termino -> . termino MINUS np_insertarOperador termino
    (70) termino -> . termino MULTIPLY np_insertarOperador termino
    (71) termino -> . termino DIVIDE np_insertarOperador termino
    (73) termino -> . termino1 OPMATRIZ np_insertarOperador
    (74) termino -> . termino1
    (75) termino1 -> . posibleID
    (76) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (77) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (78) termino1 -> . llamadaFuncion
    (86) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (87) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90
    OPAREN          shift and go to state 92
    QUOT            shift and go to state 93
    ID              shift and go to state 94

    termino                        shift and go to state 190
    termino1                       shift and go to state 87
    posibleID                      shift and go to state 88
    llamadaFuncion                 shift and go to state 91

state 154

    (69) termino -> termino MINUS np_insertarOperador . termino
    (68) termino -> . termino PLUS np_insertarOperador termino
    (69) termino -> . termino MINUS np_insertarOperador termino
    (70) termino -> . termino MULTIPLY np_insertarOperador termino
    (71) termino -> . termino DIVIDE np_insertarOperador termino
    (73) termino -> . termino1 OPMATRIZ np_insertarOperador
    (74) termino -> . termino1
    (75) termino1 -> . posibleID
    (76) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (77) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (78) termino1 -> . llamadaFuncion
    (86) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (87) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90
    OPAREN          shift and go to state 92
    QUOT            shift and go to state 93
    ID              shift and go to state 94

    termino                        shift and go to state 191
    termino1                       shift and go to state 87
    posibleID                      shift and go to state 88
    llamadaFuncion                 shift and go to state 91

state 155

    (70) termino -> termino MULTIPLY np_insertarOperador . termino
    (68) termino -> . termino PLUS np_insertarOperador termino
    (69) termino -> . termino MINUS np_insertarOperador termino
    (70) termino -> . termino MULTIPLY np_insertarOperador termino
    (71) termino -> . termino DIVIDE np_insertarOperador termino
    (73) termino -> . termino1 OPMATRIZ np_insertarOperador
    (74) termino -> . termino1
    (75) termino1 -> . posibleID
    (76) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (77) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (78) termino1 -> . llamadaFuncion
    (86) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (87) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90
    OPAREN          shift and go to state 92
    QUOT            shift and go to state 93
    ID              shift and go to state 94

    termino                        shift and go to state 192
    termino1                       shift and go to state 87
    posibleID                      shift and go to state 88
    llamadaFuncion                 shift and go to state 91

state 156

    (71) termino -> termino DIVIDE np_insertarOperador . termino
    (68) termino -> . termino PLUS np_insertarOperador termino
    (69) termino -> . termino MINUS np_insertarOperador termino
    (70) termino -> . termino MULTIPLY np_insertarOperador termino
    (71) termino -> . termino DIVIDE np_insertarOperador termino
    (73) termino -> . termino1 OPMATRIZ np_insertarOperador
    (74) termino -> . termino1
    (75) termino1 -> . posibleID
    (76) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (77) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (78) termino1 -> . llamadaFuncion
    (86) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (87) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90
    OPAREN          shift and go to state 92
    QUOT            shift and go to state 93
    ID              shift and go to state 94

    termino                        shift and go to state 193
    termino1                       shift and go to state 87
    posibleID                      shift and go to state 88
    llamadaFuncion                 shift and go to state 91

state 157

    (73) termino -> termino1 OPMATRIZ np_insertarOperador .

    PLUS            reduce using rule 73 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    MINUS           reduce using rule 73 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    MULTIPLY        reduce using rule 73 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    DIVIDE          reduce using rule 73 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    SEMICOLON       reduce using rule 73 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    LOGIC           reduce using rule 73 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    RELOP           reduce using rule 73 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    COMA            reduce using rule 73 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    CPAREN          reduce using rule 73 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    CCORCH          reduce using rule 73 (termino -> termino1 OPMATRIZ np_insertarOperador .)
    HAZ             reduce using rule 73 (termino -> termino1 OPMATRIZ np_insertarOperador .)


state 158

    (86) termino1 -> OPAREN np_insertarOperador expresion . CPAREN np_insertarOperador
    (65) expresion -> expresion . LOGIC np_insertarOperador expresion
    (66) expresion -> expresion . RELOP np_insertarOperador expresion

    CPAREN          shift and go to state 194
    LOGIC           shift and go to state 115
    RELOP           shift and go to state 116


state 159

    (87) termino1 -> QUOT CARACTER QUOT .

    OPMATRIZ        reduce using rule 87 (termino1 -> QUOT CARACTER QUOT .)
    PLUS            reduce using rule 87 (termino1 -> QUOT CARACTER QUOT .)
    MINUS           reduce using rule 87 (termino1 -> QUOT CARACTER QUOT .)
    MULTIPLY        reduce using rule 87 (termino1 -> QUOT CARACTER QUOT .)
    DIVIDE          reduce using rule 87 (termino1 -> QUOT CARACTER QUOT .)
    SEMICOLON       reduce using rule 87 (termino1 -> QUOT CARACTER QUOT .)
    LOGIC           reduce using rule 87 (termino1 -> QUOT CARACTER QUOT .)
    RELOP           reduce using rule 87 (termino1 -> QUOT CARACTER QUOT .)
    COMA            reduce using rule 87 (termino1 -> QUOT CARACTER QUOT .)
    CPAREN          reduce using rule 87 (termino1 -> QUOT CARACTER QUOT .)
    CCORCH          reduce using rule 87 (termino1 -> QUOT CARACTER QUOT .)
    HAZ             reduce using rule 87 (termino1 -> QUOT CARACTER QUOT .)


state 160

    (88) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA . expresion HAZ OBRACKET estatutos CBRACKET
    (65) expresion -> . expresion LOGIC np_insertarOperador expresion
    (66) expresion -> . expresion RELOP np_insertarOperador expresion
    (67) expresion -> . termino
    (68) termino -> . termino PLUS np_insertarOperador termino
    (69) termino -> . termino MINUS np_insertarOperador termino
    (70) termino -> . termino MULTIPLY np_insertarOperador termino
    (71) termino -> . termino DIVIDE np_insertarOperador termino
    (73) termino -> . termino1 OPMATRIZ np_insertarOperador
    (74) termino -> . termino1
    (75) termino1 -> . posibleID
    (76) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (77) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (78) termino1 -> . llamadaFuncion
    (86) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (87) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90
    OPAREN          shift and go to state 92
    QUOT            shift and go to state 93
    ID              shift and go to state 94

    expresion                      shift and go to state 195
    termino                        shift and go to state 86
    termino1                       shift and go to state 87
    posibleID                      shift and go to state 88
    llamadaFuncion                 shift and go to state 91

state 161

    (56) llamadaFuncion -> ID OPAREN primerParametro extraParametros . CPAREN

    CPAREN          shift and go to state 196


state 162

    (59) extraParametros -> COMA . expresion extraParametros
    (65) expresion -> . expresion LOGIC np_insertarOperador expresion
    (66) expresion -> . expresion RELOP np_insertarOperador expresion
    (67) expresion -> . termino
    (68) termino -> . termino PLUS np_insertarOperador termino
    (69) termino -> . termino MINUS np_insertarOperador termino
    (70) termino -> . termino MULTIPLY np_insertarOperador termino
    (71) termino -> . termino DIVIDE np_insertarOperador termino
    (73) termino -> . termino1 OPMATRIZ np_insertarOperador
    (74) termino -> . termino1
    (75) termino1 -> . posibleID
    (76) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (77) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (78) termino1 -> . llamadaFuncion
    (86) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (87) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90
    OPAREN          shift and go to state 92
    QUOT            shift and go to state 93
    ID              shift and go to state 94

    expresion                      shift and go to state 197
    termino                        shift and go to state 86
    termino1                       shift and go to state 87
    posibleID                      shift and go to state 88
    llamadaFuncion                 shift and go to state 91

state 163

    (60) extraParametros -> empty .

    CPAREN          reduce using rule 60 (extraParametros -> empty .)


state 164

    (80) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH . expresion CCORCH
    (81) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH . expresion COMA expresion CCORCH
    (65) expresion -> . expresion LOGIC np_insertarOperador expresion
    (66) expresion -> . expresion RELOP np_insertarOperador expresion
    (67) expresion -> . termino
    (68) termino -> . termino PLUS np_insertarOperador termino
    (69) termino -> . termino MINUS np_insertarOperador termino
    (70) termino -> . termino MULTIPLY np_insertarOperador termino
    (71) termino -> . termino DIVIDE np_insertarOperador termino
    (73) termino -> . termino1 OPMATRIZ np_insertarOperador
    (74) termino -> . termino1
    (75) termino1 -> . posibleID
    (76) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (77) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (78) termino1 -> . llamadaFuncion
    (86) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (87) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90
    OPAREN          shift and go to state 92
    QUOT            shift and go to state 93
    ID              shift and go to state 94

    expresion                      shift and go to state 198
    termino                        shift and go to state 86
    termino1                       shift and go to state 87
    posibleID                      shift and go to state 88
    llamadaFuncion                 shift and go to state 91

state 165

    (89) estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN . HAZ OBRACKET estatutos CBRACKET

    HAZ             shift and go to state 199


state 166

    (61) lectura -> LEE OPAREN posibleID lectura2 . CPAREN SEMICOLON

    CPAREN          shift and go to state 200


state 167

    (62) lectura2 -> empty .

    CPAREN          reduce using rule 62 (lectura2 -> empty .)


state 168

    (63) lectura2 -> COMA . posibleID lectura2
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    ID              shift and go to state 133

    posibleID                      shift and go to state 201

state 169

    (64) asignacion -> posibleID ASSIGN np_insertarOperador expresion . SEMICOLON
    (65) expresion -> expresion . LOGIC np_insertarOperador expresion
    (66) expresion -> expresion . RELOP np_insertarOperador expresion

    SEMICOLON       shift and go to state 202
    LOGIC           shift and go to state 115
    RELOP           shift and go to state 116


state 170

    (43) escritura -> ESCRIBE OPAREN escritura2 CPAREN . SEMICOLON

    SEMICOLON       shift and go to state 203


state 171

    (45) escritura2 -> posibleID escritura3 .

    CPAREN          reduce using rule 45 (escritura2 -> posibleID escritura3 .)


state 172

    (47) escritura3 -> empty .

    CPAREN          reduce using rule 47 (escritura3 -> empty .)


state 173

    (48) escritura3 -> COMA . expresion escritura3
    (49) escritura3 -> COMA . STRING escritura3
    (65) expresion -> . expresion LOGIC np_insertarOperador expresion
    (66) expresion -> . expresion RELOP np_insertarOperador expresion
    (67) expresion -> . termino
    (68) termino -> . termino PLUS np_insertarOperador termino
    (69) termino -> . termino MINUS np_insertarOperador termino
    (70) termino -> . termino MULTIPLY np_insertarOperador termino
    (71) termino -> . termino DIVIDE np_insertarOperador termino
    (73) termino -> . termino1 OPMATRIZ np_insertarOperador
    (74) termino -> . termino1
    (75) termino1 -> . posibleID
    (76) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (77) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (78) termino1 -> . llamadaFuncion
    (86) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (87) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    STRING          shift and go to state 205
    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90
    OPAREN          shift and go to state 92
    QUOT            shift and go to state 93
    ID              shift and go to state 94

    expresion                      shift and go to state 204
    termino                        shift and go to state 86
    termino1                       shift and go to state 87
    posibleID                      shift and go to state 88
    llamadaFuncion                 shift and go to state 91

state 174

    (46) escritura2 -> STRING escritura3 .

    CPAREN          reduce using rule 46 (escritura2 -> STRING escritura3 .)


state 175

    (50) decision -> SI OPAREN expresion np_iniciaIf . CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> SI OPAREN expresion np_iniciaIf . CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf

    CPAREN          shift and go to state 206


state 176

    (11) declaracion2 -> np_agregarFondo posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .

    VAR             reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    FUNCION         reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    PRINCIPAL       reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    REGRESA         reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    DESDE           reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    MIENTRAS        reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    LEE             reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    ESCRIBE         reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    SI              reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    ID              reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    CBRACKET        reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)
    OBRACKET        reduce using rule 11 (declaracion2 -> np_agregarFondo posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3 .)


state 177

    (12) declaracion3 -> np_quitarFondo . SEMICOLON
    (13) declaracion3 -> np_quitarFondo . COMA declaracion2

    SEMICOLON       shift and go to state 207
    COMA            shift and go to state 208


state 178

    (14) declaracion3 -> ASSIGN . np_insertarOperador expresion np_quitarFondo SEMICOLON
    (15) declaracion3 -> ASSIGN . np_insertarOperador expresion np_quitarFondo COMA declaracion2
    (72) np_insertarOperador -> .

    ENTERO          reduce using rule 72 (np_insertarOperador -> .)
    FLOTANTE        reduce using rule 72 (np_insertarOperador -> .)
    OPAREN          reduce using rule 72 (np_insertarOperador -> .)
    QUOT            reduce using rule 72 (np_insertarOperador -> .)
    ID              reduce using rule 72 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 209

state 179

    (84) posibleIDDeclaracion -> ID OCORCH expresion CCORCH .

    ASSIGN          reduce using rule 84 (posibleIDDeclaracion -> ID OCORCH expresion CCORCH .)
    SEMICOLON       reduce using rule 84 (posibleIDDeclaracion -> ID OCORCH expresion CCORCH .)
    COMA            reduce using rule 84 (posibleIDDeclaracion -> ID OCORCH expresion CCORCH .)


state 180

    (85) posibleIDDeclaracion -> ID OCORCH expresion COMA . expresion CCORCH
    (65) expresion -> . expresion LOGIC np_insertarOperador expresion
    (66) expresion -> . expresion RELOP np_insertarOperador expresion
    (67) expresion -> . termino
    (68) termino -> . termino PLUS np_insertarOperador termino
    (69) termino -> . termino MINUS np_insertarOperador termino
    (70) termino -> . termino MULTIPLY np_insertarOperador termino
    (71) termino -> . termino DIVIDE np_insertarOperador termino
    (73) termino -> . termino1 OPMATRIZ np_insertarOperador
    (74) termino -> . termino1
    (75) termino1 -> . posibleID
    (76) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (77) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (78) termino1 -> . llamadaFuncion
    (86) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (87) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90
    OPAREN          shift and go to state 92
    QUOT            shift and go to state 93
    ID              shift and go to state 94

    expresion                      shift and go to state 210
    termino                        shift and go to state 86
    termino1                       shift and go to state 87
    posibleID                      shift and go to state 88
    llamadaFuncion                 shift and go to state 91

state 181

    (18) declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET . estatutos CBRACKET
    (33) estatutos -> . empty
    (34) estatutos -> . return
    (35) estatutos -> . declaracion estatutos
    (36) estatutos -> . estatutoRepeticionIncondicional estatutos
    (37) estatutos -> . estatutoRepeticionCondicional estatutos
    (38) estatutos -> . lectura estatutos
    (39) estatutos -> . asignacion estatutos
    (40) estatutos -> . escritura estatutos
    (41) estatutos -> . decision estatutos
    (42) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (98) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (61) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (64) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (43) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (50) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 98 (empty -> .)
    REGRESA         shift and go to state 58
    VAR             shift and go to state 8
    DESDE           shift and go to state 59
    MIENTRAS        shift and go to state 61
    LEE             shift and go to state 62
    ESCRIBE         shift and go to state 64
    SI              shift and go to state 65
    ID              shift and go to state 60

    estatutos                      shift and go to state 211
    empty                          shift and go to state 48
    return                         shift and go to state 49
    declaracion                    shift and go to state 50
    estatutoRepeticionIncondicional shift and go to state 51
    estatutoRepeticionCondicional  shift and go to state 52
    lectura                        shift and go to state 53
    asignacion                     shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    llamadaFuncion                 shift and go to state 57
    posibleID                      shift and go to state 63

state 182

    (23) declaracionFuncionParametros -> INT ID np_addVariableParametro np_actualizarDimensiones . declaracionFuncionParametros2
    (26) declaracionFuncionParametros2 -> . empty
    (27) declaracionFuncionParametros2 -> . COMA INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (28) declaracionFuncionParametros2 -> . COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (29) declaracionFuncionParametros2 -> . COMA CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (98) empty -> .

    COMA            shift and go to state 214
    CPAREN          reduce using rule 98 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 212
    empty                          shift and go to state 213

state 183

    (24) declaracionFuncionParametros -> FLOAT ID np_addVariableParametro np_actualizarDimensiones . declaracionFuncionParametros2
    (26) declaracionFuncionParametros2 -> . empty
    (27) declaracionFuncionParametros2 -> . COMA INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (28) declaracionFuncionParametros2 -> . COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (29) declaracionFuncionParametros2 -> . COMA CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (98) empty -> .

    COMA            shift and go to state 214
    CPAREN          reduce using rule 98 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 215
    empty                          shift and go to state 213

state 184

    (25) declaracionFuncionParametros -> CHAR ID np_addVariableParametro np_actualizarDimensiones . declaracionFuncionParametros2
    (26) declaracionFuncionParametros2 -> . empty
    (27) declaracionFuncionParametros2 -> . COMA INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (28) declaracionFuncionParametros2 -> . COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (29) declaracionFuncionParametros2 -> . COMA CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (98) empty -> .

    COMA            shift and go to state 214
    CPAREN          reduce using rule 98 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 216
    empty                          shift and go to state 213

state 185

    (19) declaracionFuncion -> FUNCION INT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET . estatutos CBRACKET
    (33) estatutos -> . empty
    (34) estatutos -> . return
    (35) estatutos -> . declaracion estatutos
    (36) estatutos -> . estatutoRepeticionIncondicional estatutos
    (37) estatutos -> . estatutoRepeticionCondicional estatutos
    (38) estatutos -> . lectura estatutos
    (39) estatutos -> . asignacion estatutos
    (40) estatutos -> . escritura estatutos
    (41) estatutos -> . decision estatutos
    (42) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (98) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (61) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (64) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (43) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (50) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 98 (empty -> .)
    REGRESA         shift and go to state 58
    VAR             shift and go to state 8
    DESDE           shift and go to state 59
    MIENTRAS        shift and go to state 61
    LEE             shift and go to state 62
    ESCRIBE         shift and go to state 64
    SI              shift and go to state 65
    ID              shift and go to state 60

    estatutos                      shift and go to state 217
    empty                          shift and go to state 48
    return                         shift and go to state 49
    declaracion                    shift and go to state 50
    estatutoRepeticionIncondicional shift and go to state 51
    estatutoRepeticionCondicional  shift and go to state 52
    lectura                        shift and go to state 53
    asignacion                     shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    llamadaFuncion                 shift and go to state 57
    posibleID                      shift and go to state 63

state 186

    (20) declaracionFuncion -> FUNCION FLOAT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET . estatutos CBRACKET
    (33) estatutos -> . empty
    (34) estatutos -> . return
    (35) estatutos -> . declaracion estatutos
    (36) estatutos -> . estatutoRepeticionIncondicional estatutos
    (37) estatutos -> . estatutoRepeticionCondicional estatutos
    (38) estatutos -> . lectura estatutos
    (39) estatutos -> . asignacion estatutos
    (40) estatutos -> . escritura estatutos
    (41) estatutos -> . decision estatutos
    (42) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (98) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (61) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (64) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (43) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (50) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 98 (empty -> .)
    REGRESA         shift and go to state 58
    VAR             shift and go to state 8
    DESDE           shift and go to state 59
    MIENTRAS        shift and go to state 61
    LEE             shift and go to state 62
    ESCRIBE         shift and go to state 64
    SI              shift and go to state 65
    ID              shift and go to state 60

    estatutos                      shift and go to state 218
    empty                          shift and go to state 48
    return                         shift and go to state 49
    declaracion                    shift and go to state 50
    estatutoRepeticionIncondicional shift and go to state 51
    estatutoRepeticionCondicional  shift and go to state 52
    lectura                        shift and go to state 53
    asignacion                     shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    llamadaFuncion                 shift and go to state 57
    posibleID                      shift and go to state 63

state 187

    (21) declaracionFuncion -> FUNCION CHAR ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET . estatutos CBRACKET
    (33) estatutos -> . empty
    (34) estatutos -> . return
    (35) estatutos -> . declaracion estatutos
    (36) estatutos -> . estatutoRepeticionIncondicional estatutos
    (37) estatutos -> . estatutoRepeticionCondicional estatutos
    (38) estatutos -> . lectura estatutos
    (39) estatutos -> . asignacion estatutos
    (40) estatutos -> . escritura estatutos
    (41) estatutos -> . decision estatutos
    (42) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (98) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (61) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (64) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (43) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (50) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 98 (empty -> .)
    REGRESA         shift and go to state 58
    VAR             shift and go to state 8
    DESDE           shift and go to state 59
    MIENTRAS        shift and go to state 61
    LEE             shift and go to state 62
    ESCRIBE         shift and go to state 64
    SI              shift and go to state 65
    ID              shift and go to state 60

    estatutos                      shift and go to state 219
    empty                          shift and go to state 48
    return                         shift and go to state 49
    declaracion                    shift and go to state 50
    estatutoRepeticionIncondicional shift and go to state 51
    estatutoRepeticionCondicional  shift and go to state 52
    lectura                        shift and go to state 53
    asignacion                     shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    llamadaFuncion                 shift and go to state 57
    posibleID                      shift and go to state 63

state 188

    (65) expresion -> expresion LOGIC np_insertarOperador expresion .
    (65) expresion -> expresion . LOGIC np_insertarOperador expresion
    (66) expresion -> expresion . RELOP np_insertarOperador expresion

  ! shift/reduce conflict for LOGIC resolved as shift
  ! shift/reduce conflict for RELOP resolved as shift
    SEMICOLON       reduce using rule 65 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    COMA            reduce using rule 65 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    CPAREN          reduce using rule 65 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    CCORCH          reduce using rule 65 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    HAZ             reduce using rule 65 (expresion -> expresion LOGIC np_insertarOperador expresion .)
    LOGIC           shift and go to state 115
    RELOP           shift and go to state 116

  ! LOGIC           [ reduce using rule 65 (expresion -> expresion LOGIC np_insertarOperador expresion .) ]
  ! RELOP           [ reduce using rule 65 (expresion -> expresion LOGIC np_insertarOperador expresion .) ]


state 189

    (66) expresion -> expresion RELOP np_insertarOperador expresion .
    (65) expresion -> expresion . LOGIC np_insertarOperador expresion
    (66) expresion -> expresion . RELOP np_insertarOperador expresion

  ! shift/reduce conflict for LOGIC resolved as shift
  ! shift/reduce conflict for RELOP resolved as shift
    SEMICOLON       reduce using rule 66 (expresion -> expresion RELOP np_insertarOperador expresion .)
    COMA            reduce using rule 66 (expresion -> expresion RELOP np_insertarOperador expresion .)
    CPAREN          reduce using rule 66 (expresion -> expresion RELOP np_insertarOperador expresion .)
    CCORCH          reduce using rule 66 (expresion -> expresion RELOP np_insertarOperador expresion .)
    HAZ             reduce using rule 66 (expresion -> expresion RELOP np_insertarOperador expresion .)
    LOGIC           shift and go to state 115
    RELOP           shift and go to state 116

  ! LOGIC           [ reduce using rule 66 (expresion -> expresion RELOP np_insertarOperador expresion .) ]
  ! RELOP           [ reduce using rule 66 (expresion -> expresion RELOP np_insertarOperador expresion .) ]


state 190

    (68) termino -> termino PLUS np_insertarOperador termino .
    (68) termino -> termino . PLUS np_insertarOperador termino
    (69) termino -> termino . MINUS np_insertarOperador termino
    (70) termino -> termino . MULTIPLY np_insertarOperador termino
    (71) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 68 (termino -> termino PLUS np_insertarOperador termino .)
    MINUS           reduce using rule 68 (termino -> termino PLUS np_insertarOperador termino .)
    SEMICOLON       reduce using rule 68 (termino -> termino PLUS np_insertarOperador termino .)
    LOGIC           reduce using rule 68 (termino -> termino PLUS np_insertarOperador termino .)
    RELOP           reduce using rule 68 (termino -> termino PLUS np_insertarOperador termino .)
    COMA            reduce using rule 68 (termino -> termino PLUS np_insertarOperador termino .)
    CPAREN          reduce using rule 68 (termino -> termino PLUS np_insertarOperador termino .)
    CCORCH          reduce using rule 68 (termino -> termino PLUS np_insertarOperador termino .)
    HAZ             reduce using rule 68 (termino -> termino PLUS np_insertarOperador termino .)
    MULTIPLY        shift and go to state 119
    DIVIDE          shift and go to state 120

  ! MULTIPLY        [ reduce using rule 68 (termino -> termino PLUS np_insertarOperador termino .) ]
  ! DIVIDE          [ reduce using rule 68 (termino -> termino PLUS np_insertarOperador termino .) ]
  ! PLUS            [ shift and go to state 117 ]
  ! MINUS           [ shift and go to state 118 ]


state 191

    (69) termino -> termino MINUS np_insertarOperador termino .
    (68) termino -> termino . PLUS np_insertarOperador termino
    (69) termino -> termino . MINUS np_insertarOperador termino
    (70) termino -> termino . MULTIPLY np_insertarOperador termino
    (71) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 69 (termino -> termino MINUS np_insertarOperador termino .)
    MINUS           reduce using rule 69 (termino -> termino MINUS np_insertarOperador termino .)
    SEMICOLON       reduce using rule 69 (termino -> termino MINUS np_insertarOperador termino .)
    LOGIC           reduce using rule 69 (termino -> termino MINUS np_insertarOperador termino .)
    RELOP           reduce using rule 69 (termino -> termino MINUS np_insertarOperador termino .)
    COMA            reduce using rule 69 (termino -> termino MINUS np_insertarOperador termino .)
    CPAREN          reduce using rule 69 (termino -> termino MINUS np_insertarOperador termino .)
    CCORCH          reduce using rule 69 (termino -> termino MINUS np_insertarOperador termino .)
    HAZ             reduce using rule 69 (termino -> termino MINUS np_insertarOperador termino .)
    MULTIPLY        shift and go to state 119
    DIVIDE          shift and go to state 120

  ! MULTIPLY        [ reduce using rule 69 (termino -> termino MINUS np_insertarOperador termino .) ]
  ! DIVIDE          [ reduce using rule 69 (termino -> termino MINUS np_insertarOperador termino .) ]
  ! PLUS            [ shift and go to state 117 ]
  ! MINUS           [ shift and go to state 118 ]


state 192

    (70) termino -> termino MULTIPLY np_insertarOperador termino .
    (68) termino -> termino . PLUS np_insertarOperador termino
    (69) termino -> termino . MINUS np_insertarOperador termino
    (70) termino -> termino . MULTIPLY np_insertarOperador termino
    (71) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 70 (termino -> termino MULTIPLY np_insertarOperador termino .)
    MINUS           reduce using rule 70 (termino -> termino MULTIPLY np_insertarOperador termino .)
    MULTIPLY        reduce using rule 70 (termino -> termino MULTIPLY np_insertarOperador termino .)
    DIVIDE          reduce using rule 70 (termino -> termino MULTIPLY np_insertarOperador termino .)
    SEMICOLON       reduce using rule 70 (termino -> termino MULTIPLY np_insertarOperador termino .)
    LOGIC           reduce using rule 70 (termino -> termino MULTIPLY np_insertarOperador termino .)
    RELOP           reduce using rule 70 (termino -> termino MULTIPLY np_insertarOperador termino .)
    COMA            reduce using rule 70 (termino -> termino MULTIPLY np_insertarOperador termino .)
    CPAREN          reduce using rule 70 (termino -> termino MULTIPLY np_insertarOperador termino .)
    CCORCH          reduce using rule 70 (termino -> termino MULTIPLY np_insertarOperador termino .)
    HAZ             reduce using rule 70 (termino -> termino MULTIPLY np_insertarOperador termino .)

  ! PLUS            [ shift and go to state 117 ]
  ! MINUS           [ shift and go to state 118 ]
  ! MULTIPLY        [ shift and go to state 119 ]
  ! DIVIDE          [ shift and go to state 120 ]


state 193

    (71) termino -> termino DIVIDE np_insertarOperador termino .
    (68) termino -> termino . PLUS np_insertarOperador termino
    (69) termino -> termino . MINUS np_insertarOperador termino
    (70) termino -> termino . MULTIPLY np_insertarOperador termino
    (71) termino -> termino . DIVIDE np_insertarOperador termino

    PLUS            reduce using rule 71 (termino -> termino DIVIDE np_insertarOperador termino .)
    MINUS           reduce using rule 71 (termino -> termino DIVIDE np_insertarOperador termino .)
    MULTIPLY        reduce using rule 71 (termino -> termino DIVIDE np_insertarOperador termino .)
    DIVIDE          reduce using rule 71 (termino -> termino DIVIDE np_insertarOperador termino .)
    SEMICOLON       reduce using rule 71 (termino -> termino DIVIDE np_insertarOperador termino .)
    LOGIC           reduce using rule 71 (termino -> termino DIVIDE np_insertarOperador termino .)
    RELOP           reduce using rule 71 (termino -> termino DIVIDE np_insertarOperador termino .)
    COMA            reduce using rule 71 (termino -> termino DIVIDE np_insertarOperador termino .)
    CPAREN          reduce using rule 71 (termino -> termino DIVIDE np_insertarOperador termino .)
    CCORCH          reduce using rule 71 (termino -> termino DIVIDE np_insertarOperador termino .)
    HAZ             reduce using rule 71 (termino -> termino DIVIDE np_insertarOperador termino .)

  ! PLUS            [ shift and go to state 117 ]
  ! MINUS           [ shift and go to state 118 ]
  ! MULTIPLY        [ shift and go to state 119 ]
  ! DIVIDE          [ shift and go to state 120 ]


state 194

    (86) termino1 -> OPAREN np_insertarOperador expresion CPAREN . np_insertarOperador
    (72) np_insertarOperador -> .

    OPMATRIZ        reduce using rule 72 (np_insertarOperador -> .)
    PLUS            reduce using rule 72 (np_insertarOperador -> .)
    MINUS           reduce using rule 72 (np_insertarOperador -> .)
    MULTIPLY        reduce using rule 72 (np_insertarOperador -> .)
    DIVIDE          reduce using rule 72 (np_insertarOperador -> .)
    SEMICOLON       reduce using rule 72 (np_insertarOperador -> .)
    LOGIC           reduce using rule 72 (np_insertarOperador -> .)
    RELOP           reduce using rule 72 (np_insertarOperador -> .)
    COMA            reduce using rule 72 (np_insertarOperador -> .)
    CPAREN          reduce using rule 72 (np_insertarOperador -> .)
    CCORCH          reduce using rule 72 (np_insertarOperador -> .)
    HAZ             reduce using rule 72 (np_insertarOperador -> .)

    np_insertarOperador            shift and go to state 220

state 195

    (88) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion . HAZ OBRACKET estatutos CBRACKET
    (65) expresion -> expresion . LOGIC np_insertarOperador expresion
    (66) expresion -> expresion . RELOP np_insertarOperador expresion

    HAZ             shift and go to state 221
    LOGIC           shift and go to state 115
    RELOP           shift and go to state 116


state 196

    (56) llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .

    SEMICOLON       reduce using rule 56 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    OPMATRIZ        reduce using rule 56 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    PLUS            reduce using rule 56 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    MINUS           reduce using rule 56 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    MULTIPLY        reduce using rule 56 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    DIVIDE          reduce using rule 56 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    LOGIC           reduce using rule 56 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    RELOP           reduce using rule 56 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    COMA            reduce using rule 56 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    CPAREN          reduce using rule 56 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    CCORCH          reduce using rule 56 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)
    HAZ             reduce using rule 56 (llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN .)


state 197

    (59) extraParametros -> COMA expresion . extraParametros
    (65) expresion -> expresion . LOGIC np_insertarOperador expresion
    (66) expresion -> expresion . RELOP np_insertarOperador expresion
    (59) extraParametros -> . COMA expresion extraParametros
    (60) extraParametros -> . empty
    (98) empty -> .

    LOGIC           shift and go to state 115
    RELOP           shift and go to state 116
    COMA            shift and go to state 162
    CPAREN          reduce using rule 98 (empty -> .)

    extraParametros                shift and go to state 222
    empty                          shift and go to state 163

state 198

    (80) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion . CCORCH
    (81) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion . COMA expresion CCORCH
    (65) expresion -> expresion . LOGIC np_insertarOperador expresion
    (66) expresion -> expresion . RELOP np_insertarOperador expresion

    CCORCH          shift and go to state 223
    COMA            shift and go to state 224
    LOGIC           shift and go to state 115
    RELOP           shift and go to state 116


state 199

    (89) estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ . OBRACKET estatutos CBRACKET

    OBRACKET        shift and go to state 225


state 200

    (61) lectura -> LEE OPAREN posibleID lectura2 CPAREN . SEMICOLON

    SEMICOLON       shift and go to state 226


state 201

    (63) lectura2 -> COMA posibleID . lectura2
    (62) lectura2 -> . empty
    (63) lectura2 -> . COMA posibleID lectura2
    (98) empty -> .

    COMA            shift and go to state 168
    CPAREN          reduce using rule 98 (empty -> .)

    lectura2                       shift and go to state 227
    empty                          shift and go to state 167

state 202

    (64) asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON .

    REGRESA         reduce using rule 64 (asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON .)
    VAR             reduce using rule 64 (asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON .)
    DESDE           reduce using rule 64 (asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON .)
    MIENTRAS        reduce using rule 64 (asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON .)
    LEE             reduce using rule 64 (asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON .)
    ESCRIBE         reduce using rule 64 (asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON .)
    SI              reduce using rule 64 (asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON .)
    ID              reduce using rule 64 (asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON .)
    CBRACKET        reduce using rule 64 (asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON .)


state 203

    (43) escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .

    REGRESA         reduce using rule 43 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    VAR             reduce using rule 43 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    DESDE           reduce using rule 43 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 43 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    LEE             reduce using rule 43 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 43 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    SI              reduce using rule 43 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    ID              reduce using rule 43 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)
    CBRACKET        reduce using rule 43 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)


state 204

    (48) escritura3 -> COMA expresion . escritura3
    (65) expresion -> expresion . LOGIC np_insertarOperador expresion
    (66) expresion -> expresion . RELOP np_insertarOperador expresion
    (47) escritura3 -> . empty
    (48) escritura3 -> . COMA expresion escritura3
    (49) escritura3 -> . COMA STRING escritura3
    (98) empty -> .

    LOGIC           shift and go to state 115
    RELOP           shift and go to state 116
    COMA            shift and go to state 173
    CPAREN          reduce using rule 98 (empty -> .)

    escritura3                     shift and go to state 228
    empty                          shift and go to state 172

state 205

    (49) escritura3 -> COMA STRING . escritura3
    (47) escritura3 -> . empty
    (48) escritura3 -> . COMA expresion escritura3
    (49) escritura3 -> . COMA STRING escritura3
    (98) empty -> .

    COMA            shift and go to state 173
    CPAREN          reduce using rule 98 (empty -> .)

    escritura3                     shift and go to state 229
    empty                          shift and go to state 172

state 206

    (50) decision -> SI OPAREN expresion np_iniciaIf CPAREN . ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> SI OPAREN expresion np_iniciaIf CPAREN . ENTONCES OBRACKET estatutos CBRACKET np_terminaIf

    ENTONCES        shift and go to state 230


state 207

    (12) declaracion3 -> np_quitarFondo SEMICOLON .

    VAR             reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)
    FUNCION         reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)
    PRINCIPAL       reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)
    REGRESA         reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)
    DESDE           reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)
    MIENTRAS        reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)
    LEE             reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)
    ESCRIBE         reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)
    SI              reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)
    ID              reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)
    CBRACKET        reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)
    OBRACKET        reduce using rule 12 (declaracion3 -> np_quitarFondo SEMICOLON .)


state 208

    (13) declaracion3 -> np_quitarFondo COMA . declaracion2
    (11) declaracion2 -> . np_agregarFondo posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3
    (16) np_agregarFondo -> .

    ID              reduce using rule 16 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 231
    np_agregarFondo                shift and go to state 40

state 209

    (14) declaracion3 -> ASSIGN np_insertarOperador . expresion np_quitarFondo SEMICOLON
    (15) declaracion3 -> ASSIGN np_insertarOperador . expresion np_quitarFondo COMA declaracion2
    (65) expresion -> . expresion LOGIC np_insertarOperador expresion
    (66) expresion -> . expresion RELOP np_insertarOperador expresion
    (67) expresion -> . termino
    (68) termino -> . termino PLUS np_insertarOperador termino
    (69) termino -> . termino MINUS np_insertarOperador termino
    (70) termino -> . termino MULTIPLY np_insertarOperador termino
    (71) termino -> . termino DIVIDE np_insertarOperador termino
    (73) termino -> . termino1 OPMATRIZ np_insertarOperador
    (74) termino -> . termino1
    (75) termino1 -> . posibleID
    (76) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (77) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (78) termino1 -> . llamadaFuncion
    (86) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (87) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90
    OPAREN          shift and go to state 92
    QUOT            shift and go to state 93
    ID              shift and go to state 94

    expresion                      shift and go to state 232
    termino                        shift and go to state 86
    termino1                       shift and go to state 87
    posibleID                      shift and go to state 88
    llamadaFuncion                 shift and go to state 91

state 210

    (85) posibleIDDeclaracion -> ID OCORCH expresion COMA expresion . CCORCH
    (65) expresion -> expresion . LOGIC np_insertarOperador expresion
    (66) expresion -> expresion . RELOP np_insertarOperador expresion

    CCORCH          shift and go to state 233
    LOGIC           shift and go to state 115
    RELOP           shift and go to state 116


state 211

    (18) declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos . CBRACKET

    CBRACKET        shift and go to state 234


state 212

    (23) declaracionFuncionParametros -> INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .

    CPAREN          reduce using rule 23 (declaracionFuncionParametros -> INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .)


state 213

    (26) declaracionFuncionParametros2 -> empty .

    CPAREN          reduce using rule 26 (declaracionFuncionParametros2 -> empty .)


state 214

    (27) declaracionFuncionParametros2 -> COMA . INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (28) declaracionFuncionParametros2 -> COMA . FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (29) declaracionFuncionParametros2 -> COMA . CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2

    INT             shift and go to state 235
    FLOAT           shift and go to state 236
    CHAR            shift and go to state 237


state 215

    (24) declaracionFuncionParametros -> FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .

    CPAREN          reduce using rule 24 (declaracionFuncionParametros -> FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .)


state 216

    (25) declaracionFuncionParametros -> CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .

    CPAREN          reduce using rule 25 (declaracionFuncionParametros -> CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .)


state 217

    (19) declaracionFuncion -> FUNCION INT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos . CBRACKET

    CBRACKET        shift and go to state 238


state 218

    (20) declaracionFuncion -> FUNCION FLOAT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos . CBRACKET

    CBRACKET        shift and go to state 239


state 219

    (21) declaracionFuncion -> FUNCION CHAR ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos . CBRACKET

    CBRACKET        shift and go to state 240


state 220

    (86) termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .

    OPMATRIZ        reduce using rule 86 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    PLUS            reduce using rule 86 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    MINUS           reduce using rule 86 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    MULTIPLY        reduce using rule 86 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    DIVIDE          reduce using rule 86 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    SEMICOLON       reduce using rule 86 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    LOGIC           reduce using rule 86 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    RELOP           reduce using rule 86 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    COMA            reduce using rule 86 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    CPAREN          reduce using rule 86 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    CCORCH          reduce using rule 86 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)
    HAZ             reduce using rule 86 (termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador .)


state 221

    (88) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ . OBRACKET estatutos CBRACKET

    OBRACKET        shift and go to state 241


state 222

    (59) extraParametros -> COMA expresion extraParametros .

    CPAREN          reduce using rule 59 (extraParametros -> COMA expresion extraParametros .)


state 223

    (80) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .

    ASSIGN          reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    OPMATRIZ        reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    PLUS            reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    MINUS           reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    MULTIPLY        reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    DIVIDE          reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    SEMICOLON       reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    LOGIC           reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    RELOP           reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    COMA            reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    CPAREN          reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    CCORCH          reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)
    HAZ             reduce using rule 80 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH .)


state 224

    (81) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA . expresion CCORCH
    (65) expresion -> . expresion LOGIC np_insertarOperador expresion
    (66) expresion -> . expresion RELOP np_insertarOperador expresion
    (67) expresion -> . termino
    (68) termino -> . termino PLUS np_insertarOperador termino
    (69) termino -> . termino MINUS np_insertarOperador termino
    (70) termino -> . termino MULTIPLY np_insertarOperador termino
    (71) termino -> . termino DIVIDE np_insertarOperador termino
    (73) termino -> . termino1 OPMATRIZ np_insertarOperador
    (74) termino -> . termino1
    (75) termino1 -> . posibleID
    (76) termino1 -> . ENTERO np_contieneID_Constante_Entero
    (77) termino1 -> . FLOTANTE np_contieneID_Constante_Flotante
    (78) termino1 -> . llamadaFuncion
    (86) termino1 -> . OPAREN np_insertarOperador expresion CPAREN np_insertarOperador
    (87) termino1 -> . QUOT CARACTER QUOT
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN

    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90
    OPAREN          shift and go to state 92
    QUOT            shift and go to state 93
    ID              shift and go to state 94

    expresion                      shift and go to state 242
    termino                        shift and go to state 86
    termino1                       shift and go to state 87
    posibleID                      shift and go to state 88
    llamadaFuncion                 shift and go to state 91

state 225

    (89) estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET . estatutos CBRACKET
    (33) estatutos -> . empty
    (34) estatutos -> . return
    (35) estatutos -> . declaracion estatutos
    (36) estatutos -> . estatutoRepeticionIncondicional estatutos
    (37) estatutos -> . estatutoRepeticionCondicional estatutos
    (38) estatutos -> . lectura estatutos
    (39) estatutos -> . asignacion estatutos
    (40) estatutos -> . escritura estatutos
    (41) estatutos -> . decision estatutos
    (42) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (98) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (61) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (64) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (43) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (50) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 98 (empty -> .)
    REGRESA         shift and go to state 58
    VAR             shift and go to state 8
    DESDE           shift and go to state 59
    MIENTRAS        shift and go to state 61
    LEE             shift and go to state 62
    ESCRIBE         shift and go to state 64
    SI              shift and go to state 65
    ID              shift and go to state 60

    estatutos                      shift and go to state 243
    empty                          shift and go to state 48
    return                         shift and go to state 49
    declaracion                    shift and go to state 50
    estatutoRepeticionIncondicional shift and go to state 51
    estatutoRepeticionCondicional  shift and go to state 52
    lectura                        shift and go to state 53
    asignacion                     shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    llamadaFuncion                 shift and go to state 57
    posibleID                      shift and go to state 63

state 226

    (61) lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .

    REGRESA         reduce using rule 61 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    VAR             reduce using rule 61 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    DESDE           reduce using rule 61 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 61 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    LEE             reduce using rule 61 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 61 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    SI              reduce using rule 61 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    ID              reduce using rule 61 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)
    CBRACKET        reduce using rule 61 (lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON .)


state 227

    (63) lectura2 -> COMA posibleID lectura2 .

    CPAREN          reduce using rule 63 (lectura2 -> COMA posibleID lectura2 .)


state 228

    (48) escritura3 -> COMA expresion escritura3 .

    CPAREN          reduce using rule 48 (escritura3 -> COMA expresion escritura3 .)


state 229

    (49) escritura3 -> COMA STRING escritura3 .

    CPAREN          reduce using rule 49 (escritura3 -> COMA STRING escritura3 .)


state 230

    (50) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES . OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES . OBRACKET estatutos CBRACKET np_terminaIf

    OBRACKET        shift and go to state 244


state 231

    (13) declaracion3 -> np_quitarFondo COMA declaracion2 .

    VAR             reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    FUNCION         reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    PRINCIPAL       reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    REGRESA         reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    DESDE           reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    MIENTRAS        reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    LEE             reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    ESCRIBE         reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    SI              reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    ID              reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    CBRACKET        reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)
    OBRACKET        reduce using rule 13 (declaracion3 -> np_quitarFondo COMA declaracion2 .)


state 232

    (14) declaracion3 -> ASSIGN np_insertarOperador expresion . np_quitarFondo SEMICOLON
    (15) declaracion3 -> ASSIGN np_insertarOperador expresion . np_quitarFondo COMA declaracion2
    (65) expresion -> expresion . LOGIC np_insertarOperador expresion
    (66) expresion -> expresion . RELOP np_insertarOperador expresion
    (17) np_quitarFondo -> .

    LOGIC           shift and go to state 115
    RELOP           shift and go to state 116
    SEMICOLON       reduce using rule 17 (np_quitarFondo -> .)
    COMA            reduce using rule 17 (np_quitarFondo -> .)

    np_quitarFondo                 shift and go to state 245

state 233

    (85) posibleIDDeclaracion -> ID OCORCH expresion COMA expresion CCORCH .

    ASSIGN          reduce using rule 85 (posibleIDDeclaracion -> ID OCORCH expresion COMA expresion CCORCH .)
    SEMICOLON       reduce using rule 85 (posibleIDDeclaracion -> ID OCORCH expresion COMA expresion CCORCH .)
    COMA            reduce using rule 85 (posibleIDDeclaracion -> ID OCORCH expresion COMA expresion CCORCH .)


state 234

    (18) declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET .

    FUNCION         reduce using rule 18 (declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET .)
    PRINCIPAL       reduce using rule 18 (declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET .)


state 235

    (27) declaracionFuncionParametros2 -> COMA INT . ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2

    ID              shift and go to state 246


state 236

    (28) declaracionFuncionParametros2 -> COMA FLOAT . ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2

    ID              shift and go to state 247


state 237

    (29) declaracionFuncionParametros2 -> COMA CHAR . ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2

    ID              shift and go to state 248


state 238

    (19) declaracionFuncion -> FUNCION INT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET .

    FUNCION         reduce using rule 19 (declaracionFuncion -> FUNCION INT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET .)
    PRINCIPAL       reduce using rule 19 (declaracionFuncion -> FUNCION INT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET .)


state 239

    (20) declaracionFuncion -> FUNCION FLOAT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET .

    FUNCION         reduce using rule 20 (declaracionFuncion -> FUNCION FLOAT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET .)
    PRINCIPAL       reduce using rule 20 (declaracionFuncion -> FUNCION FLOAT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET .)


state 240

    (21) declaracionFuncion -> FUNCION CHAR ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET .

    FUNCION         reduce using rule 21 (declaracionFuncion -> FUNCION CHAR ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET .)
    PRINCIPAL       reduce using rule 21 (declaracionFuncion -> FUNCION CHAR ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET .)


state 241

    (88) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET . estatutos CBRACKET
    (33) estatutos -> . empty
    (34) estatutos -> . return
    (35) estatutos -> . declaracion estatutos
    (36) estatutos -> . estatutoRepeticionIncondicional estatutos
    (37) estatutos -> . estatutoRepeticionCondicional estatutos
    (38) estatutos -> . lectura estatutos
    (39) estatutos -> . asignacion estatutos
    (40) estatutos -> . escritura estatutos
    (41) estatutos -> . decision estatutos
    (42) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (98) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (61) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (64) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (43) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (50) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 98 (empty -> .)
    REGRESA         shift and go to state 58
    VAR             shift and go to state 8
    DESDE           shift and go to state 59
    MIENTRAS        shift and go to state 61
    LEE             shift and go to state 62
    ESCRIBE         shift and go to state 64
    SI              shift and go to state 65
    ID              shift and go to state 60

    estatutos                      shift and go to state 249
    empty                          shift and go to state 48
    return                         shift and go to state 49
    declaracion                    shift and go to state 50
    estatutoRepeticionIncondicional shift and go to state 51
    estatutoRepeticionCondicional  shift and go to state 52
    lectura                        shift and go to state 53
    asignacion                     shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    llamadaFuncion                 shift and go to state 57
    posibleID                      shift and go to state 63

state 242

    (81) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion . CCORCH
    (65) expresion -> expresion . LOGIC np_insertarOperador expresion
    (66) expresion -> expresion . RELOP np_insertarOperador expresion

    CCORCH          shift and go to state 250
    LOGIC           shift and go to state 115
    RELOP           shift and go to state 116


state 243

    (89) estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos . CBRACKET

    CBRACKET        shift and go to state 251


state 244

    (50) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET . estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET . estatutos CBRACKET np_terminaIf
    (33) estatutos -> . empty
    (34) estatutos -> . return
    (35) estatutos -> . declaracion estatutos
    (36) estatutos -> . estatutoRepeticionIncondicional estatutos
    (37) estatutos -> . estatutoRepeticionCondicional estatutos
    (38) estatutos -> . lectura estatutos
    (39) estatutos -> . asignacion estatutos
    (40) estatutos -> . escritura estatutos
    (41) estatutos -> . decision estatutos
    (42) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (98) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (61) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (64) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (43) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (50) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 98 (empty -> .)
    REGRESA         shift and go to state 58
    VAR             shift and go to state 8
    DESDE           shift and go to state 59
    MIENTRAS        shift and go to state 61
    LEE             shift and go to state 62
    ESCRIBE         shift and go to state 64
    SI              shift and go to state 65
    ID              shift and go to state 60

    estatutos                      shift and go to state 252
    empty                          shift and go to state 48
    return                         shift and go to state 49
    declaracion                    shift and go to state 50
    estatutoRepeticionIncondicional shift and go to state 51
    estatutoRepeticionCondicional  shift and go to state 52
    lectura                        shift and go to state 53
    asignacion                     shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    llamadaFuncion                 shift and go to state 57
    posibleID                      shift and go to state 63

state 245

    (14) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo . SEMICOLON
    (15) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo . COMA declaracion2

    SEMICOLON       shift and go to state 253
    COMA            shift and go to state 254


state 246

    (27) declaracionFuncionParametros2 -> COMA INT ID . np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (94) np_addVariableParametro -> .

    COMA            reduce using rule 94 (np_addVariableParametro -> .)
    CPAREN          reduce using rule 94 (np_addVariableParametro -> .)

    np_addVariableParametro        shift and go to state 255

state 247

    (28) declaracionFuncionParametros2 -> COMA FLOAT ID . np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (94) np_addVariableParametro -> .

    COMA            reduce using rule 94 (np_addVariableParametro -> .)
    CPAREN          reduce using rule 94 (np_addVariableParametro -> .)

    np_addVariableParametro        shift and go to state 256

state 248

    (29) declaracionFuncionParametros2 -> COMA CHAR ID . np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (94) np_addVariableParametro -> .

    COMA            reduce using rule 94 (np_addVariableParametro -> .)
    CPAREN          reduce using rule 94 (np_addVariableParametro -> .)

    np_addVariableParametro        shift and go to state 257

state 249

    (88) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos . CBRACKET

    CBRACKET        shift and go to state 258


state 250

    (81) posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .

    ASSIGN          reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    OPMATRIZ        reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    PLUS            reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    MINUS           reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    MULTIPLY        reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    DIVIDE          reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    SEMICOLON       reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    LOGIC           reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    RELOP           reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    COMA            reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    CPAREN          reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    CCORCH          reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)
    HAZ             reduce using rule 81 (posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH .)


state 251

    (89) estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .

    REGRESA         reduce using rule 89 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    VAR             reduce using rule 89 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    DESDE           reduce using rule 89 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    MIENTRAS        reduce using rule 89 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    LEE             reduce using rule 89 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    ESCRIBE         reduce using rule 89 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    SI              reduce using rule 89 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    ID              reduce using rule 89 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)
    CBRACKET        reduce using rule 89 (estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET .)


state 252

    (50) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos . CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos . CBRACKET np_terminaIf

    CBRACKET        shift and go to state 259


state 253

    (14) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .

    VAR             reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    FUNCION         reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    PRINCIPAL       reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    REGRESA         reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    DESDE           reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    MIENTRAS        reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    LEE             reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    ESCRIBE         reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    SI              reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    ID              reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    CBRACKET        reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)
    OBRACKET        reduce using rule 14 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON .)


state 254

    (15) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA . declaracion2
    (11) declaracion2 -> . np_agregarFondo posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3
    (16) np_agregarFondo -> .

    ID              reduce using rule 16 (np_agregarFondo -> .)

    declaracion2                   shift and go to state 260
    np_agregarFondo                shift and go to state 40

state 255

    (27) declaracionFuncionParametros2 -> COMA INT ID np_addVariableParametro . np_actualizarDimensiones declaracionFuncionParametros2
    (96) np_actualizarDimensiones -> .

    COMA            reduce using rule 96 (np_actualizarDimensiones -> .)
    CPAREN          reduce using rule 96 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 261

state 256

    (28) declaracionFuncionParametros2 -> COMA FLOAT ID np_addVariableParametro . np_actualizarDimensiones declaracionFuncionParametros2
    (96) np_actualizarDimensiones -> .

    COMA            reduce using rule 96 (np_actualizarDimensiones -> .)
    CPAREN          reduce using rule 96 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 262

state 257

    (29) declaracionFuncionParametros2 -> COMA CHAR ID np_addVariableParametro . np_actualizarDimensiones declaracionFuncionParametros2
    (96) np_actualizarDimensiones -> .

    COMA            reduce using rule 96 (np_actualizarDimensiones -> .)
    CPAREN          reduce using rule 96 (np_actualizarDimensiones -> .)

    np_actualizarDimensiones       shift and go to state 263

state 258

    (88) estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .

    REGRESA         reduce using rule 88 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    VAR             reduce using rule 88 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    DESDE           reduce using rule 88 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    MIENTRAS        reduce using rule 88 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    LEE             reduce using rule 88 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    ESCRIBE         reduce using rule 88 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    SI              reduce using rule 88 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    ID              reduce using rule 88 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)
    CBRACKET        reduce using rule 88 (estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET .)


state 259

    (50) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET . SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET . np_terminaIf
    (53) np_terminaIf -> .

    SINO            shift and go to state 264
    REGRESA         reduce using rule 53 (np_terminaIf -> .)
    VAR             reduce using rule 53 (np_terminaIf -> .)
    DESDE           reduce using rule 53 (np_terminaIf -> .)
    MIENTRAS        reduce using rule 53 (np_terminaIf -> .)
    LEE             reduce using rule 53 (np_terminaIf -> .)
    ESCRIBE         reduce using rule 53 (np_terminaIf -> .)
    SI              reduce using rule 53 (np_terminaIf -> .)
    ID              reduce using rule 53 (np_terminaIf -> .)
    CBRACKET        reduce using rule 53 (np_terminaIf -> .)

    np_terminaIf                   shift and go to state 265

state 260

    (15) declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .

    VAR             reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    FUNCION         reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    PRINCIPAL       reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    REGRESA         reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    DESDE           reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    MIENTRAS        reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    LEE             reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    ESCRIBE         reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    SI              reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    ID              reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    CBRACKET        reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)
    OBRACKET        reduce using rule 15 (declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2 .)


state 261

    (27) declaracionFuncionParametros2 -> COMA INT ID np_addVariableParametro np_actualizarDimensiones . declaracionFuncionParametros2
    (26) declaracionFuncionParametros2 -> . empty
    (27) declaracionFuncionParametros2 -> . COMA INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (28) declaracionFuncionParametros2 -> . COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (29) declaracionFuncionParametros2 -> . COMA CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (98) empty -> .

    COMA            shift and go to state 214
    CPAREN          reduce using rule 98 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 266
    empty                          shift and go to state 213

state 262

    (28) declaracionFuncionParametros2 -> COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones . declaracionFuncionParametros2
    (26) declaracionFuncionParametros2 -> . empty
    (27) declaracionFuncionParametros2 -> . COMA INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (28) declaracionFuncionParametros2 -> . COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (29) declaracionFuncionParametros2 -> . COMA CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (98) empty -> .

    COMA            shift and go to state 214
    CPAREN          reduce using rule 98 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 267
    empty                          shift and go to state 213

state 263

    (29) declaracionFuncionParametros2 -> COMA CHAR ID np_addVariableParametro np_actualizarDimensiones . declaracionFuncionParametros2
    (26) declaracionFuncionParametros2 -> . empty
    (27) declaracionFuncionParametros2 -> . COMA INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (28) declaracionFuncionParametros2 -> . COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (29) declaracionFuncionParametros2 -> . COMA CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2
    (98) empty -> .

    COMA            shift and go to state 214
    CPAREN          reduce using rule 98 (empty -> .)

    declaracionFuncionParametros2  shift and go to state 268
    empty                          shift and go to state 213

state 264

    (50) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO . OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET

    OBRACKET        shift and go to state 269


state 265

    (51) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .

    REGRESA         reduce using rule 51 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    VAR             reduce using rule 51 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    DESDE           reduce using rule 51 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    MIENTRAS        reduce using rule 51 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    LEE             reduce using rule 51 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    ESCRIBE         reduce using rule 51 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    SI              reduce using rule 51 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    ID              reduce using rule 51 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)
    CBRACKET        reduce using rule 51 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf .)


state 266

    (27) declaracionFuncionParametros2 -> COMA INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .

    CPAREN          reduce using rule 27 (declaracionFuncionParametros2 -> COMA INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .)


state 267

    (28) declaracionFuncionParametros2 -> COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .

    CPAREN          reduce using rule 28 (declaracionFuncionParametros2 -> COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .)


state 268

    (29) declaracionFuncionParametros2 -> COMA CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .

    CPAREN          reduce using rule 29 (declaracionFuncionParametros2 -> COMA CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2 .)


state 269

    (50) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET . np_iniciaElse estatutos np_terminaElse CBRACKET
    (54) np_iniciaElse -> .

    REGRESA         reduce using rule 54 (np_iniciaElse -> .)
    VAR             reduce using rule 54 (np_iniciaElse -> .)
    DESDE           reduce using rule 54 (np_iniciaElse -> .)
    MIENTRAS        reduce using rule 54 (np_iniciaElse -> .)
    LEE             reduce using rule 54 (np_iniciaElse -> .)
    ESCRIBE         reduce using rule 54 (np_iniciaElse -> .)
    SI              reduce using rule 54 (np_iniciaElse -> .)
    ID              reduce using rule 54 (np_iniciaElse -> .)
    CBRACKET        reduce using rule 54 (np_iniciaElse -> .)

    np_iniciaElse                  shift and go to state 270

state 270

    (50) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse . estatutos np_terminaElse CBRACKET
    (33) estatutos -> . empty
    (34) estatutos -> . return
    (35) estatutos -> . declaracion estatutos
    (36) estatutos -> . estatutoRepeticionIncondicional estatutos
    (37) estatutos -> . estatutoRepeticionCondicional estatutos
    (38) estatutos -> . lectura estatutos
    (39) estatutos -> . asignacion estatutos
    (40) estatutos -> . escritura estatutos
    (41) estatutos -> . decision estatutos
    (42) estatutos -> . llamadaFuncion SEMICOLON estatutos
    (98) empty -> .
    (90) return -> . REGRESA expresion SEMICOLON
    (7) declaracion -> . VAR INT np_defineTipo COLON declaracion2
    (8) declaracion -> . VAR FLOAT np_defineTipo COLON declaracion2
    (9) declaracion -> . VAR CHAR np_defineTipo COLON declaracion2
    (88) estatutoRepeticionIncondicional -> . DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET
    (89) estatutoRepeticionCondicional -> . MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET
    (61) lectura -> . LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
    (64) asignacion -> . posibleID ASSIGN np_insertarOperador expresion SEMICOLON
    (43) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
    (50) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET
    (51) decision -> . SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf
    (56) llamadaFuncion -> . ID OPAREN primerParametro extraParametros CPAREN
    (79) posibleID -> . ID np_contieneID np_enviarACuadruplos
    (80) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH
    (81) posibleID -> . ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH

    CBRACKET        reduce using rule 98 (empty -> .)
    REGRESA         shift and go to state 58
    VAR             shift and go to state 8
    DESDE           shift and go to state 59
    MIENTRAS        shift and go to state 61
    LEE             shift and go to state 62
    ESCRIBE         shift and go to state 64
    SI              shift and go to state 65
    ID              shift and go to state 60

    estatutos                      shift and go to state 271
    empty                          shift and go to state 48
    return                         shift and go to state 49
    declaracion                    shift and go to state 50
    estatutoRepeticionIncondicional shift and go to state 51
    estatutoRepeticionCondicional  shift and go to state 52
    lectura                        shift and go to state 53
    asignacion                     shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    llamadaFuncion                 shift and go to state 57
    posibleID                      shift and go to state 63

state 271

    (50) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos . np_terminaElse CBRACKET
    (55) np_terminaElse -> .

    CBRACKET        reduce using rule 55 (np_terminaElse -> .)

    np_terminaElse                 shift and go to state 272

state 272

    (50) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse . CBRACKET

    CBRACKET        shift and go to state 273


state 273

    (50) decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET .

    REGRESA         reduce using rule 50 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET .)
    VAR             reduce using rule 50 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET .)
    DESDE           reduce using rule 50 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET .)
    MIENTRAS        reduce using rule 50 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET .)
    LEE             reduce using rule 50 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET .)
    ESCRIBE         reduce using rule 50 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET .)
    SI              reduce using rule 50 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET .)
    ID              reduce using rule 50 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET .)
    CBRACKET        reduce using rule 50 (decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LOGIC in state 188 resolved as shift
WARNING: shift/reduce conflict for RELOP in state 188 resolved as shift
WARNING: shift/reduce conflict for LOGIC in state 189 resolved as shift
WARNING: shift/reduce conflict for RELOP in state 189 resolved as shift
