Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMENTARIO
    IGNORE
    MIENTRAS
    NEWLINE
    NUMBER
    QUOT
    REGRESA

Grammar

Rule 0     S' -> escritura
Rule 1     programa -> PROGRAMA ID SEMICOLON programa2
Rule 2     programa2 -> declaracion programa2
Rule 3     programa2 -> programa3
Rule 4     programa3 -> declaracionFuncion programa3
Rule 5     programa3 -> principal
Rule 6     principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET
Rule 7     declaracion -> VAR INT COLON declaracion2
Rule 8     declaracion -> VAR FLOAT COLON declaracion2
Rule 9     declaracion -> VAR CHAR COLON declaracion2
Rule 10    declaracion2 -> SEMICOLON
Rule 11    declaracion2 -> posibleID declaracion3
Rule 12    declaracion3 -> SEMICOLON
Rule 13    declaracion3 -> COMA declaracion2
Rule 14    declaracion3 -> ASSIGN expresion SEMICOLON
Rule 15    declaracion3 -> ASSIGN expresion COMA declaracion2
Rule 16    declaracionFuncion -> FUNCION VOID ID OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
Rule 17    declaracionFuncion -> FUNCION INT ID OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
Rule 18    declaracionFuncion -> FUNCION FLOAT ID OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
Rule 19    declaracionFuncion -> FUNCION CHAR ID OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET
Rule 20    declaracionFuncionParametros -> empty
Rule 21    declaracionFuncionParametros -> INT ID
Rule 22    declaracionFuncionParametros -> FLOAT ID
Rule 23    declaracionFuncionParametros -> CHAR ID
Rule 24    declaracionFuncionParametros -> INT ID declaracionFuncionParametros2
Rule 25    declaracionFuncionParametros -> FLOAT ID declaracionFuncionParametros2
Rule 26    declaracionFuncionParametros -> CHAR ID declaracionFuncionParametros2
Rule 27    declaracionFuncionParametros2 -> COMA INT ID
Rule 28    declaracionFuncionParametros2 -> COMA FLOAT ID
Rule 29    declaracionFuncionParametros2 -> COMA CHAR ID
Rule 30    declaracionFuncionParametros2 -> COMA INT ID declaracionFuncionParametros2
Rule 31    declaracionFuncionParametros2 -> COMA FLOAT ID declaracionFuncionParametros2
Rule 32    declaracionFuncionParametros2 -> COMA CHAR ID declaracionFuncionParametros2
Rule 33    declaracionFuncionVariables -> empty
Rule 34    declaracionFuncionVariables -> declaracion
Rule 35    estatutos -> empty
Rule 36    estatutos -> declaracion estatutos
Rule 37    estatutos -> estatutoRepeticionIncondicional estatutos
Rule 38    estatutos -> lectura estatutos
Rule 39    estatutos -> llamadaFuncion estatutos
Rule 40    estatutos -> asignacion estatutos
Rule 41    estatutos -> escritura estatutos
Rule 42    estatutos -> decision estatutos
Rule 43    escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON
Rule 44    escritura2 -> empty
Rule 45    escritura2 -> ID escritura3
Rule 46    escritura2 -> STRING escritura3
Rule 47    escritura3 -> empty
Rule 48    escritura3 -> COMA ID escritura3
Rule 49    escritura3 -> COMA STRING escritura3
Rule 50    decision -> SI OPAREN expresion CPAREN ENTONCES OBRACKET estatutos CBRACKET decision2
Rule 51    decision2 -> SINO OBRACKET estatutos CBRACKET
Rule 52    decision2 -> empty
Rule 53    llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN SEMICOLON
Rule 54    primerParametro -> expresion
Rule 55    primerParametro -> empty
Rule 56    extraParametros -> COMA expresion extraParametros
Rule 57    extraParametros -> empty
Rule 58    lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON
Rule 59    lectura2 -> empty
Rule 60    lectura2 -> COMA posibleID lectura2
Rule 61    asignacion -> ID ASSIGN expresion SEMICOLON
Rule 62    expresion -> expresion LOGIC expresion
Rule 63    expresion -> expresion RELOP expresion
Rule 64    expresion -> termino1 OPMATRIZ
Rule 65    expresion -> termino
Rule 66    termino -> termino PLUS termino
Rule 67    termino -> termino MINUS termino
Rule 68    termino -> termino MULTIPLY termino
Rule 69    termino -> termino DIVIDE termino
Rule 70    termino -> termino1 OPMATRIZ
Rule 71    termino -> termino1
Rule 72    termino1 -> posibleID
Rule 73    termino1 -> ENTERO
Rule 74    termino1 -> FLOTANTE
Rule 75    termino1 -> CARACTER
Rule 76    posibleID -> ID
Rule 77    posibleID -> ID OCORCH expresion CCORCH
Rule 78    posibleID -> ID OCORCH expresion COMA expresion CCORCH
Rule 79    termino1 -> OPAREN expresion CPAREN
Rule 80    estatutoRepeticionIncondicional -> DESDE ID ASSIGN expresion HASTA expresion HAZ OBRACKET estatutos CBRACKET
Rule 81    empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 14 15 61 80
CARACTER             : 75
CBRACKET             : 6 16 17 18 19 50 51 80
CCORCH               : 77 78
CHAR                 : 9 19 23 26 29 32
COLON                : 7 8 9
COMA                 : 13 15 27 28 29 30 31 32 48 49 56 60 78
COMENTARIO           : 
CPAREN               : 6 16 17 18 19 43 50 53 58 79
DESDE                : 80
DIVIDE               : 69
ENTERO               : 73
ENTONCES             : 50
ESCRIBE              : 43
FLOAT                : 8 18 22 25 28 31
FLOTANTE             : 74
FUNCION              : 16 17 18 19
HASTA                : 80
HAZ                  : 80
ID                   : 1 16 17 18 19 21 22 23 24 25 26 27 28 29 30 31 32 45 48 53 61 76 77 78 80
IGNORE               : 
INT                  : 7 17 21 24 27 30
LEE                  : 58
LOGIC                : 62
MIENTRAS             : 
MINUS                : 67
MULTIPLY             : 68
NEWLINE              : 
NUMBER               : 
OBRACKET             : 6 16 17 18 19 50 51 80
OCORCH               : 77 78
OPAREN               : 6 16 17 18 19 43 50 53 58 79
OPMATRIZ             : 64 70
PLUS                 : 66
PRINCIPAL            : 6
PROGRAMA             : 1
QUOT                 : 
REGRESA              : 
RELOP                : 63
SEMICOLON            : 1 10 12 14 43 53 58 61
SI                   : 50
SINO                 : 51
STRING               : 46 49
VAR                  : 7 8 9
VOID                 : 16
error                : 

Nonterminals, with rules where they appear

asignacion           : 40
decision             : 42
decision2            : 50
declaracion          : 2 34 36
declaracion2         : 7 8 9 13 15
declaracion3         : 11
declaracionFuncion   : 4
declaracionFuncionParametros : 16 17 18 19
declaracionFuncionParametros2 : 24 25 26 30 31 32
declaracionFuncionVariables : 16 17 18 19
empty                : 20 33 35 44 47 52 55 57 59
escritura            : 41 0
escritura2           : 43
escritura3           : 45 46 48 49
estatutoRepeticionIncondicional : 37
estatutos            : 6 16 17 18 19 36 37 38 39 40 41 42 50 51 80
expresion            : 14 15 50 54 56 61 62 62 63 63 77 78 78 79 80 80
extraParametros      : 53 56
lectura              : 38
lectura2             : 58 60
llamadaFuncion       : 39
posibleID            : 11 58 60 72
primerParametro      : 53
principal            : 5
programa             : 
programa2            : 1 2
programa3            : 3 4
termino              : 65 66 66 67 67 68 68 69 69
termino1             : 64 70 71

Parsing method: LALR

state 0

    (0) S' -> . escritura
    (43) escritura -> . ESCRIBE OPAREN escritura2 CPAREN SEMICOLON

    ESCRIBE         shift and go to state 2

    escritura                      shift and go to state 1

state 1

    (0) S' -> escritura .



state 2

    (43) escritura -> ESCRIBE . OPAREN escritura2 CPAREN SEMICOLON

    OPAREN          shift and go to state 3


state 3

    (43) escritura -> ESCRIBE OPAREN . escritura2 CPAREN SEMICOLON
    (44) escritura2 -> . empty
    (45) escritura2 -> . ID escritura3
    (46) escritura2 -> . STRING escritura3
    (81) empty -> .

    ID              shift and go to state 6
    STRING          shift and go to state 7
    CPAREN          reduce using rule 81 (empty -> .)

    escritura2                     shift and go to state 4
    empty                          shift and go to state 5

state 4

    (43) escritura -> ESCRIBE OPAREN escritura2 . CPAREN SEMICOLON

    CPAREN          shift and go to state 8


state 5

    (44) escritura2 -> empty .

    CPAREN          reduce using rule 44 (escritura2 -> empty .)


state 6

    (45) escritura2 -> ID . escritura3
    (47) escritura3 -> . empty
    (48) escritura3 -> . COMA ID escritura3
    (49) escritura3 -> . COMA STRING escritura3
    (81) empty -> .

    COMA            shift and go to state 11
    CPAREN          reduce using rule 81 (empty -> .)

    escritura3                     shift and go to state 9
    empty                          shift and go to state 10

state 7

    (46) escritura2 -> STRING . escritura3
    (47) escritura3 -> . empty
    (48) escritura3 -> . COMA ID escritura3
    (49) escritura3 -> . COMA STRING escritura3
    (81) empty -> .

    COMA            shift and go to state 11
    CPAREN          reduce using rule 81 (empty -> .)

    escritura3                     shift and go to state 12
    empty                          shift and go to state 10

state 8

    (43) escritura -> ESCRIBE OPAREN escritura2 CPAREN . SEMICOLON

    SEMICOLON       shift and go to state 13


state 9

    (45) escritura2 -> ID escritura3 .

    CPAREN          reduce using rule 45 (escritura2 -> ID escritura3 .)


state 10

    (47) escritura3 -> empty .

    CPAREN          reduce using rule 47 (escritura3 -> empty .)


state 11

    (48) escritura3 -> COMA . ID escritura3
    (49) escritura3 -> COMA . STRING escritura3

    ID              shift and go to state 14
    STRING          shift and go to state 15


state 12

    (46) escritura2 -> STRING escritura3 .

    CPAREN          reduce using rule 46 (escritura2 -> STRING escritura3 .)


state 13

    (43) escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .

    $end            reduce using rule 43 (escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON .)


state 14

    (48) escritura3 -> COMA ID . escritura3
    (47) escritura3 -> . empty
    (48) escritura3 -> . COMA ID escritura3
    (49) escritura3 -> . COMA STRING escritura3
    (81) empty -> .

    COMA            shift and go to state 11
    CPAREN          reduce using rule 81 (empty -> .)

    escritura3                     shift and go to state 16
    empty                          shift and go to state 10

state 15

    (49) escritura3 -> COMA STRING . escritura3
    (47) escritura3 -> . empty
    (48) escritura3 -> . COMA ID escritura3
    (49) escritura3 -> . COMA STRING escritura3
    (81) empty -> .

    COMA            shift and go to state 11
    CPAREN          reduce using rule 81 (empty -> .)

    escritura3                     shift and go to state 17
    empty                          shift and go to state 10

state 16

    (48) escritura3 -> COMA ID escritura3 .

    CPAREN          reduce using rule 48 (escritura3 -> COMA ID escritura3 .)


state 17

    (49) escritura3 -> COMA STRING escritura3 .

    CPAREN          reduce using rule 49 (escritura3 -> COMA STRING escritura3 .)

