PROGRAMA p;
VAR INT: a[2,3], ad, b[3,2], c[2,2];
VAR FLOAT: d[5,5], cd;
VAR CHAR: e[1,1];

FUNCION INT fibonacciRecursivo(INT n){

  SI (n == 0) ENTONCES{
      REGRESA 0;
  }

  SI (n == 1) ENTONCES{
      REGRESA 1;
  }

  SI (n == 2) ENTONCES{
      REGRESA 1;
  }

  REGRESA fibonacciRecursivo(n - 1) + fibonacciRecursivo(n - 2);
}

FUNCION INT fibonacciIterativo(INT n)
VAR INT: i = 3;
{
  SI (n == 0) ENTONCES{
      REGRESA 0;
  }

  SI (n == 1) ENTONCES{
      REGRESA 1;
  }

  VAR INT: fib[11];

  fib[0] = 1;
  fib[1] = 1;
  fib[2] = 1;
  DESDE i HASTA n HAZ{
    fib[i] = fib[i-1]+fib[i-2];
  }

  REGRESA fib[n];
}

PRINCIPAL(){
    ESCRIBE("Fibonacci\n Iterativo:", fibonacciIterativo(10));
    ESCRIBE("Fibonacci Recursivo:", fibonacciRecursivo(10));

    VAR INT: i = 0, j = 0;

    DESDE i HASTA 1 HAZ{ %%Inicializar matriz con dimensiones 2,3
      DESDE j HASTA 2 HAZ{
          a[i,j] = i*3+j;
          ESCRIBE(a[i,j]);
      }
      j = 0;
    }

    i = 0;
    DESDE i HASTA 1 HAZ{%%Inicializar matriz con dimensiones 2,2
      DESDE j HASTA 1 HAZ{
          c[i,j] = i*2+j;
          ESCRIBE("i:\n",i,"j:",j,c[i,j]);
      }
      j = 0;
    }

    %%Probar transpuesta
    %%b = aยก;
    %%ESCRIBE(b[2,1]);

    %%Probar determinante con una matriz no cuadrada
    %%ad = a$;
    %%ESCRIBE(ad);

    %%Probar determinante con matriz cuadrada
    cd = c$;
    ESCRIBE(cd);

}
