
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDEleftOPMATRIZASSIGN CARACTER CBRACKET CCORCH CHAR COLON COMA COMENTARIO CPAREN DESDE DIVIDE ENTERO ENTONCES ESCRIBE FLOAT FLOTANTE FUNCION HASTA HAZ ID IGNORE INT LEE LOGIC MIENTRAS MINUS MULTIPLY NEWLINE OBRACKET OCORCH OPAREN OPMATRIZ PLUS PRINCIPAL PROGRAMA QUOT REGRESA RELOP SEMICOLON SI SINO STRING VAR VOID\n    programa : PROGRAMA ID SEMICOLON programa2\n    \n    programa2 : declaracion programa2\n              | programa3\n    \n    programa3 : declaracionFuncion programa3\n              | principal\n    \n    principal : PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos\n    \n    declaracion : VAR INT np_defineTipo COLON declaracion2\n                | VAR FLOAT np_defineTipo COLON declaracion2\n                | VAR CHAR np_defineTipo COLON declaracion2\n    \n    np_defineTipo :\n    \n    declaracion2 : posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3\n    \n    declaracion3 : SEMICOLON\n                 | COMA declaracion2\n                 | ASSIGN expresion SEMICOLON\n                 | ASSIGN expresion COMA declaracion2\n    \n    declaracionFuncion : FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET\n    \n    declaracionFuncionParametros : empty\n    \n    declaracionFuncionParametros : INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2\n                                 | FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2\n                                 | CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2\n    \n    declaracionFuncionParametros2 : empty\n    \n    declaracionFuncionParametros2 : COMA INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2\n                                  | COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2\n                                  | COMA CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2\n    \n    declaracionFuncionVariables : empty\n                                | declaracion\n    \n    npdeclfunc :\n    \n    estatutos : empty\n              | return\n    \n    estatutos : declaracion estatutos\n              | estatutoRepeticionIncondicional estatutos\n              | estatutoRepeticionCondicional estatutos\n              | lectura estatutos\n              | asignacion estatutos\n              | escritura estatutos\n              | decision estatutos\n    \n    estatutos : llamadaFuncion SEMICOLON estatutos\n    \n    escritura : ESCRIBE OPAREN escritura2 CPAREN SEMICOLON\n    \n    escritura2 : empty\n    \n    escritura2 : posibleID escritura3\n               | STRING escritura3\n    \n    escritura3 : empty\n    \n    escritura3 : COMA expresion escritura3\n               | COMA STRING escritura3\n    \n    decision : SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET\n             | SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf\n    \n    np_iniciaIf :\n    \n    np_terminaIf :\n    \n    np_iniciaElse :\n    \n    np_terminaElse :\n    \n    llamadaFuncion : ID OPAREN primerParametro extraParametros CPAREN\n    \n    primerParametro : expresion\n                    | empty\n    \n    extraParametros : COMA expresion extraParametros\n                    | empty\n    \n    lectura : LEE OPAREN posibleID lectura2 CPAREN SEMICOLON\n    \n    lectura2 : empty\n    \n    lectura2 : COMA posibleID lectura2\n    \n    asignacion : posibleID ASSIGN np_insertarOperador expresion SEMICOLON\n    \n    expresion : expresion LOGIC np_insertarOperador expresion\n              | expresion RELOP np_insertarOperador expresion\n    \n    expresion : termino\n    \n    termino : termino PLUS np_insertarOperador termino\n            | termino MINUS np_insertarOperador termino\n            | termino MULTIPLY np_insertarOperador termino\n            | termino DIVIDE np_insertarOperador termino\n    \n    np_insertarOperador :\n    \n    termino : termino1 OPMATRIZ np_insertarOperador\n    \n    termino : termino1\n    \n    termino1 : posibleID\n             | ENTERO np_contieneID_Constante_Entero\n             | FLOTANTE np_contieneID_Constante_Flotante\n             | llamadaFuncion\n    \n    posibleID : ID np_contieneID np_enviarACuadruplos\n    \n    posibleID : ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH\n    \n    posibleID : ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH\n    \n    np_enviarACuadruplos :\n    \n    posibleIDDeclaracion : ID\n    \n    posibleIDDeclaracion : ID OCORCH expresion CCORCH\n    \n    posibleIDDeclaracion : ID OCORCH expresion COMA expresion CCORCH\n    \n    termino1 : OPAREN np_insertarOperador expresion CPAREN np_insertarOperador\n             | QUOT CARACTER QUOT\n    \n    estatutoRepeticionIncondicional : DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET\n    \n    estatutoRepeticionCondicional : MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET\n    \n    return : REGRESA expresion SEMICOLON\n    \n    np_contieneID :\n    \n    np_contieneID_Constante_Entero :\n    \n    np_contieneID_Constante_Flotante :\n    \n    np_addVariableParametro :\n    \n    np_addVariable :\n    \n    np_actualizarDimensiones :\n    \n    np_printCuadruplos :\n    \n    empty :\n    '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,5,7,10,13,17,62,95,],[0,-1,-3,-5,-2,-4,-92,-6,]),'ID':([2,18,25,26,27,29,30,33,34,39,40,41,42,43,44,45,47,48,56,59,60,61,70,78,82,84,85,86,87,88,98,99,100,101,102,103,107,117,123,124,125,126,128,135,136,137,138,139,140,144,146,148,152,157,160,163,181,182,186,187,199,200,201,206,208,209,210,211,214,220,225,226,231,235,236,239,],[3,23,32,32,32,49,-7,-8,-9,49,49,49,49,49,49,49,80,81,80,92,93,94,49,-67,80,80,116,-67,116,80,-67,-67,-67,-67,-67,-67,80,80,-11,-12,32,80,80,80,80,80,80,80,80,80,80,80,116,80,-13,49,-59,-38,-14,32,80,49,-56,-15,215,216,217,49,49,-84,-83,-48,-46,-49,49,-45,]),'SEMICOLON':([3,31,32,46,55,71,72,73,74,75,76,77,80,83,89,104,105,106,113,127,141,143,153,154,161,167,168,169,170,171,172,173,175,179,188,195,198,219,],[4,-90,-78,70,-91,97,-62,-69,-70,-87,-88,-73,-86,-77,124,-67,-71,-72,-74,-79,-68,-82,181,182,186,-60,-61,-63,-64,-65,-66,-67,-51,201,-80,-81,-75,-76,]),'VAR':([4,6,29,30,33,34,39,40,41,42,43,44,45,70,91,123,124,160,163,181,182,186,200,201,206,211,214,220,225,226,231,235,236,239,],[8,8,8,-7,-8,-9,8,8,8,8,8,8,8,8,8,-11,-12,-13,8,-59,-38,-14,8,-56,-15,8,8,-84,-83,-48,-46,-49,8,-45,]),'FUNCION':([4,6,9,30,33,34,123,124,160,186,206,207,],[11,11,11,-7,-8,-9,-11,-12,-13,-14,-15,-16,]),'PRINCIPAL':([4,6,9,30,33,34,123,124,160,186,206,207,],[12,12,12,-7,-8,-9,-11,-12,-13,-14,-15,-16,]),'INT':([8,35,192,],[14,59,208,]),'FLOAT':([8,35,192,],[15,60,209,]),'CHAR':([8,35,192,],[16,61,210,]),'VOID':([11,],[18,]),'OPAREN':([12,23,28,47,49,50,51,53,54,56,78,80,82,84,86,88,98,99,100,101,102,103,107,117,126,128,135,136,137,138,139,140,144,146,148,157,199,],[19,-27,35,78,82,84,85,87,88,78,-67,82,78,78,-67,78,-67,-67,-67,-67,-67,-67,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'COLON':([14,15,16,20,21,22,],[-10,-10,-10,25,26,27,]),'CPAREN':([19,35,57,58,72,73,74,75,76,77,80,82,83,87,92,93,94,104,105,106,110,111,112,113,114,115,116,118,119,120,121,122,132,133,134,141,142,143,145,147,150,151,155,156,158,159,164,165,166,167,168,169,170,171,172,173,175,176,180,183,184,190,191,193,194,195,197,198,202,203,204,215,216,217,219,222,223,224,227,228,229,232,233,234,],[24,-93,91,-17,-62,-69,-70,-87,-88,-73,-86,-93,-77,-93,-89,-89,-89,-67,-71,-72,-93,-52,-53,-74,149,-93,-86,154,-39,-93,-93,-47,-91,-91,-91,-68,173,-82,175,-55,179,-57,-40,-42,-41,185,-93,-93,-93,-60,-61,-63,-64,-65,-66,-67,-51,-93,-93,-93,-93,-18,-21,-19,-20,-81,-54,-75,-58,-43,-44,-89,-89,-89,-76,-91,-91,-91,-93,-93,-93,-22,-23,-24,]),'OBRACKET':([24,30,33,34,91,123,124,129,130,131,160,178,186,196,205,206,230,],[29,-7,-8,-9,-93,-11,-12,163,-25,-26,-13,200,-14,211,214,-15,235,]),'CBRACKET':([29,30,33,34,36,37,38,39,40,41,42,43,44,45,63,64,65,66,67,68,69,70,96,97,123,124,160,163,181,182,186,189,200,201,206,211,213,214,218,220,221,225,226,231,235,236,237,238,239,],[-93,-7,-8,-9,62,-28,-29,-93,-93,-93,-93,-93,-93,-93,-30,-31,-32,-33,-34,-35,-36,-93,-37,-85,-11,-12,-13,-93,-59,-38,-14,207,-93,-56,-15,-93,220,-93,225,-84,226,-83,-48,-46,-49,-93,-50,239,-45,]),'REGRESA':([29,30,33,34,39,40,41,42,43,44,45,70,123,124,160,163,181,182,186,200,201,206,211,214,220,225,226,231,235,236,239,],[47,-7,-8,-9,47,47,47,47,47,47,47,47,-11,-12,-13,47,-59,-38,-14,47,-56,-15,47,47,-84,-83,-48,-46,-49,47,-45,]),'DESDE':([29,30,33,34,39,40,41,42,43,44,45,70,123,124,160,163,181,182,186,200,201,206,211,214,220,225,226,231,235,236,239,],[48,-7,-8,-9,48,48,48,48,48,48,48,48,-11,-12,-13,48,-59,-38,-14,48,-56,-15,48,48,-84,-83,-48,-46,-49,48,-45,]),'MIENTRAS':([29,30,33,34,39,40,41,42,43,44,45,70,123,124,160,163,181,182,186,200,201,206,211,214,220,225,226,231,235,236,239,],[50,-7,-8,-9,50,50,50,50,50,50,50,50,-11,-12,-13,50,-59,-38,-14,50,-56,-15,50,50,-84,-83,-48,-46,-49,50,-45,]),'LEE':([29,30,33,34,39,40,41,42,43,44,45,70,123,124,160,163,181,182,186,200,201,206,211,214,220,225,226,231,235,236,239,],[51,-7,-8,-9,51,51,51,51,51,51,51,51,-11,-12,-13,51,-59,-38,-14,51,-56,-15,51,51,-84,-83,-48,-46,-49,51,-45,]),'ESCRIBE':([29,30,33,34,39,40,41,42,43,44,45,70,123,124,160,163,181,182,186,200,201,206,211,214,220,225,226,231,235,236,239,],[53,-7,-8,-9,53,53,53,53,53,53,53,53,-11,-12,-13,53,-59,-38,-14,53,-56,-15,53,53,-84,-83,-48,-46,-49,53,-45,]),'SI':([29,30,33,34,39,40,41,42,43,44,45,70,123,124,160,163,181,182,186,200,201,206,211,214,220,225,226,231,235,236,239,],[54,-7,-8,-9,54,54,54,54,54,54,54,54,-11,-12,-13,54,-59,-38,-14,54,-56,-15,54,54,-84,-83,-48,-46,-49,54,-45,]),'COMA':([31,32,55,72,73,74,75,76,77,80,82,83,89,90,92,93,94,104,105,106,110,111,112,113,115,116,120,121,127,132,133,134,141,143,161,164,165,166,167,168,169,170,171,172,173,175,176,177,180,183,184,188,195,198,215,216,217,219,222,223,224,227,228,229,],[-90,-78,-91,-62,-69,-70,-87,-88,-73,-86,-93,-77,125,128,-89,-89,-89,-67,-71,-72,146,-52,-53,-74,152,-86,157,157,-79,-91,-91,-91,-68,-82,187,192,192,192,-60,-61,-63,-64,-65,-66,-67,-51,146,199,152,157,157,-80,-81,-75,-89,-89,-89,-76,-91,-91,-91,192,192,192,]),'ASSIGN':([31,32,49,52,55,83,89,113,127,188,198,219,],[-90,-78,-86,86,-91,-77,126,-74,-79,-80,-75,-76,]),'OCORCH':([32,49,80,83,113,116,],[56,-86,-86,-77,148,-86,]),'ENTERO':([47,56,78,82,84,86,88,98,99,100,101,102,103,107,117,126,128,135,136,137,138,139,140,144,146,148,157,199,],[75,75,-67,75,75,-67,75,-67,-67,-67,-67,-67,-67,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'FLOTANTE':([47,56,78,82,84,86,88,98,99,100,101,102,103,107,117,126,128,135,136,137,138,139,140,144,146,148,157,199,],[76,76,-67,76,76,-67,76,-67,-67,-67,-67,-67,-67,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'QUOT':([47,56,78,82,84,86,88,98,99,100,101,102,103,107,108,117,126,128,135,136,137,138,139,140,144,146,148,157,199,],[79,79,-67,79,79,-67,79,-67,-67,-67,-67,-67,-67,79,143,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'LOGIC':([71,72,73,74,75,76,77,80,83,90,104,105,106,111,113,114,122,141,142,143,153,161,162,167,168,169,170,171,172,173,174,175,176,177,183,195,198,212,219,],[98,-62,-69,-70,-87,-88,-73,-86,-77,98,-67,-71,-72,98,-74,98,98,-68,98,-82,98,98,98,98,98,-63,-64,-65,-66,-67,98,-51,98,98,98,-81,-75,98,-76,]),'RELOP':([71,72,73,74,75,76,77,80,83,90,104,105,106,111,113,114,122,141,142,143,153,161,162,167,168,169,170,171,172,173,174,175,176,177,183,195,198,212,219,],[99,-62,-69,-70,-87,-88,-73,-86,-77,99,-67,-71,-72,99,-74,99,99,-68,99,-82,99,99,99,99,99,-63,-64,-65,-66,-67,99,-51,99,99,99,-81,-75,99,-76,]),'CCORCH':([72,73,74,75,76,77,80,83,90,104,105,106,113,141,143,162,167,168,169,170,171,172,173,175,177,195,198,212,219,],[-62,-69,-70,-87,-88,-73,-86,-77,127,-67,-71,-72,-74,-68,-82,188,-60,-61,-63,-64,-65,-66,-67,-51,198,-81,-75,219,-76,]),'HAZ':([72,73,74,75,76,77,80,83,104,105,106,113,141,143,149,167,168,169,170,171,172,173,174,175,195,198,219,],[-62,-69,-70,-87,-88,-73,-86,-77,-67,-71,-72,-74,-68,-82,178,-60,-61,-63,-64,-65,-66,-67,196,-51,-81,-75,-76,]),'PLUS':([72,73,74,75,76,77,80,83,104,105,106,113,141,143,169,170,171,172,173,175,195,198,219,],[100,-69,-70,-87,-88,-73,-86,-77,-67,-71,-72,-74,-68,-82,-63,-64,-65,-66,-67,-51,-81,-75,-76,]),'MINUS':([72,73,74,75,76,77,80,83,104,105,106,113,141,143,169,170,171,172,173,175,195,198,219,],[101,-69,-70,-87,-88,-73,-86,-77,-67,-71,-72,-74,-68,-82,-63,-64,-65,-66,-67,-51,-81,-75,-76,]),'MULTIPLY':([72,73,74,75,76,77,80,83,104,105,106,113,141,143,169,170,171,172,173,175,195,198,219,],[102,-69,-70,-87,-88,-73,-86,-77,-67,-71,-72,-74,-68,-82,102,102,-65,-66,-67,-51,-81,-75,-76,]),'DIVIDE':([72,73,74,75,76,77,80,83,104,105,106,113,141,143,169,170,171,172,173,175,195,198,219,],[103,-69,-70,-87,-88,-73,-86,-77,-67,-71,-72,-74,-68,-82,103,103,-65,-66,-67,-51,-81,-75,-76,]),'OPMATRIZ':([73,74,75,76,77,80,83,105,106,113,143,173,175,195,198,219,],[104,-70,-87,-88,-73,-86,-77,-71,-72,-74,-82,-67,-51,-81,-75,-76,]),'CARACTER':([79,],[108,]),'HASTA':([81,109,],[-86,144,]),'STRING':([87,157,],[121,184,]),'ENTONCES':([185,],[205,]),'SINO':([226,],[230,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'programa2':([4,6,],[5,13,]),'declaracion':([4,6,29,39,40,41,42,43,44,45,70,91,163,200,211,214,236,],[6,6,39,39,39,39,39,39,39,39,39,131,39,39,39,39,39,]),'programa3':([4,6,9,],[7,7,17,]),'declaracionFuncion':([4,6,9,],[9,9,9,]),'principal':([4,6,9,],[10,10,10,]),'np_defineTipo':([14,15,16,],[20,21,22,]),'npdeclfunc':([23,],[28,]),'declaracion2':([25,26,27,125,187,],[30,33,34,160,206,]),'posibleIDDeclaracion':([25,26,27,125,187,],[31,31,31,31,31,]),'estatutos':([29,39,40,41,42,43,44,45,70,163,200,211,214,236,],[36,63,64,65,66,67,68,69,96,189,213,218,221,237,]),'empty':([29,35,39,40,41,42,43,44,45,70,82,87,91,110,115,120,121,163,164,165,166,176,180,183,184,200,211,214,227,228,229,236,],[37,58,37,37,37,37,37,37,37,37,112,119,130,147,151,156,156,37,191,191,191,147,151,156,156,37,37,37,191,191,191,37,]),'return':([29,39,40,41,42,43,44,45,70,163,200,211,214,236,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'estatutoRepeticionIncondicional':([29,39,40,41,42,43,44,45,70,163,200,211,214,236,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'estatutoRepeticionCondicional':([29,39,40,41,42,43,44,45,70,163,200,211,214,236,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'lectura':([29,39,40,41,42,43,44,45,70,163,200,211,214,236,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'asignacion':([29,39,40,41,42,43,44,45,70,163,200,211,214,236,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'escritura':([29,39,40,41,42,43,44,45,70,163,200,211,214,236,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'decision':([29,39,40,41,42,43,44,45,70,163,200,211,214,236,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'llamadaFuncion':([29,39,40,41,42,43,44,45,47,56,70,82,84,88,107,117,126,128,135,136,137,138,139,140,144,146,148,157,163,199,200,211,214,236,],[46,46,46,46,46,46,46,46,77,77,46,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,46,77,46,46,46,46,]),'posibleID':([29,39,40,41,42,43,44,45,47,56,70,82,84,85,87,88,107,117,126,128,135,136,137,138,139,140,144,146,148,152,157,163,199,200,211,214,236,],[52,52,52,52,52,52,52,52,74,74,52,74,74,115,120,74,74,74,74,74,74,74,74,74,74,74,74,74,74,180,74,52,74,52,52,52,52,]),'np_addVariable':([31,],[55,]),'declaracionFuncionParametros':([35,],[57,]),'expresion':([47,56,82,84,88,107,117,126,128,135,136,144,146,148,157,199,],[71,90,111,114,122,142,153,161,162,167,168,174,176,177,183,212,]),'termino':([47,56,82,84,88,107,117,126,128,135,136,137,138,139,140,144,146,148,157,199,],[72,72,72,72,72,72,72,72,72,72,72,169,170,171,172,72,72,72,72,72,]),'termino1':([47,56,82,84,88,107,117,126,128,135,136,137,138,139,140,144,146,148,157,199,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'np_contieneID':([49,80,81,116,],[83,83,109,83,]),'np_actualizarDimensiones':([55,132,133,134,222,223,224,],[89,164,165,166,227,228,229,]),'np_printCuadruplos':([62,],[95,]),'np_contieneID_Constante_Entero':([75,],[105,]),'np_contieneID_Constante_Flotante':([76,],[106,]),'np_insertarOperador':([78,86,98,99,100,101,102,103,104,173,],[107,117,135,136,137,138,139,140,141,195,]),'primerParametro':([82,],[110,]),'np_enviarACuadruplos':([83,],[113,]),'escritura2':([87,],[118,]),'declaracion3':([89,],[123,]),'declaracionFuncionVariables':([91,],[129,]),'np_addVariableParametro':([92,93,94,215,216,217,],[132,133,134,222,223,224,]),'extraParametros':([110,176,],[145,197,]),'lectura2':([115,180,],[150,202,]),'escritura3':([120,121,183,184,],[155,158,203,204,]),'np_iniciaIf':([122,],[159,]),'declaracionFuncionParametros2':([164,165,166,227,228,229,],[190,193,194,232,233,234,]),'np_terminaIf':([226,],[231,]),'np_iniciaElse':([235,],[236,]),'np_terminaElse':([237,],[238,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMICOLON programa2','programa',4,'p_programa','yaccPatito.py',37),
  ('programa2 -> declaracion programa2','programa2',2,'p_programa2','yaccPatito.py',44),
  ('programa2 -> programa3','programa2',1,'p_programa2','yaccPatito.py',45),
  ('programa3 -> declaracionFuncion programa3','programa3',2,'p_programa3','yaccPatito.py',52),
  ('programa3 -> principal','programa3',1,'p_programa3','yaccPatito.py',53),
  ('principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos','principal',7,'p_principal','yaccPatito.py',60),
  ('declaracion -> VAR INT np_defineTipo COLON declaracion2','declaracion',5,'p_declaracion','yaccPatito.py',71),
  ('declaracion -> VAR FLOAT np_defineTipo COLON declaracion2','declaracion',5,'p_declaracion','yaccPatito.py',72),
  ('declaracion -> VAR CHAR np_defineTipo COLON declaracion2','declaracion',5,'p_declaracion','yaccPatito.py',73),
  ('np_defineTipo -> <empty>','np_defineTipo',0,'p_np_defineTipo','yaccPatito.py',84),
  ('declaracion2 -> posibleIDDeclaracion np_addVariable np_actualizarDimensiones declaracion3','declaracion2',4,'p_declaracion2','yaccPatito.py',92),
  ('declaracion3 -> SEMICOLON','declaracion3',1,'p_declaracion3_1','yaccPatito.py',99),
  ('declaracion3 -> COMA declaracion2','declaracion3',2,'p_declaracion3_1','yaccPatito.py',100),
  ('declaracion3 -> ASSIGN expresion SEMICOLON','declaracion3',3,'p_declaracion3_1','yaccPatito.py',101),
  ('declaracion3 -> ASSIGN expresion COMA declaracion2','declaracion3',4,'p_declaracion3_1','yaccPatito.py',102),
  ('declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET','declaracionFuncion',11,'p_declaracionFuncion','yaccPatito.py',109),
  ('declaracionFuncionParametros -> empty','declaracionFuncionParametros',1,'p_declaracionFuncionParametros_1','yaccPatito.py',122),
  ('declaracionFuncionParametros -> INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2','declaracionFuncionParametros',5,'p_declaracionFuncionParametros_3','yaccPatito.py',128),
  ('declaracionFuncionParametros -> FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2','declaracionFuncionParametros',5,'p_declaracionFuncionParametros_3','yaccPatito.py',129),
  ('declaracionFuncionParametros -> CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2','declaracionFuncionParametros',5,'p_declaracionFuncionParametros_3','yaccPatito.py',130),
  ('declaracionFuncionParametros2 -> empty','declaracionFuncionParametros2',1,'p_declaracionFuncionParametros2_1','yaccPatito.py',137),
  ('declaracionFuncionParametros2 -> COMA INT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2','declaracionFuncionParametros2',6,'p_declaracionFuncionParametros2_4','yaccPatito.py',143),
  ('declaracionFuncionParametros2 -> COMA FLOAT ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2','declaracionFuncionParametros2',6,'p_declaracionFuncionParametros2_4','yaccPatito.py',144),
  ('declaracionFuncionParametros2 -> COMA CHAR ID np_addVariableParametro np_actualizarDimensiones declaracionFuncionParametros2','declaracionFuncionParametros2',6,'p_declaracionFuncionParametros2_4','yaccPatito.py',145),
  ('declaracionFuncionVariables -> empty','declaracionFuncionVariables',1,'p_declaracionFuncionVariables','yaccPatito.py',153),
  ('declaracionFuncionVariables -> declaracion','declaracionFuncionVariables',1,'p_declaracionFuncionVariables','yaccPatito.py',154),
  ('npdeclfunc -> <empty>','npdeclfunc',0,'p_npdeclfunc','yaccPatito.py',159),
  ('estatutos -> empty','estatutos',1,'p_estatutos_1','yaccPatito.py',167),
  ('estatutos -> return','estatutos',1,'p_estatutos_1','yaccPatito.py',168),
  ('estatutos -> declaracion estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',173),
  ('estatutos -> estatutoRepeticionIncondicional estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',174),
  ('estatutos -> estatutoRepeticionCondicional estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',175),
  ('estatutos -> lectura estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',176),
  ('estatutos -> asignacion estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',177),
  ('estatutos -> escritura estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',178),
  ('estatutos -> decision estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',179),
  ('estatutos -> llamadaFuncion SEMICOLON estatutos','estatutos',3,'p_estatutos_3','yaccPatito.py',185),
  ('escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON','escritura',5,'p_escritura','yaccPatito.py',190),
  ('escritura2 -> empty','escritura2',1,'p_escritura2_1','yaccPatito.py',195),
  ('escritura2 -> posibleID escritura3','escritura2',2,'p_escritura2_2','yaccPatito.py',200),
  ('escritura2 -> STRING escritura3','escritura2',2,'p_escritura2_2','yaccPatito.py',201),
  ('escritura3 -> empty','escritura3',1,'p_escritura3_1','yaccPatito.py',207),
  ('escritura3 -> COMA expresion escritura3','escritura3',3,'p_escritura3_3','yaccPatito.py',212),
  ('escritura3 -> COMA STRING escritura3','escritura3',3,'p_escritura3_3','yaccPatito.py',213),
  ('decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse estatutos np_terminaElse CBRACKET','decision',15,'p_decision','yaccPatito.py',219),
  ('decision -> SI OPAREN expresion np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf','decision',10,'p_decision','yaccPatito.py',220),
  ('np_iniciaIf -> <empty>','np_iniciaIf',0,'p_np_iniciaIf','yaccPatito.py',226),
  ('np_terminaIf -> <empty>','np_terminaIf',0,'p_np_terminaIf','yaccPatito.py',232),
  ('np_iniciaElse -> <empty>','np_iniciaElse',0,'p_np_iniciaElse','yaccPatito.py',238),
  ('np_terminaElse -> <empty>','np_terminaElse',0,'p_np_terminaElse','yaccPatito.py',244),
  ('llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN','llamadaFuncion',5,'p_llamadaFuncion','yaccPatito.py',250),
  ('primerParametro -> expresion','primerParametro',1,'p_primerParametro','yaccPatito.py',260),
  ('primerParametro -> empty','primerParametro',1,'p_primerParametro','yaccPatito.py',261),
  ('extraParametros -> COMA expresion extraParametros','extraParametros',3,'p_extraParametros','yaccPatito.py',268),
  ('extraParametros -> empty','extraParametros',1,'p_extraParametros','yaccPatito.py',269),
  ('lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON','lectura',6,'p_lectura','yaccPatito.py',276),
  ('lectura2 -> empty','lectura2',1,'p_lectura2_1','yaccPatito.py',281),
  ('lectura2 -> COMA posibleID lectura2','lectura2',3,'p_lectura2_3','yaccPatito.py',286),
  ('asignacion -> posibleID ASSIGN np_insertarOperador expresion SEMICOLON','asignacion',5,'p_asignacion','yaccPatito.py',291),
  ('expresion -> expresion LOGIC np_insertarOperador expresion','expresion',4,'p_expresion_3','yaccPatito.py',297),
  ('expresion -> expresion RELOP np_insertarOperador expresion','expresion',4,'p_expresion_3','yaccPatito.py',298),
  ('expresion -> termino','expresion',1,'p_expresion_1','yaccPatito.py',304),
  ('termino -> termino PLUS np_insertarOperador termino','termino',4,'p_termino_3','yaccPatito.py',320),
  ('termino -> termino MINUS np_insertarOperador termino','termino',4,'p_termino_3','yaccPatito.py',321),
  ('termino -> termino MULTIPLY np_insertarOperador termino','termino',4,'p_termino_3','yaccPatito.py',322),
  ('termino -> termino DIVIDE np_insertarOperador termino','termino',4,'p_termino_3','yaccPatito.py',323),
  ('np_insertarOperador -> <empty>','np_insertarOperador',0,'p_np_insertarOperador','yaccPatito.py',351),
  ('termino -> termino1 OPMATRIZ np_insertarOperador','termino',3,'p_termino_2','yaccPatito.py',357),
  ('termino -> termino1','termino',1,'p_termino_1','yaccPatito.py',363),
  ('termino1 -> posibleID','termino1',1,'p_termino1_1','yaccPatito.py',369),
  ('termino1 -> ENTERO np_contieneID_Constante_Entero','termino1',2,'p_termino1_1','yaccPatito.py',370),
  ('termino1 -> FLOTANTE np_contieneID_Constante_Flotante','termino1',2,'p_termino1_1','yaccPatito.py',371),
  ('termino1 -> llamadaFuncion','termino1',1,'p_termino1_1','yaccPatito.py',372),
  ('posibleID -> ID np_contieneID np_enviarACuadruplos','posibleID',3,'p_posibleID_1','yaccPatito.py',379),
  ('posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion CCORCH','posibleID',6,'p_posibleID_4','yaccPatito.py',388),
  ('posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH expresion COMA expresion CCORCH','posibleID',8,'p_posibleID_6','yaccPatito.py',398),
  ('np_enviarACuadruplos -> <empty>','np_enviarACuadruplos',0,'p_np_enviarACuadruplos','yaccPatito.py',408),
  ('posibleIDDeclaracion -> ID','posibleIDDeclaracion',1,'p_posibleIDDeclaracion_1','yaccPatito.py',414),
  ('posibleIDDeclaracion -> ID OCORCH expresion CCORCH','posibleIDDeclaracion',4,'p_posibleIDDeclaracion_4','yaccPatito.py',423),
  ('posibleIDDeclaracion -> ID OCORCH expresion COMA expresion CCORCH','posibleIDDeclaracion',6,'p_posibleIDDeclaracion_6','yaccPatito.py',433),
  ('termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador','termino1',5,'p_termino1_3','yaccPatito.py',443),
  ('termino1 -> QUOT CARACTER QUOT','termino1',3,'p_termino1_3','yaccPatito.py',444),
  ('estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET','estatutoRepeticionIncondicional',9,'p_estatutoRepeticionIncondicional','yaccPatito.py',451),
  ('estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET','estatutoRepeticionCondicional',8,'p_estatutoRepeticionCondicional','yaccPatito.py',457),
  ('return -> REGRESA expresion SEMICOLON','return',3,'p_return','yaccPatito.py',463),
  ('np_contieneID -> <empty>','np_contieneID',0,'p_np_contieneID','yaccPatito.py',471),
  ('np_contieneID_Constante_Entero -> <empty>','np_contieneID_Constante_Entero',0,'p_np_contieneID_Constante_Entero','yaccPatito.py',479),
  ('np_contieneID_Constante_Flotante -> <empty>','np_contieneID_Constante_Flotante',0,'p_np_contieneID_Constante_Flotante','yaccPatito.py',486),
  ('np_addVariableParametro -> <empty>','np_addVariableParametro',0,'p_np_addVariableParametro','yaccPatito.py',493),
  ('np_addVariable -> <empty>','np_addVariable',0,'p_np_addVariable','yaccPatito.py',500),
  ('np_actualizarDimensiones -> <empty>','np_actualizarDimensiones',0,'p_np_actualizarDimensiones','yaccPatito.py',511),
  ('np_printCuadruplos -> <empty>','np_printCuadruplos',0,'p_np_printCuadruplos','yaccPatito.py',517),
  ('empty -> <empty>','empty',0,'p_empty','yaccPatito.py',523),
]
