
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDEleftOPMATRIZASSIGN CARACTER CBRACKET CCORCH CHAR COLON COMA COMENTARIO CPAREN DESDE DIVIDE ENTERO ENTONCES ESCRIBE FLOAT FLOTANTE FUNCION HASTA HAZ ID IGNORE INT LEE LOGIC MIENTRAS MINUS MULTIPLY NEWLINE OBRACKET OCORCH OPAREN OPMATRIZ PLUS PRINCIPAL PROGRAMA QUOT REGRESA RELOP SEMICOLON SI SINO STRING VAR VOID\n    programa : PROGRAMA ID SEMICOLON programa2\n    \n    programa2 : declaracion programa2\n              | programa3\n    \n    programa3 : declaracionFuncion principal\n    \n    principal : PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos np_printTablas\n    \n    np_printTablas :\n    \n    declaracion : VAR INT np_defineTipo COLON declaracion2\n                | VAR FLOAT np_defineTipo COLON declaracion2\n                | VAR CHAR np_defineTipo COLON declaracion2\n    \n    np_defineTipo :\n    \n    declaracion2 : np_agregarFondo posibleIDDeclaracion declaracion3\n    \n    declaracion3 : np_quitarFondo SEMICOLON\n                 | np_quitarFondo COMA declaracion2\n                 | ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON\n                 | ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2\n    \n    declaracionFuncion : FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc\n                       | FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc\n                       | FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc\n                       | FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc\n    \n    np_esParametro :\n    \n    np_yaNoEsParametro :\n    \n    np_endFunc :\n    \n    np_termino :\n    \n    declaracionFuncionParametros : empty\n    \n    declaracionFuncionParametros : INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2\n                                 | CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2\n                                 | FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2\n    \n    declaracionFuncionParametros2 : empty\n    \n    declaracionFuncionParametros2 : COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2\n                                  | COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2\n                                  | COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2\n    \n    declaracionFuncionVariables : empty\n                                | declaracion\n    \n    np_declfunc :\n    \n    estatutos : return\n              | empty\n    \n    estatutos : declaracion estatutos\n              | estatutoRepeticionIncondicional estatutos\n              | estatutoRepeticionCondicional estatutos\n              | lectura estatutos\n              | asignacion estatutos\n              | escritura estatutos\n              | decision estatutos\n    \n    estatutos : llamadaFuncion SEMICOLON estatutos\n    \n    escritura : ESCRIBE OPAREN escritura2 CPAREN SEMICOLON\n    \n    escritura2 : empty\n    \n    escritura2 : posibleID escritura3\n               | STRING escritura3\n    \n    escritura3 : empty\n    \n    escritura3 : COMA expresion escritura3\n               | COMA STRING escritura3\n    \n    decision : SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET\n             | SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf\n    \n    np_iniciaIf :\n    \n    np_terminaIf :\n    \n    np_iniciaElse :\n    \n    np_terminaElse :\n    \n    llamadaFuncion : ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB\n    \n    np_existeFuncion :\n    \n    np_llamadaFuncion :\n    \n    paramsLlamada1 : empty\n                   | paramsLlamada2\n    \n    paramsLlamada2 : np_agregarFondo expresion np_quitarFondo np_resolverParam\n                   | np_agregarFondo expresion np_quitarFondo np_resolverParam COMA paramsLlamada2\n    \n    np_resolverParam :\n    \n    np_goSUB :\n    \n    lectura : LEE OPAREN posibleID lectura2 CPAREN SEMICOLON\n    \n    lectura2 : empty\n    \n    lectura2 : COMA posibleID lectura2\n    \n    asignacion : posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON\n    \n    expresion : expresion LOGIC np_insertarOperador expresion\n              | expresion RELOP np_insertarOperador expresion\n    \n    expresion : termino\n    \n    termino : termino PLUS np_insertarOperador termino\n            | termino MINUS np_insertarOperador termino\n            | termino MULTIPLY np_insertarOperador termino\n            | termino DIVIDE np_insertarOperador termino\n    \n    np_insertarOperador :\n    \n    termino : termino1 OPMATRIZ np_insertarOperador\n    \n    termino : termino1\n    \n    termino1 : posibleID\n             | ENTERO np_contieneID_Constante_Entero\n             | FLOTANTE np_contieneID_Constante_Flotante\n             | llamadaFuncion\n    \n    termino1 : OPAREN np_insertarOperador expresion CPAREN np_insertarOperador\n             | QUOT CARACTER QUOT\n    \n    posibleID : ID np_contieneID np_enviarACuadruplos\n              | ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH\n              | ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH\n    \n    posibleIDDeclaracion : np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones\n                         | np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH\n                         | np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH\n    \n    np_updateCurrentDimension0 :\n    \n    np_updateCurrentDimension1 :\n    \n    np_updateCurrentDimension2 :\n    \n    estatutoRepeticionIncondicional : DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET\n    \n    estatutoRepeticionCondicional : MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina\n    \n    npWhileStExp :\n    \n    npWhileInicia :\n    \n    npWhileTermina :\n    \n    return : REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return\n           | REGRESA SEMICOLON np_returnVOID\n    \n    np_return :\n    \n    np_returnVOID :\n    \n    np_contieneID :\n    \n    np_contieneID_Constante_Entero :\n    \n    np_contieneID_Constante_Flotante :\n    \n    np_addVariableParametro :\n    \n    np_addVariable :\n    \n    np_enviarACuadruplos :\n    \n    np_actualizarDimensiones :\n    \n    np_agregarFondo :\n    \n    np_quitarFondo :\n    \n    np_printCuadruplos :\n    \n    empty :\n    '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,5,7,11,15,79,112,149,],[0,-1,-3,-2,-4,-114,-6,-5,]),'ID':([2,17,18,19,20,29,30,31,37,38,39,40,41,47,48,49,53,54,55,56,57,58,59,61,62,73,75,87,88,93,94,96,97,100,101,102,106,107,108,121,128,131,136,138,139,140,144,151,152,153,154,155,156,160,162,163,164,165,168,169,173,177,178,179,188,189,190,191,192,193,201,202,206,207,220,221,222,223,237,243,247,248,249,250,254,271,275,280,281,282,287,288,289,290,291,292,294,295,296,303,305,306,307,310,315,317,321,322,326,327,331,],[3,25,26,27,28,-112,-112,-112,-7,-93,-8,-9,63,76,77,78,63,63,63,63,63,63,63,-112,90,-11,-78,63,123,-112,130,130,-112,-10,-10,-10,-12,-112,123,-78,-98,-78,123,-112,-112,-112,-13,-78,-78,-78,-78,-78,-78,123,123,-112,-112,123,130,-112,123,-93,-93,-93,123,123,123,123,123,123,123,123,123,-45,-14,-112,123,123,-67,63,63,63,63,-15,63,123,-112,-10,-10,-10,-96,-112,123,-99,-70,63,-112,-112,-112,63,-93,-93,-93,-55,-100,-53,-97,-56,-112,63,-52,]),'SEMICOLON':([3,46,60,61,74,76,92,109,114,115,116,117,118,119,120,123,127,145,146,150,157,158,159,170,183,184,194,196,204,225,226,227,228,229,230,231,233,239,253,255,259,270,274,277,300,314,],[4,-113,87,89,106,-109,-110,-110,-113,-73,-80,-81,-106,-107,-84,-105,-87,-113,-111,187,-78,-82,-83,207,220,-90,-79,-86,237,-71,-72,-74,-75,-76,-77,-78,-66,-113,-85,-58,-113,-91,-88,291,-92,-89,]),'VAR':([4,6,37,39,40,41,53,54,55,56,57,58,59,73,87,106,142,143,144,176,180,181,182,207,220,237,243,247,248,249,250,254,287,290,291,292,303,310,315,317,321,322,326,327,331,],[8,8,-7,-8,-9,8,8,8,8,8,8,8,8,-11,8,-12,-21,-21,-13,8,8,8,8,-45,-14,-67,8,8,8,8,-15,8,-96,-99,-70,8,8,-55,-100,-53,-97,-56,-112,8,-52,]),'FUNCION':([4,6,37,39,40,73,106,144,220,250,],[10,10,-7,-8,-9,-11,-12,-13,-14,-15,]),'INT':([8,10,42,43,44,45,69,70,71,72,264,],[12,18,-20,-20,-20,-20,100,100,100,100,280,]),'FLOAT':([8,10,42,43,44,45,69,70,71,72,264,],[13,19,-20,-20,-20,-20,102,102,102,102,281,]),'CHAR':([8,10,42,43,44,45,69,70,71,72,264,],[14,20,-20,-20,-20,-20,101,101,101,101,282,]),'PRINCIPAL':([9,279,283,284,285,293,297,298,299,],[16,-22,-22,-22,-22,-16,-17,-18,-19,]),'VOID':([10,],[17,]),'COLON':([12,13,14,21,22,23,],[-10,-10,-10,29,30,31,]),'OPAREN':([16,25,26,27,28,33,34,35,36,61,63,64,65,67,68,75,88,91,93,97,108,121,123,126,128,131,136,151,152,153,154,155,156,160,162,163,164,165,169,173,188,189,190,191,192,193,201,202,206,222,223,271,275,288,289,],[24,-34,-34,-34,-34,42,43,44,45,-112,-59,93,94,96,97,-78,121,-60,-112,-112,121,-78,-59,163,-98,-78,121,-78,-78,-78,-78,-78,-78,121,121,-112,-112,121,-112,121,121,121,121,121,121,121,121,121,121,121,121,121,-112,-112,121,]),'CPAREN':([24,42,43,44,45,69,70,71,72,76,92,96,98,99,103,104,105,109,115,116,117,118,119,120,123,127,129,130,132,133,134,135,137,141,146,157,158,159,163,166,167,171,172,174,175,184,194,195,196,198,199,200,203,205,208,209,210,214,215,216,225,226,227,228,229,230,231,233,234,236,238,240,241,242,244,245,246,253,255,256,262,263,265,266,270,273,274,300,301,311,312,313,314,318,319,320,323,324,325,],[32,-20,-20,-20,-20,-115,-115,-115,-115,-109,-110,-115,-21,-24,-21,142,143,-110,-73,-80,-81,-106,-107,-84,-105,-87,-115,-105,170,-46,-115,-115,176,180,-111,-78,-82,-83,-115,204,-68,-47,-49,-48,-113,-90,-79,231,-86,233,-61,-62,-113,-115,-115,-115,-54,-113,-113,-113,-71,-72,-74,-75,-76,-77,-78,-66,-113,258,-69,-50,-51,260,-115,-115,-115,-85,-58,-65,-25,-28,-26,-27,-91,-63,-88,-92,-64,-113,-113,-113,-89,-115,-115,-115,-29,-30,-31,]),'OBRACKET':([32,37,39,40,73,106,142,143,144,176,180,181,182,211,212,213,217,218,219,220,232,250,276,278,316,],[41,-7,-8,-9,-11,-12,-21,-21,-13,-115,-115,-115,-115,243,-32,-33,247,248,249,-14,254,-15,290,292,322,]),'REGRESA':([37,39,40,41,53,54,55,56,57,58,59,73,87,106,144,207,220,237,243,247,248,249,250,254,287,290,291,292,303,310,315,317,321,322,326,327,331,],[-7,-8,-9,61,61,61,61,61,61,61,61,-11,61,-12,-13,-45,-14,-67,61,61,61,61,-15,61,-96,-99,-70,61,61,-55,-100,-53,-97,-56,-112,61,-52,]),'DESDE':([37,39,40,41,53,54,55,56,57,58,59,73,87,106,144,207,220,237,243,247,248,249,250,254,287,290,291,292,303,310,315,317,321,322,326,327,331,],[-7,-8,-9,62,62,62,62,62,62,62,62,-11,62,-12,-13,-45,-14,-67,62,62,62,62,-15,62,-96,-99,-70,62,62,-55,-100,-53,-97,-56,-112,62,-52,]),'MIENTRAS':([37,39,40,41,53,54,55,56,57,58,59,73,87,106,144,207,220,237,243,247,248,249,250,254,287,290,291,292,303,310,315,317,321,322,326,327,331,],[-7,-8,-9,64,64,64,64,64,64,64,64,-11,64,-12,-13,-45,-14,-67,64,64,64,64,-15,64,-96,-99,-70,64,64,-55,-100,-53,-97,-56,-112,64,-52,]),'LEE':([37,39,40,41,53,54,55,56,57,58,59,73,87,106,144,207,220,237,243,247,248,249,250,254,287,290,291,292,303,310,315,317,321,322,326,327,331,],[-7,-8,-9,65,65,65,65,65,65,65,65,-11,65,-12,-13,-45,-14,-67,65,65,65,65,-15,65,-96,-99,-70,65,65,-55,-100,-53,-97,-56,-112,65,-52,]),'ESCRIBE':([37,39,40,41,53,54,55,56,57,58,59,73,87,106,144,207,220,237,243,247,248,249,250,254,287,290,291,292,303,310,315,317,321,322,326,327,331,],[-7,-8,-9,67,67,67,67,67,67,67,67,-11,67,-12,-13,-45,-14,-67,67,67,67,67,-15,67,-96,-99,-70,67,67,-55,-100,-53,-97,-56,-112,67,-52,]),'SI':([37,39,40,41,53,54,55,56,57,58,59,73,87,106,144,207,220,237,243,247,248,249,250,254,287,290,291,292,303,310,315,317,321,322,326,327,331,],[-7,-8,-9,68,68,68,68,68,68,68,68,-11,68,-12,-13,-45,-14,-67,68,68,68,68,-15,68,-96,-99,-70,68,68,-55,-100,-53,-97,-56,-112,68,-52,]),'CBRACKET':([37,39,40,41,50,51,52,53,54,55,56,57,58,59,73,80,81,82,83,84,85,86,87,89,106,113,124,144,187,207,220,224,237,243,247,248,249,250,254,261,267,268,269,272,287,290,291,292,303,304,309,310,315,317,321,322,326,327,328,329,330,331,],[-7,-8,-9,-115,79,-35,-36,-115,-115,-115,-115,-115,-115,-115,-11,-37,-38,-39,-40,-41,-42,-43,-115,-104,-12,-44,-102,-13,-103,-45,-14,-101,-67,-115,-115,-115,-115,-15,-115,279,283,284,285,287,-96,-99,-70,-115,-115,310,315,-55,-100,-53,-97,-56,-112,-115,-113,-57,331,-52,]),'ASSIGN':([46,63,66,76,92,95,109,127,146,184,270,274,300,314,],[75,-105,-112,-109,-110,131,-110,-87,-111,-90,-91,-88,-92,-89,]),'COMA':([46,74,76,92,109,115,116,117,118,119,120,123,127,129,130,134,135,145,146,157,158,159,183,184,194,196,205,208,209,214,215,216,225,226,227,228,229,230,231,233,234,235,244,245,246,252,253,255,256,257,270,273,274,300,311,312,313,314,318,319,320,],[-113,107,-109,-110,-110,-73,-80,-81,-106,-107,-84,-105,-87,168,-105,173,173,-113,-111,-78,-82,-83,221,-90,-79,-86,168,173,173,-113,-113,-113,-71,-72,-74,-75,-76,-77,-78,-66,-113,-113,264,264,264,271,-85,-58,-65,275,-91,288,-88,-92,-113,-113,-113,-89,264,264,264,]),'ENTERO':([61,75,88,93,97,108,121,128,131,136,151,152,153,154,155,156,160,162,163,164,165,169,173,188,189,190,191,192,193,201,202,206,222,223,271,275,288,289,],[-112,-78,118,-112,-112,118,-78,-98,-78,118,-78,-78,-78,-78,-78,-78,118,118,-112,-112,118,-112,118,118,118,118,118,118,118,118,118,118,118,118,118,-112,-112,118,]),'FLOTANTE':([61,75,88,93,97,108,121,128,131,136,151,152,153,154,155,156,160,162,163,164,165,169,173,188,189,190,191,192,193,201,202,206,222,223,271,275,288,289,],[-112,-78,119,-112,-112,119,-78,-98,-78,119,-78,-78,-78,-78,-78,-78,119,119,-112,-112,119,-112,119,119,119,119,119,119,119,119,119,119,119,119,119,-112,-112,119,]),'QUOT':([61,75,88,93,97,108,121,128,131,136,151,152,153,154,155,156,160,161,162,163,164,165,169,173,188,189,190,191,192,193,201,202,206,222,223,271,275,288,289,],[-112,-78,122,-112,-112,122,-78,-98,-78,122,-78,-78,-78,-78,-78,-78,122,196,122,-112,-112,122,-112,122,122,122,122,122,122,122,122,122,122,122,122,122,-112,-112,122,]),'OCORCH':([63,77,78,92,110,111,123,127,130,147,148,185,186,],[-105,-109,-109,-110,-110,-110,-105,164,-105,-111,-111,222,223,]),'HASTA':([90,125,],[-105,162,]),'OPMATRIZ':([92,116,117,118,119,120,123,127,158,159,196,231,233,253,255,274,314,],[-110,157,-81,-106,-107,-84,-105,-87,-82,-83,-86,-78,-66,-85,-58,-88,-89,]),'PLUS':([92,115,116,117,118,119,120,123,127,157,158,159,194,196,227,228,229,230,231,233,253,255,274,314,],[-110,153,-80,-81,-106,-107,-84,-105,-87,-78,-82,-83,-79,-86,-74,-75,-76,-77,-78,-66,-85,-58,-88,-89,]),'MINUS':([92,115,116,117,118,119,120,123,127,157,158,159,194,196,227,228,229,230,231,233,253,255,274,314,],[-110,154,-80,-81,-106,-107,-84,-105,-87,-78,-82,-83,-79,-86,-74,-75,-76,-77,-78,-66,-85,-58,-88,-89,]),'MULTIPLY':([92,115,116,117,118,119,120,123,127,157,158,159,194,196,227,228,229,230,231,233,253,255,274,314,],[-110,155,-80,-81,-106,-107,-84,-105,-87,-78,-82,-83,-79,-86,155,155,-76,-77,-78,-66,-85,-58,-88,-89,]),'DIVIDE':([92,115,116,117,118,119,120,123,127,157,158,159,194,196,227,228,229,230,231,233,253,255,274,314,],[-110,156,-80,-81,-106,-107,-84,-105,-87,-78,-82,-83,-79,-86,156,156,-76,-77,-78,-66,-85,-58,-88,-89,]),'LOGIC':([92,114,115,116,117,118,119,120,123,127,145,157,158,159,175,194,195,196,197,203,208,225,226,227,228,229,230,231,233,234,235,239,251,252,253,255,274,286,302,314,],[-110,151,-73,-80,-81,-106,-107,-84,-105,-87,151,-78,-82,-83,151,-79,151,-86,151,151,151,151,151,-74,-75,-76,-77,-78,-66,151,151,151,151,151,-85,-58,-88,151,151,-89,]),'RELOP':([92,114,115,116,117,118,119,120,123,127,145,157,158,159,175,194,195,196,197,203,208,225,226,227,228,229,230,231,233,234,235,239,251,252,253,255,274,286,302,314,],[-110,152,-73,-80,-81,-106,-107,-84,-105,-87,152,-78,-82,-83,152,-79,152,-86,152,152,152,152,152,-74,-75,-76,-77,-78,-66,152,152,152,152,152,-85,-58,-88,152,152,-89,]),'HAZ':([92,115,116,117,118,119,120,123,127,157,158,159,194,196,197,225,226,227,228,229,230,231,233,253,255,258,274,314,],[-110,-73,-80,-81,-106,-107,-84,-105,-87,-78,-82,-83,-79,-86,232,-71,-72,-74,-75,-76,-77,-78,-66,-85,-58,276,-88,-89,]),'CCORCH':([92,115,116,117,118,119,120,123,127,157,158,159,194,196,225,226,227,228,229,230,231,233,235,251,253,255,257,274,286,302,308,314,],[-110,-73,-80,-81,-106,-107,-84,-105,-87,-78,-82,-83,-79,-86,-71,-72,-74,-75,-76,-77,-78,-66,-113,270,-85,-58,274,-88,300,-113,314,-89,]),'STRING':([96,173,],[135,209,]),'CARACTER':([122,],[161,]),'ENTONCES':([260,],[278,]),'SINO':([310,],[316,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'programa2':([4,6,],[5,11,]),'declaracion':([4,6,41,53,54,55,56,57,58,59,87,176,180,181,182,243,247,248,249,254,292,303,327,],[6,6,53,53,53,53,53,53,53,53,53,213,213,213,213,53,53,53,53,53,53,53,53,]),'programa3':([4,6,],[7,7,]),'declaracionFuncion':([4,6,],[9,9,]),'principal':([9,],[15,]),'np_defineTipo':([12,13,14,100,101,102,280,281,282,],[21,22,23,138,139,140,294,295,296,]),'np_declfunc':([25,26,27,28,],[33,34,35,36,]),'declaracion2':([29,30,31,107,221,],[37,39,40,144,250,]),'np_agregarFondo':([29,30,31,61,66,93,97,107,138,139,140,163,164,169,221,275,288,294,295,296,326,],[38,38,38,88,95,128,136,38,177,178,179,201,202,206,38,289,201,305,306,307,327,]),'posibleIDDeclaracion':([38,177,178,179,305,306,307,],[46,214,215,216,311,312,313,]),'np_updateCurrentDimension0':([38,177,178,179,305,306,307,],[47,47,47,47,47,47,47,]),'np_updateCurrentDimension1':([38,177,178,179,305,306,307,],[48,48,48,48,48,48,48,]),'np_updateCurrentDimension2':([38,177,178,179,305,306,307,],[49,49,49,49,49,49,49,]),'estatutos':([41,53,54,55,56,57,58,59,87,243,247,248,249,254,292,303,327,],[50,80,81,82,83,84,85,86,113,261,267,268,269,272,304,309,328,]),'return':([41,53,54,55,56,57,58,59,87,243,247,248,249,254,292,303,327,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'empty':([41,53,54,55,56,57,58,59,69,70,71,72,87,96,129,134,135,163,176,180,181,182,205,208,209,243,244,245,246,247,248,249,254,292,303,318,319,320,327,],[52,52,52,52,52,52,52,52,99,99,99,99,52,133,167,172,172,199,212,212,212,212,167,172,172,52,263,263,263,52,52,52,52,52,52,263,263,263,52,]),'estatutoRepeticionIncondicional':([41,53,54,55,56,57,58,59,87,243,247,248,249,254,292,303,327,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'estatutoRepeticionCondicional':([41,53,54,55,56,57,58,59,87,243,247,248,249,254,292,303,327,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'lectura':([41,53,54,55,56,57,58,59,87,243,247,248,249,254,292,303,327,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'asignacion':([41,53,54,55,56,57,58,59,87,243,247,248,249,254,292,303,327,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'escritura':([41,53,54,55,56,57,58,59,87,243,247,248,249,254,292,303,327,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'decision':([41,53,54,55,56,57,58,59,87,243,247,248,249,254,292,303,327,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'llamadaFuncion':([41,53,54,55,56,57,58,59,87,88,108,136,160,162,165,173,188,189,190,191,192,193,201,202,206,222,223,243,247,248,249,254,271,289,292,303,327,],[60,60,60,60,60,60,60,60,60,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,60,60,60,60,60,120,120,60,60,60,]),'posibleID':([41,53,54,55,56,57,58,59,87,88,94,96,108,136,160,162,165,168,173,188,189,190,191,192,193,201,202,206,222,223,243,247,248,249,254,271,289,292,303,327,],[66,66,66,66,66,66,66,66,66,117,129,134,117,117,117,117,117,205,117,117,117,117,117,117,117,117,117,117,117,117,66,66,66,66,66,117,117,66,66,66,]),'np_esParametro':([42,43,44,45,],[69,70,71,72,]),'declaracion3':([46,],[73,]),'np_quitarFondo':([46,114,145,175,203,214,215,216,234,235,239,259,302,311,312,313,328,],[74,150,183,210,236,244,245,246,256,257,259,277,308,318,319,320,329,]),'np_existeFuncion':([63,123,],[91,91,]),'np_contieneID':([63,90,123,130,],[92,125,92,92,]),'declaracionFuncionParametros':([69,70,71,72,],[98,103,104,105,]),'np_insertarOperador':([75,121,131,151,152,153,154,155,156,157,231,],[108,160,169,188,189,190,191,192,193,194,253,]),'np_addVariable':([76,77,78,],[109,110,111,]),'np_printCuadruplos':([79,],[112,]),'expresion':([88,108,136,160,162,165,173,188,189,201,202,206,222,223,271,289,],[114,145,175,195,197,203,208,225,226,234,235,239,251,252,286,302,]),'termino':([88,108,136,160,162,165,173,188,189,190,191,192,193,201,202,206,222,223,271,289,],[115,115,115,115,115,115,115,115,115,227,228,229,230,115,115,115,115,115,115,115,]),'termino1':([88,108,136,160,162,165,173,188,189,190,191,192,193,201,202,206,222,223,271,289,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'np_returnVOID':([89,],[124,]),'np_llamadaFuncion':([91,],[126,]),'np_enviarACuadruplos':([92,109,110,111,],[127,146,147,148,]),'escritura2':([96,],[132,]),'np_yaNoEsParametro':([98,103,142,143,],[137,141,181,182,]),'np_printTablas':([112,],[149,]),'np_contieneID_Constante_Entero':([118,],[158,]),'np_contieneID_Constante_Flotante':([119,],[159,]),'npWhileStExp':([128,],[165,]),'lectura2':([129,205,],[166,238,]),'escritura3':([134,135,208,209,],[171,174,240,241,]),'np_actualizarDimensiones':([146,147,148,],[184,185,186,]),'paramsLlamada1':([163,],[198,]),'paramsLlamada2':([163,288,],[200,301,]),'declaracionFuncionVariables':([176,180,181,182,],[211,217,218,219,]),'np_return':([187,],[224,]),'np_iniciaIf':([210,],[242,]),'np_goSUB':([233,],[255,]),'declaracionFuncionParametros2':([244,245,246,318,319,320,],[262,265,266,323,324,325,]),'np_resolverParam':([256,],[273,]),'np_endFunc':([279,283,284,285,],[293,297,298,299,]),'npWhileInicia':([290,],[303,]),'np_terminaIf':([310,],[317,]),'npWhileTermina':([315,],[321,]),'np_iniciaElse':([322,],[326,]),'np_terminaElse':([329,],[330,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMICOLON programa2','programa',4,'p_programa','yaccPatito.py',39),
  ('programa2 -> declaracion programa2','programa2',2,'p_programa2','yaccPatito.py',44),
  ('programa2 -> programa3','programa2',1,'p_programa2','yaccPatito.py',45),
  ('programa3 -> declaracionFuncion principal','programa3',2,'p_programa3','yaccPatito.py',51),
  ('principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET np_printCuadruplos np_printTablas','principal',8,'p_principal','yaccPatito.py',57),
  ('np_printTablas -> <empty>','np_printTablas',0,'p_np_printTablas','yaccPatito.py',68),
  ('declaracion -> VAR INT np_defineTipo COLON declaracion2','declaracion',5,'p_declaracion','yaccPatito.py',74),
  ('declaracion -> VAR FLOAT np_defineTipo COLON declaracion2','declaracion',5,'p_declaracion','yaccPatito.py',75),
  ('declaracion -> VAR CHAR np_defineTipo COLON declaracion2','declaracion',5,'p_declaracion','yaccPatito.py',76),
  ('np_defineTipo -> <empty>','np_defineTipo',0,'p_np_defineTipo','yaccPatito.py',86),
  ('declaracion2 -> np_agregarFondo posibleIDDeclaracion declaracion3','declaracion2',3,'p_declaracion2','yaccPatito.py',94),
  ('declaracion3 -> np_quitarFondo SEMICOLON','declaracion3',2,'p_declaracion3_1','yaccPatito.py',99),
  ('declaracion3 -> np_quitarFondo COMA declaracion2','declaracion3',3,'p_declaracion3_1','yaccPatito.py',100),
  ('declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo SEMICOLON','declaracion3',5,'p_declaracion3_1','yaccPatito.py',101),
  ('declaracion3 -> ASSIGN np_insertarOperador expresion np_quitarFondo COMA declaracion2','declaracion3',6,'p_declaracion3_1','yaccPatito.py',102),
  ('declaracionFuncion -> FUNCION VOID ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc','declaracionFuncion',14,'p_declaracionFuncion','yaccPatito.py',107),
  ('declaracionFuncion -> FUNCION INT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros np_yaNoEsParametro CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc','declaracionFuncion',14,'p_declaracionFuncion','yaccPatito.py',108),
  ('declaracionFuncion -> FUNCION FLOAT ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc','declaracionFuncion',14,'p_declaracionFuncion','yaccPatito.py',109),
  ('declaracionFuncion -> FUNCION CHAR ID np_declfunc OPAREN np_esParametro declaracionFuncionParametros CPAREN np_yaNoEsParametro declaracionFuncionVariables OBRACKET estatutos CBRACKET np_endFunc','declaracionFuncion',14,'p_declaracionFuncion','yaccPatito.py',110),
  ('np_esParametro -> <empty>','np_esParametro',0,'p_np_esParametro','yaccPatito.py',119),
  ('np_yaNoEsParametro -> <empty>','np_yaNoEsParametro',0,'p_np_yaNoEsParametro','yaccPatito.py',126),
  ('np_endFunc -> <empty>','np_endFunc',0,'p_np_endFunc','yaccPatito.py',133),
  ('np_termino -> <empty>','np_termino',0,'p_np_termino','yaccPatito.py',140),
  ('declaracionFuncionParametros -> empty','declaracionFuncionParametros',1,'p_declaracionFuncionParametros_1','yaccPatito.py',149),
  ('declaracionFuncionParametros -> INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2','declaracionFuncionParametros',6,'p_declaracionFuncionParametros_3','yaccPatito.py',154),
  ('declaracionFuncionParametros -> CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2','declaracionFuncionParametros',6,'p_declaracionFuncionParametros_3','yaccPatito.py',155),
  ('declaracionFuncionParametros -> FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2','declaracionFuncionParametros',6,'p_declaracionFuncionParametros_3','yaccPatito.py',156),
  ('declaracionFuncionParametros2 -> empty','declaracionFuncionParametros2',1,'p_declaracionFuncionParametros2_1','yaccPatito.py',161),
  ('declaracionFuncionParametros2 -> COMA INT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2','declaracionFuncionParametros2',7,'p_declaracionFuncionParametros2_4','yaccPatito.py',166),
  ('declaracionFuncionParametros2 -> COMA FLOAT np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2','declaracionFuncionParametros2',7,'p_declaracionFuncionParametros2_4','yaccPatito.py',167),
  ('declaracionFuncionParametros2 -> COMA CHAR np_defineTipo np_agregarFondo posibleIDDeclaracion np_quitarFondo declaracionFuncionParametros2','declaracionFuncionParametros2',7,'p_declaracionFuncionParametros2_4','yaccPatito.py',168),
  ('declaracionFuncionVariables -> empty','declaracionFuncionVariables',1,'p_declaracionFuncionVariables','yaccPatito.py',174),
  ('declaracionFuncionVariables -> declaracion','declaracionFuncionVariables',1,'p_declaracionFuncionVariables','yaccPatito.py',175),
  ('np_declfunc -> <empty>','np_declfunc',0,'p_np_declfunc','yaccPatito.py',180),
  ('estatutos -> return','estatutos',1,'p_estatutos_1','yaccPatito.py',193),
  ('estatutos -> empty','estatutos',1,'p_estatutos_1','yaccPatito.py',194),
  ('estatutos -> declaracion estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',199),
  ('estatutos -> estatutoRepeticionIncondicional estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',200),
  ('estatutos -> estatutoRepeticionCondicional estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',201),
  ('estatutos -> lectura estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',202),
  ('estatutos -> asignacion estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',203),
  ('estatutos -> escritura estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',204),
  ('estatutos -> decision estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',205),
  ('estatutos -> llamadaFuncion SEMICOLON estatutos','estatutos',3,'p_estatutos_3','yaccPatito.py',211),
  ('escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON','escritura',5,'p_escritura','yaccPatito.py',216),
  ('escritura2 -> empty','escritura2',1,'p_escritura2_1','yaccPatito.py',221),
  ('escritura2 -> posibleID escritura3','escritura2',2,'p_escritura2_2','yaccPatito.py',226),
  ('escritura2 -> STRING escritura3','escritura2',2,'p_escritura2_2','yaccPatito.py',227),
  ('escritura3 -> empty','escritura3',1,'p_escritura3_1','yaccPatito.py',233),
  ('escritura3 -> COMA expresion escritura3','escritura3',3,'p_escritura3_3','yaccPatito.py',238),
  ('escritura3 -> COMA STRING escritura3','escritura3',3,'p_escritura3_3','yaccPatito.py',239),
  ('decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET SINO OBRACKET np_iniciaElse np_agregarFondo estatutos np_quitarFondo np_terminaElse CBRACKET','decision',19,'p_decision','yaccPatito.py',245),
  ('decision -> SI OPAREN np_agregarFondo expresion np_quitarFondo np_iniciaIf CPAREN ENTONCES OBRACKET estatutos CBRACKET np_terminaIf','decision',12,'p_decision','yaccPatito.py',246),
  ('np_iniciaIf -> <empty>','np_iniciaIf',0,'p_np_iniciaIf','yaccPatito.py',252),
  ('np_terminaIf -> <empty>','np_terminaIf',0,'p_np_terminaIf','yaccPatito.py',258),
  ('np_iniciaElse -> <empty>','np_iniciaElse',0,'p_np_iniciaElse','yaccPatito.py',264),
  ('np_terminaElse -> <empty>','np_terminaElse',0,'p_np_terminaElse','yaccPatito.py',270),
  ('llamadaFuncion -> ID np_existeFuncion np_llamadaFuncion OPAREN paramsLlamada1 CPAREN np_goSUB','llamadaFuncion',7,'p_llamadaFuncion','yaccPatito.py',276),
  ('np_existeFuncion -> <empty>','np_existeFuncion',0,'p_np_existeFuncion','yaccPatito.py',281),
  ('np_llamadaFuncion -> <empty>','np_llamadaFuncion',0,'p_np_llamadaFuncion','yaccPatito.py',289),
  ('paramsLlamada1 -> empty','paramsLlamada1',1,'p_paramsLlamada1','yaccPatito.py',297),
  ('paramsLlamada1 -> paramsLlamada2','paramsLlamada1',1,'p_paramsLlamada1','yaccPatito.py',298),
  ('paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo np_resolverParam','paramsLlamada2',4,'p_paramsLlamada2','yaccPatito.py',303),
  ('paramsLlamada2 -> np_agregarFondo expresion np_quitarFondo np_resolverParam COMA paramsLlamada2','paramsLlamada2',6,'p_paramsLlamada2','yaccPatito.py',304),
  ('np_resolverParam -> <empty>','np_resolverParam',0,'p_np_resolverParam','yaccPatito.py',309),
  ('np_goSUB -> <empty>','np_goSUB',0,'p_np_goSUB','yaccPatito.py',315),
  ('lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON','lectura',6,'p_lectura','yaccPatito.py',321),
  ('lectura2 -> empty','lectura2',1,'p_lectura2_1','yaccPatito.py',326),
  ('lectura2 -> COMA posibleID lectura2','lectura2',3,'p_lectura2_3','yaccPatito.py',331),
  ('asignacion -> posibleID np_agregarFondo ASSIGN np_insertarOperador np_agregarFondo expresion np_quitarFondo np_quitarFondo SEMICOLON','asignacion',9,'p_asignacion','yaccPatito.py',336),
  ('expresion -> expresion LOGIC np_insertarOperador expresion','expresion',4,'p_expresion_3','yaccPatito.py',342),
  ('expresion -> expresion RELOP np_insertarOperador expresion','expresion',4,'p_expresion_3','yaccPatito.py',343),
  ('expresion -> termino','expresion',1,'p_expresion_1','yaccPatito.py',348),
  ('termino -> termino PLUS np_insertarOperador termino','termino',4,'p_termino_3','yaccPatito.py',363),
  ('termino -> termino MINUS np_insertarOperador termino','termino',4,'p_termino_3','yaccPatito.py',364),
  ('termino -> termino MULTIPLY np_insertarOperador termino','termino',4,'p_termino_3','yaccPatito.py',365),
  ('termino -> termino DIVIDE np_insertarOperador termino','termino',4,'p_termino_3','yaccPatito.py',366),
  ('np_insertarOperador -> <empty>','np_insertarOperador',0,'p_np_insertarOperador','yaccPatito.py',393),
  ('termino -> termino1 OPMATRIZ np_insertarOperador','termino',3,'p_termino_2','yaccPatito.py',399),
  ('termino -> termino1','termino',1,'p_termino_1','yaccPatito.py',404),
  ('termino1 -> posibleID','termino1',1,'p_termino1_1','yaccPatito.py',409),
  ('termino1 -> ENTERO np_contieneID_Constante_Entero','termino1',2,'p_termino1_1','yaccPatito.py',410),
  ('termino1 -> FLOTANTE np_contieneID_Constante_Flotante','termino1',2,'p_termino1_1','yaccPatito.py',411),
  ('termino1 -> llamadaFuncion','termino1',1,'p_termino1_1','yaccPatito.py',412),
  ('termino1 -> OPAREN np_insertarOperador expresion CPAREN np_insertarOperador','termino1',5,'p_termino1_3','yaccPatito.py',417),
  ('termino1 -> QUOT CARACTER QUOT','termino1',3,'p_termino1_3','yaccPatito.py',418),
  ('posibleID -> ID np_contieneID np_enviarACuadruplos','posibleID',3,'p_posibleID_1','yaccPatito.py',423),
  ('posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo CCORCH','posibleID',8,'p_posibleID_1','yaccPatito.py',424),
  ('posibleID -> ID np_contieneID np_enviarACuadruplos OCORCH np_agregarFondo expresion np_quitarFondo COMA np_agregarFondo expresion np_quitarFondo CCORCH','posibleID',12,'p_posibleID_1','yaccPatito.py',425),
  ('posibleIDDeclaracion -> np_updateCurrentDimension0 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones','posibleIDDeclaracion',5,'p_posibleIDDeclaracion_1','yaccPatito.py',430),
  ('posibleIDDeclaracion -> np_updateCurrentDimension1 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion CCORCH','posibleIDDeclaracion',8,'p_posibleIDDeclaracion_1','yaccPatito.py',431),
  ('posibleIDDeclaracion -> np_updateCurrentDimension2 ID np_addVariable np_enviarACuadruplos np_actualizarDimensiones OCORCH expresion COMA expresion CCORCH','posibleIDDeclaracion',10,'p_posibleIDDeclaracion_1','yaccPatito.py',432),
  ('np_updateCurrentDimension0 -> <empty>','np_updateCurrentDimension0',0,'p_np_updateCurrentDimension0','yaccPatito.py',437),
  ('np_updateCurrentDimension1 -> <empty>','np_updateCurrentDimension1',0,'p_np_updateCurrentDimension1','yaccPatito.py',444),
  ('np_updateCurrentDimension2 -> <empty>','np_updateCurrentDimension2',0,'p_np_updateCurrentDimension2','yaccPatito.py',451),
  ('estatutoRepeticionIncondicional -> DESDE ID np_contieneID HASTA expresion HAZ OBRACKET estatutos CBRACKET','estatutoRepeticionIncondicional',9,'p_estatutoRepeticionIncondicional','yaccPatito.py',458),
  ('estatutoRepeticionCondicional -> MIENTRAS OPAREN np_agregarFondo npWhileStExp expresion np_quitarFondo CPAREN HAZ OBRACKET npWhileInicia estatutos CBRACKET npWhileTermina','estatutoRepeticionCondicional',13,'p_estatutoRepeticionCondicional','yaccPatito.py',464),
  ('npWhileStExp -> <empty>','npWhileStExp',0,'p_npWhileStExp','yaccPatito.py',470),
  ('npWhileInicia -> <empty>','npWhileInicia',0,'p_npWhileInicia','yaccPatito.py',476),
  ('npWhileTermina -> <empty>','npWhileTermina',0,'p_npWhileTermina','yaccPatito.py',482),
  ('return -> REGRESA np_agregarFondo expresion np_quitarFondo SEMICOLON np_return','return',6,'p_return','yaccPatito.py',488),
  ('return -> REGRESA SEMICOLON np_returnVOID','return',3,'p_return','yaccPatito.py',489),
  ('np_return -> <empty>','np_return',0,'p_np_return','yaccPatito.py',494),
  ('np_returnVOID -> <empty>','np_returnVOID',0,'p_np_returnVOID','yaccPatito.py',501),
  ('np_contieneID -> <empty>','np_contieneID',0,'p_np_contieneID','yaccPatito.py',512),
  ('np_contieneID_Constante_Entero -> <empty>','np_contieneID_Constante_Entero',0,'p_np_contieneID_Constante_Entero','yaccPatito.py',520),
  ('np_contieneID_Constante_Flotante -> <empty>','np_contieneID_Constante_Flotante',0,'p_np_contieneID_Constante_Flotante','yaccPatito.py',527),
  ('np_addVariableParametro -> <empty>','np_addVariableParametro',0,'p_np_addVariableParametro','yaccPatito.py',534),
  ('np_addVariable -> <empty>','np_addVariable',0,'p_np_addVariable','yaccPatito.py',541),
  ('np_enviarACuadruplos -> <empty>','np_enviarACuadruplos',0,'p_np_enviarACuadruplos','yaccPatito.py',547),
  ('np_actualizarDimensiones -> <empty>','np_actualizarDimensiones',0,'p_np_actualizarDimensiones','yaccPatito.py',554),
  ('np_agregarFondo -> <empty>','np_agregarFondo',0,'p_np_agregarFondo','yaccPatito.py',560),
  ('np_quitarFondo -> <empty>','np_quitarFondo',0,'p_np_quitarFondo','yaccPatito.py',567),
  ('np_printCuadruplos -> <empty>','np_printCuadruplos',0,'p_np_printCuadruplos','yaccPatito.py',574),
  ('empty -> <empty>','empty',0,'p_empty','yaccPatito.py',580),
]
