
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'estatutoRepeticionCondicionalleftPLUSMINUSleftMULTIPLYDIVIDEleftOPMATRIZASSIGN CARACTER CBRACKET CCORCH CHAR COLON COMA COMENTARIO CPAREN DESDE DIVIDE ENTERO ENTONCES ESCRIBE FLOAT FLOTANTE FUNCION HASTA HAZ ID IGNORE INT LEE LOGIC MIENTRAS MINUS MULTIPLY NEWLINE NUMBER OBRACKET OCORCH OPAREN OPMATRIZ PLUS PRINCIPAL PROGRAMA QUOT REGRESA RELOP SEMICOLON SI SINO STRING VAR VOID\n    programa : PROGRAMA ID SEMICOLON programa2\n    \n    programa2 : declaracion programa2\n              | programa3\n    \n    programa3 : declaracionFuncion programa3\n              | principal\n    \n    principal : PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET\n    \n    declaracion : VAR INT COLON declaracion2\n                | VAR FLOAT COLON declaracion2\n                | VAR CHAR COLON declaracion2\n    \n    declaracion2 : SEMICOLON\n    \n    declaracion2 : posibleID declaracion3\n    \n    declaracion3 : SEMICOLON\n    \n    declaracion3 : COMA declaracion2\n    \n    declaracion3 : ASSIGN expresion SEMICOLON\n    \n    declaracion3 : ASSIGN expresion COMA declaracion2\n    \n    declaracionFuncion : FUNCION VOID ID OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET\n                       | FUNCION INT ID OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET\n                       | FUNCION FLOAT ID OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET\n                       | FUNCION CHAR ID OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET\n    \n    declaracionFuncionParametros : empty\n    \n    declaracionFuncionParametros : INT ID\n                                 | FLOAT ID\n                                 | CHAR ID\n    \n    declaracionFuncionParametros : INT ID declaracionFuncionParametros2\n                                 | FLOAT ID declaracionFuncionParametros2\n                                 | CHAR ID declaracionFuncionParametros2\n    \n    declaracionFuncionParametros2 : COMA INT ID\n                                  | COMA FLOAT ID\n                                  | COMA CHAR ID\n    \n    declaracionFuncionParametros2 : COMA INT ID declaracionFuncionParametros2\n                                  | COMA FLOAT ID declaracionFuncionParametros2\n                                  | COMA CHAR ID declaracionFuncionParametros2\n    \n    declaracionFuncionVariables : empty\n                                | declaracion\n    \n    estatutos : empty\n    \n    estatutos : declaracion estatutos\n              | estatutoRepeticionIncondicional estatutos\n              | lectura estatutos\n              | llamadaFuncion estatutos\n              | asignacion estatutos\n              | escritura estatutos\n              | decision estatutos\n    \n    escritura : ESCRIBE OPAREN escritura2 CPAREN SEMICOLON\n    \n    escritura2 : empty\n    \n    escritura2 : ID escritura3\n               | STRING escritura3\n    \n    escritura3 : empty\n    \n    escritura3 : COMA ID escritura3\n               | COMA STRING escritura3\n    \n    decision : SI OPAREN expresion CPAREN ENTONCES OBRACKET estatutos CBRACKET decision2\n    \n    decision2 : SINO OBRACKET estatutos CBRACKET\n              | empty\n    \n    llamadaFuncion : ID OPAREN primerParametro extraParametros CPAREN SEMICOLON\n    \n    primerParametro : expresion\n                    | empty\n    \n    extraParametros : COMA expresion extraParametros\n                    | empty\n    \n    lectura : LEE OPAREN posibleID lectura2 CPAREN SEMICOLON\n    \n    lectura2 : empty\n    \n    lectura2 : COMA posibleID lectura2\n    \n    asignacion : ID ASSIGN expresion SEMICOLON\n    \n    expresion : expresion LOGIC expresion\n              | expresion RELOP expresion\n    \n    expresion : termino1 OPMATRIZ\n    \n    expresion : termino\n    \n    termino : termino PLUS termino\n            | termino MINUS termino\n            | termino MULTIPLY termino\n            | termino DIVIDE termino\n    \n    termino : termino1 OPMATRIZ\n    \n    termino : termino1\n    \n    termino1 : posibleID\n             | ENTERO\n             | FLOTANTE\n             | CARACTER\n    \n    posibleID : ID np_ID\n    \n    posibleID : ID OCORCH expresion CCORCH\n    \n    posibleID : ID np_ID OCORCH expresion COMA expresion CCORCH\n    \n    termino1 : OPAREN expresion CPAREN\n    \n    estatutoRepeticionIncondicional : DESDE ID ASSIGN expresion HASTA expresion HAZ OBRACKET estatutos CBRACKET\n    \n    estatutoRepeticionCondicional : MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET\n    \n    np_ID :\n    \n    empty :\n    '
    
_lr_action_items = {'MIENTRAS':([0,],[2,]),'$end':([1,55,],[0,-81,]),'OPAREN':([2,3,4,15,16,18,19,20,21,23,33,50,51,52,53,54,67,68,71,76,95,110,111,],[3,4,4,4,4,4,4,4,4,4,4,67,69,70,71,4,4,4,4,4,4,4,4,]),'ENTERO':([3,4,15,16,18,19,20,21,23,33,54,67,68,71,76,95,110,111,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'FLOTANTE':([3,4,15,16,18,19,20,21,23,33,54,67,68,71,76,95,110,111,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'CARACTER':([3,4,15,16,18,19,20,21,23,33,54,67,68,71,76,95,110,111,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'ID':([3,4,15,16,18,19,20,21,23,33,35,41,42,43,44,45,46,47,49,54,67,68,69,70,71,73,74,75,76,88,89,91,92,95,97,100,104,107,108,109,110,111,116,120,123,125,129,130,131,134,135,136,138,140,141,142,144,],[12,12,12,12,12,12,12,12,12,12,50,50,50,50,50,50,50,50,66,12,12,12,12,84,12,12,12,12,12,-7,-10,-8,-9,12,-61,12,117,-11,-12,12,12,12,-43,-13,-53,-58,50,-14,12,-15,50,-83,-50,-52,-80,50,-51,]),'CPAREN':([5,6,7,8,9,10,11,12,13,17,22,24,26,27,28,29,30,31,32,36,38,67,70,77,78,79,81,82,83,84,85,86,87,94,96,98,99,102,103,105,113,115,117,118,124,126,127,128,],[14,-71,-65,-72,-73,-74,-75,-82,24,-64,-76,-79,-62,-63,-66,-71,-67,-68,-69,-70,-77,-83,-83,-83,-54,-55,-83,101,-44,-83,-83,106,-78,112,-57,114,-59,-45,-47,-46,-83,-83,-83,-83,-56,-60,-48,-49,]),'LOGIC':([5,6,7,8,9,10,11,12,13,17,22,24,26,27,28,29,30,31,32,34,36,37,38,72,78,80,86,87,93,113,121,122,],[15,-71,-65,-72,-73,-74,-75,-82,15,-64,-76,-79,15,15,-66,-71,-67,-68,-69,15,-70,15,-77,15,15,15,15,-78,15,15,15,15,]),'RELOP':([5,6,7,8,9,10,11,12,13,17,22,24,26,27,28,29,30,31,32,34,36,37,38,72,78,80,86,87,93,113,121,122,],[16,-71,-65,-72,-73,-74,-75,-82,16,-64,-76,-79,16,16,-66,-71,-67,-68,-69,16,-70,16,-77,16,16,16,16,-78,16,16,16,16,]),'OPMATRIZ':([6,8,9,10,11,12,22,24,29,38,87,],[17,-72,-73,-74,-75,-82,-76,-79,36,-77,-78,]),'PLUS':([6,7,8,9,10,11,12,17,22,24,28,29,30,31,32,36,38,87,],[-71,18,-72,-73,-74,-75,-82,-70,-76,-79,-66,-71,-67,-68,-69,-70,-77,-78,]),'MINUS':([6,7,8,9,10,11,12,17,22,24,28,29,30,31,32,36,38,87,],[-71,19,-72,-73,-74,-75,-82,-70,-76,-79,-66,-71,-67,-68,-69,-70,-77,-78,]),'MULTIPLY':([6,7,8,9,10,11,12,17,22,24,28,29,30,31,32,36,38,87,],[-71,20,-72,-73,-74,-75,-82,-70,-76,-79,20,-71,20,-68,-69,-70,-77,-78,]),'DIVIDE':([6,7,8,9,10,11,12,17,22,24,28,29,30,31,32,36,38,87,],[-71,21,-72,-73,-74,-75,-82,-70,-76,-79,21,-71,21,-68,-69,-70,-77,-78,]),'CCORCH':([6,7,8,9,10,11,12,17,22,24,26,27,28,29,30,31,32,34,36,38,72,87,],[-71,-65,-72,-73,-74,-75,-82,-64,-76,-79,-62,-63,-66,-71,-67,-68,-69,38,-70,-77,87,-78,]),'COMA':([6,7,8,9,10,11,12,17,22,24,26,27,28,29,30,31,32,36,37,38,67,77,78,79,81,84,85,87,90,113,115,117,118,121,],[-71,-65,-72,-73,-74,-75,-82,-64,-76,-79,-62,-63,-66,-71,-67,-68,-69,-70,54,-77,-83,95,-54,-55,100,104,104,-78,109,95,100,104,104,131,]),'SEMICOLON':([6,7,8,9,10,11,12,17,22,24,26,27,28,29,30,31,32,36,38,73,74,75,80,87,90,101,109,112,114,121,131,],[-71,-65,-72,-73,-74,-75,-82,-64,-76,-79,-62,-63,-66,-71,-67,-68,-69,-70,-77,89,89,89,97,-78,108,116,89,123,125,130,89,]),'HASTA':([6,7,8,9,10,11,12,17,22,24,26,27,28,29,30,31,32,36,38,87,93,],[-71,-65,-72,-73,-74,-75,-82,-64,-76,-79,-62,-63,-66,-71,-67,-68,-69,-70,-77,-78,111,]),'HAZ':([6,7,8,9,10,11,12,14,17,22,24,26,27,28,29,30,31,32,36,38,87,122,],[-71,-65,-72,-73,-74,-75,-82,25,-64,-76,-79,-62,-63,-66,-71,-67,-68,-69,-70,-77,-78,132,]),'OCORCH':([12,22,],[23,33,]),'ASSIGN':([12,22,38,50,66,87,90,],[-82,-76,-77,68,76,-78,110,]),'OBRACKET':([25,119,132,139,],[35,129,135,142,]),'CBRACKET':([35,39,40,41,42,43,44,45,46,47,56,57,58,59,60,61,62,88,89,91,92,97,107,108,116,120,123,125,129,130,133,134,135,136,137,138,140,141,142,143,144,],[-83,55,-35,-83,-83,-83,-83,-83,-83,-83,-36,-37,-38,-39,-40,-41,-42,-7,-10,-8,-9,-61,-11,-12,-43,-13,-53,-58,-83,-14,136,-15,-83,-83,141,-50,-52,-80,-83,144,-51,]),'VAR':([35,41,42,43,44,45,46,47,88,89,91,92,97,107,108,116,120,123,125,129,130,134,135,136,138,140,141,142,144,],[48,48,48,48,48,48,48,48,-7,-10,-8,-9,-61,-11,-12,-43,-13,-53,-58,48,-14,-15,48,-83,-50,-52,-80,48,-51,]),'DESDE':([35,41,42,43,44,45,46,47,88,89,91,92,97,107,108,116,120,123,125,129,130,134,135,136,138,140,141,142,144,],[49,49,49,49,49,49,49,49,-7,-10,-8,-9,-61,-11,-12,-43,-13,-53,-58,49,-14,-15,49,-83,-50,-52,-80,49,-51,]),'LEE':([35,41,42,43,44,45,46,47,88,89,91,92,97,107,108,116,120,123,125,129,130,134,135,136,138,140,141,142,144,],[51,51,51,51,51,51,51,51,-7,-10,-8,-9,-61,-11,-12,-43,-13,-53,-58,51,-14,-15,51,-83,-50,-52,-80,51,-51,]),'ESCRIBE':([35,41,42,43,44,45,46,47,88,89,91,92,97,107,108,116,120,123,125,129,130,134,135,136,138,140,141,142,144,],[52,52,52,52,52,52,52,52,-7,-10,-8,-9,-61,-11,-12,-43,-13,-53,-58,52,-14,-15,52,-83,-50,-52,-80,52,-51,]),'SI':([35,41,42,43,44,45,46,47,88,89,91,92,97,107,108,116,120,123,125,129,130,134,135,136,138,140,141,142,144,],[53,53,53,53,53,53,53,53,-7,-10,-8,-9,-61,-11,-12,-43,-13,-53,-58,53,-14,-15,53,-83,-50,-52,-80,53,-51,]),'INT':([48,],[63,]),'FLOAT':([48,],[64,]),'CHAR':([48,],[65,]),'COLON':([63,64,65,],[73,74,75,]),'STRING':([70,104,],[85,118,]),'ENTONCES':([106,],[119,]),'SINO':([136,],[139,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'estatutoRepeticionCondicional':([0,],[1,]),'expresion':([3,4,15,16,23,33,54,67,68,71,76,95,110,111,],[5,13,26,27,34,37,72,78,80,86,93,113,121,122,]),'termino1':([3,4,15,16,18,19,20,21,23,33,54,67,68,71,76,95,110,111,],[6,6,6,6,29,29,29,29,6,6,6,6,6,6,6,6,6,6,]),'termino':([3,4,15,16,18,19,20,21,23,33,54,67,68,71,76,95,110,111,],[7,7,7,7,28,30,31,32,7,7,7,7,7,7,7,7,7,7,]),'posibleID':([3,4,15,16,18,19,20,21,23,33,54,67,68,69,71,73,74,75,76,95,100,109,110,111,131,],[8,8,8,8,8,8,8,8,8,8,8,8,8,81,8,90,90,90,8,8,115,90,8,8,90,]),'np_ID':([12,],[22,]),'estatutos':([35,41,42,43,44,45,46,47,129,135,142,],[39,56,57,58,59,60,61,62,133,137,143,]),'empty':([35,41,42,43,44,45,46,47,67,70,77,81,84,85,113,115,117,118,129,135,136,142,],[40,40,40,40,40,40,40,40,79,83,96,99,103,103,96,99,103,103,40,40,140,40,]),'declaracion':([35,41,42,43,44,45,46,47,129,135,142,],[41,41,41,41,41,41,41,41,41,41,41,]),'estatutoRepeticionIncondicional':([35,41,42,43,44,45,46,47,129,135,142,],[42,42,42,42,42,42,42,42,42,42,42,]),'lectura':([35,41,42,43,44,45,46,47,129,135,142,],[43,43,43,43,43,43,43,43,43,43,43,]),'llamadaFuncion':([35,41,42,43,44,45,46,47,129,135,142,],[44,44,44,44,44,44,44,44,44,44,44,]),'asignacion':([35,41,42,43,44,45,46,47,129,135,142,],[45,45,45,45,45,45,45,45,45,45,45,]),'escritura':([35,41,42,43,44,45,46,47,129,135,142,],[46,46,46,46,46,46,46,46,46,46,46,]),'decision':([35,41,42,43,44,45,46,47,129,135,142,],[47,47,47,47,47,47,47,47,47,47,47,]),'primerParametro':([67,],[77,]),'escritura2':([70,],[82,]),'declaracion2':([73,74,75,109,131,],[88,91,92,120,134,]),'extraParametros':([77,113,],[94,124,]),'lectura2':([81,115,],[98,126,]),'escritura3':([84,85,117,118,],[102,105,127,128,]),'declaracion3':([90,],[107,]),'decision2':([136,],[138,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> estatutoRepeticionCondicional","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMICOLON programa2','programa',4,'p_programa','yaccPatito.py',32),
  ('programa2 -> declaracion programa2','programa2',2,'p_programa2','yaccPatito.py',40),
  ('programa2 -> programa3','programa2',1,'p_programa2','yaccPatito.py',41),
  ('programa3 -> declaracionFuncion programa3','programa3',2,'p_programa3','yaccPatito.py',48),
  ('programa3 -> principal','programa3',1,'p_programa3','yaccPatito.py',49),
  ('principal -> PRINCIPAL OPAREN CPAREN OBRACKET estatutos CBRACKET','principal',6,'p_principal','yaccPatito.py',55),
  ('declaracion -> VAR INT COLON declaracion2','declaracion',4,'p_declaracion','yaccPatito.py',61),
  ('declaracion -> VAR FLOAT COLON declaracion2','declaracion',4,'p_declaracion','yaccPatito.py',62),
  ('declaracion -> VAR CHAR COLON declaracion2','declaracion',4,'p_declaracion','yaccPatito.py',63),
  ('declaracion2 -> SEMICOLON','declaracion2',1,'p_declaracion2_1','yaccPatito.py',69),
  ('declaracion2 -> posibleID declaracion3','declaracion2',2,'p_declaracion2_2','yaccPatito.py',75),
  ('declaracion3 -> SEMICOLON','declaracion3',1,'p_declaracion3_1','yaccPatito.py',81),
  ('declaracion3 -> COMA declaracion2','declaracion3',2,'p_declaracion3_2','yaccPatito.py',87),
  ('declaracion3 -> ASSIGN expresion SEMICOLON','declaracion3',3,'p_declaracion3_3','yaccPatito.py',93),
  ('declaracion3 -> ASSIGN expresion COMA declaracion2','declaracion3',4,'p_declaracion3_4','yaccPatito.py',99),
  ('declaracionFuncion -> FUNCION VOID ID OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET','declaracionFuncion',10,'p_declaracionFuncion','yaccPatito.py',105),
  ('declaracionFuncion -> FUNCION INT ID OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET','declaracionFuncion',10,'p_declaracionFuncion','yaccPatito.py',106),
  ('declaracionFuncion -> FUNCION FLOAT ID OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET','declaracionFuncion',10,'p_declaracionFuncion','yaccPatito.py',107),
  ('declaracionFuncion -> FUNCION CHAR ID OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET','declaracionFuncion',10,'p_declaracionFuncion','yaccPatito.py',108),
  ('declaracionFuncionParametros -> empty','declaracionFuncionParametros',1,'p_declaracionFuncionParametros_1','yaccPatito.py',115),
  ('declaracionFuncionParametros -> INT ID','declaracionFuncionParametros',2,'p_declaracionFuncionParametros_2','yaccPatito.py',121),
  ('declaracionFuncionParametros -> FLOAT ID','declaracionFuncionParametros',2,'p_declaracionFuncionParametros_2','yaccPatito.py',122),
  ('declaracionFuncionParametros -> CHAR ID','declaracionFuncionParametros',2,'p_declaracionFuncionParametros_2','yaccPatito.py',123),
  ('declaracionFuncionParametros -> INT ID declaracionFuncionParametros2','declaracionFuncionParametros',3,'p_declaracionFuncionParametros_3','yaccPatito.py',129),
  ('declaracionFuncionParametros -> FLOAT ID declaracionFuncionParametros2','declaracionFuncionParametros',3,'p_declaracionFuncionParametros_3','yaccPatito.py',130),
  ('declaracionFuncionParametros -> CHAR ID declaracionFuncionParametros2','declaracionFuncionParametros',3,'p_declaracionFuncionParametros_3','yaccPatito.py',131),
  ('declaracionFuncionParametros2 -> COMA INT ID','declaracionFuncionParametros2',3,'p_declaracionFuncionParametros2_3','yaccPatito.py',137),
  ('declaracionFuncionParametros2 -> COMA FLOAT ID','declaracionFuncionParametros2',3,'p_declaracionFuncionParametros2_3','yaccPatito.py',138),
  ('declaracionFuncionParametros2 -> COMA CHAR ID','declaracionFuncionParametros2',3,'p_declaracionFuncionParametros2_3','yaccPatito.py',139),
  ('declaracionFuncionParametros2 -> COMA INT ID declaracionFuncionParametros2','declaracionFuncionParametros2',4,'p_declaracionFuncionParametros2_4','yaccPatito.py',145),
  ('declaracionFuncionParametros2 -> COMA FLOAT ID declaracionFuncionParametros2','declaracionFuncionParametros2',4,'p_declaracionFuncionParametros2_4','yaccPatito.py',146),
  ('declaracionFuncionParametros2 -> COMA CHAR ID declaracionFuncionParametros2','declaracionFuncionParametros2',4,'p_declaracionFuncionParametros2_4','yaccPatito.py',147),
  ('declaracionFuncionVariables -> empty','declaracionFuncionVariables',1,'p_declaracionFuncionVariables','yaccPatito.py',153),
  ('declaracionFuncionVariables -> declaracion','declaracionFuncionVariables',1,'p_declaracionFuncionVariables','yaccPatito.py',154),
  ('estatutos -> empty','estatutos',1,'p_estatutos_1','yaccPatito.py',159),
  ('estatutos -> declaracion estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',164),
  ('estatutos -> estatutoRepeticionIncondicional estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',165),
  ('estatutos -> lectura estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',166),
  ('estatutos -> llamadaFuncion estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',167),
  ('estatutos -> asignacion estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',168),
  ('estatutos -> escritura estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',169),
  ('estatutos -> decision estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',170),
  ('escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON','escritura',5,'p_escritura','yaccPatito.py',176),
  ('escritura2 -> empty','escritura2',1,'p_escritura2_1','yaccPatito.py',181),
  ('escritura2 -> ID escritura3','escritura2',2,'p_escritura2_2','yaccPatito.py',186),
  ('escritura2 -> STRING escritura3','escritura2',2,'p_escritura2_2','yaccPatito.py',187),
  ('escritura3 -> empty','escritura3',1,'p_escritura3_1','yaccPatito.py',192),
  ('escritura3 -> COMA ID escritura3','escritura3',3,'p_escritura3_3','yaccPatito.py',197),
  ('escritura3 -> COMA STRING escritura3','escritura3',3,'p_escritura3_3','yaccPatito.py',198),
  ('decision -> SI OPAREN expresion CPAREN ENTONCES OBRACKET estatutos CBRACKET decision2','decision',9,'p_decision','yaccPatito.py',203),
  ('decision2 -> SINO OBRACKET estatutos CBRACKET','decision2',4,'p_decision_2','yaccPatito.py',209),
  ('decision2 -> empty','decision2',1,'p_decision_2','yaccPatito.py',210),
  ('llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN SEMICOLON','llamadaFuncion',6,'p_llamadaFuncion','yaccPatito.py',215),
  ('primerParametro -> expresion','primerParametro',1,'p_primerParametro','yaccPatito.py',221),
  ('primerParametro -> empty','primerParametro',1,'p_primerParametro','yaccPatito.py',222),
  ('extraParametros -> COMA expresion extraParametros','extraParametros',3,'p_extraParametros','yaccPatito.py',227),
  ('extraParametros -> empty','extraParametros',1,'p_extraParametros','yaccPatito.py',228),
  ('lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON','lectura',6,'p_lectura','yaccPatito.py',233),
  ('lectura2 -> empty','lectura2',1,'p_lectura2_1','yaccPatito.py',238),
  ('lectura2 -> COMA posibleID lectura2','lectura2',3,'p_lectura2_3','yaccPatito.py',243),
  ('asignacion -> ID ASSIGN expresion SEMICOLON','asignacion',4,'p_asignacion','yaccPatito.py',248),
  ('expresion -> expresion LOGIC expresion','expresion',3,'p_expresion_3','yaccPatito.py',253),
  ('expresion -> expresion RELOP expresion','expresion',3,'p_expresion_3','yaccPatito.py',254),
  ('expresion -> termino1 OPMATRIZ','expresion',2,'p_expresion_2','yaccPatito.py',260),
  ('expresion -> termino','expresion',1,'p_expresion_1','yaccPatito.py',266),
  ('termino -> termino PLUS termino','termino',3,'p_termino_3','yaccPatito.py',282),
  ('termino -> termino MINUS termino','termino',3,'p_termino_3','yaccPatito.py',283),
  ('termino -> termino MULTIPLY termino','termino',3,'p_termino_3','yaccPatito.py',284),
  ('termino -> termino DIVIDE termino','termino',3,'p_termino_3','yaccPatito.py',285),
  ('termino -> termino1 OPMATRIZ','termino',2,'p_termino_2','yaccPatito.py',312),
  ('termino -> termino1','termino',1,'p_termino_1','yaccPatito.py',318),
  ('termino1 -> posibleID','termino1',1,'p_termino1_1','yaccPatito.py',324),
  ('termino1 -> ENTERO','termino1',1,'p_termino1_1','yaccPatito.py',325),
  ('termino1 -> FLOTANTE','termino1',1,'p_termino1_1','yaccPatito.py',326),
  ('termino1 -> CARACTER','termino1',1,'p_termino1_1','yaccPatito.py',327),
  ('posibleID -> ID np_ID','posibleID',2,'p_posibleID_1','yaccPatito.py',333),
  ('posibleID -> ID OCORCH expresion CCORCH','posibleID',4,'p_posibleID_4','yaccPatito.py',339),
  ('posibleID -> ID np_ID OCORCH expresion COMA expresion CCORCH','posibleID',7,'p_posibleID_6','yaccPatito.py',345),
  ('termino1 -> OPAREN expresion CPAREN','termino1',3,'p_termino1_3','yaccPatito.py',352),
  ('estatutoRepeticionIncondicional -> DESDE ID ASSIGN expresion HASTA expresion HAZ OBRACKET estatutos CBRACKET','estatutoRepeticionIncondicional',10,'p_estatutoRepeticionIncondicional','yaccPatito.py',359),
  ('estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET','estatutoRepeticionCondicional',8,'p_estatutoRepeticionCondicional','yaccPatito.py',364),
  ('np_ID -> <empty>','np_ID',0,'p_np_ID','yaccPatito.py',373),
  ('empty -> <empty>','empty',0,'p_empty','yaccPatito.py',385),
]
