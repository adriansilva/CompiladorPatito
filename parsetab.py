
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDEleftOPMATRIZASSIGN CARACTER CBRACKET CCORCH CHAR COLON COMA COMENTARIO CPAREN DESDE DIVIDE ENTERO ENTONCES ESCRIBE FLOAT FLOTANTE FUNCION HASTA HAZ ID IGNORE INT LEE LOGIC MIENTRAS MINUS MULTIPLY NEWLINE OBRACKET OCORCH OPAREN OPMATRIZ PLUS PRINCIPAL PROGRAMA QUOT REGRESA RELOP SEMICOLON SI SINO STRING VAR VOID\n    programa : PROGRAMA ID SEMICOLON programa2\n    \n    programa2 : declaracion programa2\n              | programa3\n    \n    programa3 : declaracionFuncion programa3\n              | principal\n    \n    principal : PRINCIPAL npdeclfunc OPAREN CPAREN OBRACKET estatutos CBRACKET\n    \n    declaracion : VAR INT defineTipo COLON declaracion2\n                | VAR FLOAT defineTipo COLON declaracion2\n                | VAR CHAR defineTipo COLON declaracion2\n    \n    defineTipo :\n    \n    declaracion2 : posibleID np_addVariable declaracion3\n    \n    declaracion3 : SEMICOLON\n                 | COMA declaracion2\n                 | ASSIGN expresion SEMICOLON\n                 | ASSIGN expresion COMA declaracion2\n    \n    declaracionFuncion : FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET\n                       | FUNCION INT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET\n                       | FUNCION FLOAT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET\n                       | FUNCION CHAR ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET\n    \n    declaracionFuncionParametros : empty\n    \n    declaracionFuncionParametros : INT ID np_addVariableParametro declaracionFuncionParametros2\n                                 | FLOAT ID np_addVariableParametro declaracionFuncionParametros2\n                                 | CHAR ID np_addVariableParametro declaracionFuncionParametros2\n    \n    declaracionFuncionParametros2 : empty\n    \n    declaracionFuncionParametros2 : COMA INT ID np_addVariableParametro declaracionFuncionParametros2\n                                  | COMA FLOAT ID np_addVariableParametro declaracionFuncionParametros2\n                                  | COMA CHAR ID np_addVariableParametro declaracionFuncionParametros2\n    \n    declaracionFuncionVariables : empty\n                                | declaracion\n    \n    npdeclfunc :\n    \n    estatutos : empty\n              | return\n    \n    estatutos : declaracion estatutos\n              | estatutoRepeticionIncondicional estatutos\n              | estatutoRepeticionCondicional estatutos\n              | lectura estatutos\n              | asignacion estatutos\n              | escritura estatutos\n              | decision estatutos\n    \n    estatutos : llamadaFuncion SEMICOLON estatutos\n    \n    escritura : ESCRIBE OPAREN escritura2 CPAREN SEMICOLON\n    \n    escritura2 : empty\n    \n    escritura2 : posibleID escritura3\n               | STRING escritura3\n    \n    escritura3 : empty\n    \n    escritura3 : COMA expresion escritura3\n               | COMA STRING escritura3\n    \n    decision : SI OPAREN expresion CPAREN ENTONCES OBRACKET estatutos CBRACKET decision2\n    \n    decision2 : SINO OBRACKET estatutos CBRACKET\n              | empty\n    \n    llamadaFuncion : ID OPAREN primerParametro extraParametros CPAREN\n    \n    primerParametro : expresion\n                    | empty\n    \n    extraParametros : COMA expresion extraParametros\n                    | empty\n    \n    lectura : LEE OPAREN posibleID lectura2 CPAREN SEMICOLON\n    \n    lectura2 : empty\n    \n    lectura2 : COMA posibleID lectura2\n    \n    asignacion : posibleID ASSIGN expresion SEMICOLON\n    \n    expresion : expresion LOGIC expresion\n              | expresion RELOP expresion\n    \n    expresion : termino1 OPMATRIZ\n    \n    expresion : termino\n    \n    termino : termino PLUS termino\n            | termino MINUS termino\n            | termino MULTIPLY termino\n            | termino DIVIDE termino\n    \n    termino : termino1 OPMATRIZ\n    \n    termino : termino1\n    \n    termino1 : posibleID np_ID\n             | ENTERO\n             | FLOTANTE\n             | llamadaFuncion\n    \n    posibleID : ID\n    \n    posibleID : ID OCORCH expresion CCORCH\n    \n    posibleID : ID OCORCH expresion COMA expresion CCORCH\n    \n    termino1 : OPAREN expresion CPAREN\n             | QUOT CARACTER QUOT\n    \n    estatutoRepeticionIncondicional : DESDE ID np_ID HASTA expresion HAZ OBRACKET estatutos CBRACKET\n    \n    estatutoRepeticionCondicional : MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET\n    \n    return : REGRESA expresion SEMICOLON\n    \n    np_ID :\n    \n    np_addVariableParametro :\n    \n    np_addVariable :\n    \n    empty :\n    '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,5,7,10,13,17,99,],[0,-1,-3,-5,-2,-4,-6,]),'ID':([2,18,19,20,21,31,32,33,39,42,43,48,50,53,54,55,62,63,64,65,66,67,68,70,71,78,79,80,81,90,107,110,111,112,113,114,115,116,119,120,121,123,124,125,126,153,154,165,171,172,173,174,176,181,182,186,189,193,194,195,205,218,219,223,227,234,235,236,237,239,240,242,],[3,26,27,28,29,41,41,41,-7,-8,-9,72,82,93,94,95,72,72,72,72,72,72,72,82,109,-11,-12,41,82,82,72,82,82,41,82,41,82,-13,82,82,82,82,82,82,82,-14,41,72,72,72,72,82,82,41,-59,82,-15,210,211,212,-41,72,-56,72,72,-80,-85,-79,-48,-50,72,-49,]),'SEMICOLON':([3,40,41,49,69,82,84,85,86,87,88,89,108,117,118,122,127,147,156,157,158,159,160,161,162,163,164,183,190,191,200,203,],[4,-84,-74,79,107,-74,-69,-63,-82,-71,-72,-73,140,153,-75,-62,-70,182,-60,-61,-64,-69,-65,-66,-67,-77,-78,205,-76,-68,-51,219,]),'VAR':([4,6,39,42,43,48,62,63,64,65,66,67,68,78,79,92,96,97,98,107,116,153,165,171,172,173,182,189,205,218,219,223,227,234,235,236,237,239,240,242,],[8,8,-7,-8,-9,8,8,8,8,8,8,8,8,-11,-12,8,8,8,8,8,-13,-14,8,8,8,8,-59,-15,-41,8,-56,8,8,-80,-85,-79,-48,-50,8,-49,]),'FUNCION':([4,6,9,39,42,43,78,79,116,153,189,209,213,214,215,],[11,11,11,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,]),'PRINCIPAL':([4,6,9,39,42,43,78,79,116,153,189,209,213,214,215,],[12,12,12,-7,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,]),'INT':([8,11,44,45,46,47,168,],[14,19,53,53,53,53,193,]),'FLOAT':([8,11,44,45,46,47,168,],[15,20,54,54,54,54,194,]),'CHAR':([8,11,44,45,46,47,168,],[16,21,55,55,55,55,195,]),'VOID':([11,],[18,]),'OPAREN':([12,22,26,27,28,29,34,35,36,37,50,70,72,73,74,76,77,81,82,90,110,111,113,115,119,120,121,123,124,125,126,174,176,186,],[-30,30,-30,-30,-30,-30,44,45,46,47,90,90,110,111,112,114,115,90,110,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'COLON':([14,15,16,23,24,25,],[-10,-10,-10,31,32,33,]),'CPAREN':([30,41,44,45,46,47,51,52,56,57,58,82,84,85,86,87,88,89,93,94,95,110,114,118,122,127,128,133,134,135,142,143,144,145,146,148,149,150,151,152,156,157,158,159,160,161,162,163,164,166,167,169,170,175,177,179,180,184,185,187,190,191,200,201,204,206,207,210,211,212,217,220,221,222,224,225,226,230,231,232,],[38,-74,-85,-85,-85,-85,92,-20,96,97,98,-74,-69,-63,-82,-71,-72,-73,-83,-83,-83,-85,-85,-75,-62,-70,163,-85,-85,-85,-85,-52,-53,178,-85,183,-42,-85,-85,188,-60,-61,-64,-69,-65,-66,-67,-77,-78,-21,-24,-22,-23,200,-55,203,-57,-43,-45,-44,-76,-68,-51,-85,-85,-85,-85,-83,-83,-83,-54,-58,-46,-47,-85,-85,-85,-25,-26,-27,]),'OBRACKET':([38,39,42,43,78,79,92,96,97,98,116,130,131,132,136,137,138,153,189,202,208,216,238,],[48,-7,-8,-9,-11,-12,-85,-85,-85,-85,-13,165,-28,-29,171,172,173,-14,-15,218,223,227,240,]),'REGRESA':([39,42,43,48,62,63,64,65,66,67,68,78,79,107,116,153,165,171,172,173,182,189,205,218,219,223,227,234,235,236,237,239,240,242,],[-7,-8,-9,70,70,70,70,70,70,70,70,-11,-12,70,-13,-14,70,70,70,70,-59,-15,-41,70,-56,70,70,-80,-85,-79,-48,-50,70,-49,]),'DESDE':([39,42,43,48,62,63,64,65,66,67,68,78,79,107,116,153,165,171,172,173,182,189,205,218,219,223,227,234,235,236,237,239,240,242,],[-7,-8,-9,71,71,71,71,71,71,71,71,-11,-12,71,-13,-14,71,71,71,71,-59,-15,-41,71,-56,71,71,-80,-85,-79,-48,-50,71,-49,]),'MIENTRAS':([39,42,43,48,62,63,64,65,66,67,68,78,79,107,116,153,165,171,172,173,182,189,205,218,219,223,227,234,235,236,237,239,240,242,],[-7,-8,-9,73,73,73,73,73,73,73,73,-11,-12,73,-13,-14,73,73,73,73,-59,-15,-41,73,-56,73,73,-80,-85,-79,-48,-50,73,-49,]),'LEE':([39,42,43,48,62,63,64,65,66,67,68,78,79,107,116,153,165,171,172,173,182,189,205,218,219,223,227,234,235,236,237,239,240,242,],[-7,-8,-9,74,74,74,74,74,74,74,74,-11,-12,74,-13,-14,74,74,74,74,-59,-15,-41,74,-56,74,74,-80,-85,-79,-48,-50,74,-49,]),'ESCRIBE':([39,42,43,48,62,63,64,65,66,67,68,78,79,107,116,153,165,171,172,173,182,189,205,218,219,223,227,234,235,236,237,239,240,242,],[-7,-8,-9,76,76,76,76,76,76,76,76,-11,-12,76,-13,-14,76,76,76,76,-59,-15,-41,76,-56,76,76,-80,-85,-79,-48,-50,76,-49,]),'SI':([39,42,43,48,62,63,64,65,66,67,68,78,79,107,116,153,165,171,172,173,182,189,205,218,219,223,227,234,235,236,237,239,240,242,],[-7,-8,-9,77,77,77,77,77,77,77,77,-11,-12,77,-13,-14,77,77,77,77,-59,-15,-41,77,-56,77,77,-80,-85,-79,-48,-50,77,-49,]),'CBRACKET':([39,42,43,48,59,60,61,62,63,64,65,66,67,68,78,79,100,101,102,103,104,105,106,107,116,139,140,153,165,171,172,173,182,189,192,196,197,198,205,218,219,223,227,228,229,233,234,235,236,237,239,240,241,242,],[-7,-8,-9,-85,99,-31,-32,-85,-85,-85,-85,-85,-85,-85,-11,-12,-33,-34,-35,-36,-37,-38,-39,-85,-13,-40,-81,-14,-85,-85,-85,-85,-59,-15,209,213,214,215,-41,-85,-56,-85,-85,234,235,236,-80,-85,-79,-48,-50,-85,242,-49,]),'COMA':([40,41,49,82,83,84,85,86,87,88,89,93,94,95,110,117,118,122,127,133,134,135,142,143,144,146,150,151,156,157,158,159,160,161,162,163,164,190,191,200,201,204,206,207,210,211,212,224,225,226,],[-84,-74,80,-74,119,-69,-63,-82,-71,-72,-73,-83,-83,-83,-85,154,-75,-62,-70,168,168,168,176,-52,-53,181,186,186,-60,-61,-64,-69,-65,-66,-67,-77,-78,-76,-68,-51,176,181,186,186,-83,-83,-83,168,168,168,]),'ASSIGN':([40,41,49,72,75,118,190,],[-84,-74,81,-74,113,-75,-76,]),'OCORCH':([41,72,82,],[50,50,50,]),'ENTERO':([50,70,81,90,110,111,113,115,119,120,121,123,124,125,126,174,176,186,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'FLOTANTE':([50,70,81,90,110,111,113,115,119,120,121,123,124,125,126,174,176,186,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'QUOT':([50,70,81,90,110,111,113,115,119,120,121,123,124,125,126,129,174,176,186,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,164,91,91,91,]),'OPMATRIZ':([82,84,86,87,88,89,118,127,159,163,164,190,200,],[-74,122,-82,-71,-72,-73,-75,-70,191,-77,-78,-76,-51,]),'PLUS':([82,84,85,86,87,88,89,118,122,127,158,159,160,161,162,163,164,190,191,200,],[-74,-69,123,-82,-71,-72,-73,-75,-68,-70,-64,-69,-65,-66,-67,-77,-78,-76,-68,-51,]),'MINUS':([82,84,85,86,87,88,89,118,122,127,158,159,160,161,162,163,164,190,191,200,],[-74,-69,124,-82,-71,-72,-73,-75,-68,-70,-64,-69,-65,-66,-67,-77,-78,-76,-68,-51,]),'MULTIPLY':([82,84,85,86,87,88,89,118,122,127,158,159,160,161,162,163,164,190,191,200,],[-74,-69,125,-82,-71,-72,-73,-75,-68,-70,125,-69,125,-66,-67,-77,-78,-76,-68,-51,]),'DIVIDE':([82,84,85,86,87,88,89,118,122,127,158,159,160,161,162,163,164,190,191,200,],[-74,-69,126,-82,-71,-72,-73,-75,-68,-70,126,-69,126,-66,-67,-77,-78,-76,-68,-51,]),'CCORCH':([82,83,84,85,86,87,88,89,118,122,127,155,156,157,158,159,160,161,162,163,164,190,191,200,],[-74,118,-69,-63,-82,-71,-72,-73,-75,-62,-70,190,-60,-61,-64,-69,-65,-66,-67,-77,-78,-76,-68,-51,]),'LOGIC':([82,83,84,85,86,87,88,89,108,117,118,122,127,128,143,145,147,152,155,156,157,158,159,160,161,162,163,164,190,191,199,200,201,206,],[-74,120,-69,-63,-82,-71,-72,-73,120,120,-75,-62,-70,120,120,120,120,120,120,120,120,-64,-69,-65,-66,-67,-77,-78,-76,-68,120,-51,120,120,]),'RELOP':([82,83,84,85,86,87,88,89,108,117,118,122,127,128,143,145,147,152,155,156,157,158,159,160,161,162,163,164,190,191,199,200,201,206,],[-74,121,-69,-63,-82,-71,-72,-73,121,121,-75,-62,-70,121,121,121,121,121,121,121,121,-64,-69,-65,-66,-67,-77,-78,-76,-68,121,-51,121,121,]),'HAZ':([82,84,85,86,87,88,89,118,122,127,156,157,158,159,160,161,162,163,164,178,190,191,199,200,],[-74,-69,-63,-82,-71,-72,-73,-75,-62,-70,-60,-61,-64,-69,-65,-66,-67,-77,-78,202,-76,-68,216,-51,]),'CARACTER':([91,],[129,]),'HASTA':([109,141,],[-82,174,]),'STRING':([114,186,],[151,207,]),'ENTONCES':([188,],[208,]),'SINO':([235,],[238,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'programa2':([4,6,],[5,13,]),'declaracion':([4,6,48,62,63,64,65,66,67,68,92,96,97,98,107,165,171,172,173,218,223,227,240,],[6,6,62,62,62,62,62,62,62,62,132,132,132,132,62,62,62,62,62,62,62,62,62,]),'programa3':([4,6,9,],[7,7,17,]),'declaracionFuncion':([4,6,9,],[9,9,9,]),'principal':([4,6,9,],[10,10,10,]),'npdeclfunc':([12,26,27,28,29,],[22,34,35,36,37,]),'defineTipo':([14,15,16,],[23,24,25,]),'declaracion2':([31,32,33,80,154,],[39,42,43,116,189,]),'posibleID':([31,32,33,48,50,62,63,64,65,66,67,68,70,80,81,90,107,110,111,112,113,114,115,119,120,121,123,124,125,126,154,165,171,172,173,174,176,181,186,218,223,227,240,],[40,40,40,75,86,75,75,75,75,75,75,75,86,40,86,86,75,86,86,146,86,150,86,86,86,86,86,86,86,86,40,75,75,75,75,86,86,204,86,75,75,75,75,]),'np_addVariable':([40,],[49,]),'declaracionFuncionParametros':([44,45,46,47,],[51,56,57,58,]),'empty':([44,45,46,47,48,62,63,64,65,66,67,68,92,96,97,98,107,110,114,133,134,135,142,146,150,151,165,171,172,173,201,204,206,207,218,223,224,225,226,227,235,240,],[52,52,52,52,60,60,60,60,60,60,60,60,131,131,131,131,60,144,149,167,167,167,177,180,185,185,60,60,60,60,177,180,185,185,60,60,167,167,167,60,239,60,]),'estatutos':([48,62,63,64,65,66,67,68,107,165,171,172,173,218,223,227,240,],[59,100,101,102,103,104,105,106,139,192,196,197,198,228,229,233,241,]),'return':([48,62,63,64,65,66,67,68,107,165,171,172,173,218,223,227,240,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'estatutoRepeticionIncondicional':([48,62,63,64,65,66,67,68,107,165,171,172,173,218,223,227,240,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'estatutoRepeticionCondicional':([48,62,63,64,65,66,67,68,107,165,171,172,173,218,223,227,240,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'lectura':([48,62,63,64,65,66,67,68,107,165,171,172,173,218,223,227,240,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'asignacion':([48,62,63,64,65,66,67,68,107,165,171,172,173,218,223,227,240,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'escritura':([48,62,63,64,65,66,67,68,107,165,171,172,173,218,223,227,240,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'decision':([48,62,63,64,65,66,67,68,107,165,171,172,173,218,223,227,240,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'llamadaFuncion':([48,50,62,63,64,65,66,67,68,70,81,90,107,110,111,113,115,119,120,121,123,124,125,126,165,171,172,173,174,176,186,218,223,227,240,],[69,89,69,69,69,69,69,69,69,89,89,89,69,89,89,89,89,89,89,89,89,89,89,89,69,69,69,69,89,89,89,69,69,69,69,]),'declaracion3':([49,],[78,]),'expresion':([50,70,81,90,110,111,113,115,119,120,121,174,176,186,],[83,108,117,128,143,145,147,152,155,156,157,199,201,206,]),'termino1':([50,70,81,90,110,111,113,115,119,120,121,123,124,125,126,174,176,186,],[84,84,84,84,84,84,84,84,84,84,84,159,159,159,159,84,84,84,]),'termino':([50,70,81,90,110,111,113,115,119,120,121,123,124,125,126,174,176,186,],[85,85,85,85,85,85,85,85,85,85,85,158,160,161,162,85,85,85,]),'np_ID':([86,109,],[127,141,]),'declaracionFuncionVariables':([92,96,97,98,],[130,136,137,138,]),'np_addVariableParametro':([93,94,95,210,211,212,],[133,134,135,224,225,226,]),'primerParametro':([110,],[142,]),'escritura2':([114,],[148,]),'declaracionFuncionParametros2':([133,134,135,224,225,226,],[166,169,170,230,231,232,]),'extraParametros':([142,201,],[175,217,]),'lectura2':([146,204,],[179,220,]),'escritura3':([150,151,206,207,],[184,187,221,222,]),'decision2':([235,],[237,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID SEMICOLON programa2','programa',4,'p_programa','yaccPatito.py',34),
  ('programa2 -> declaracion programa2','programa2',2,'p_programa2','yaccPatito.py',41),
  ('programa2 -> programa3','programa2',1,'p_programa2','yaccPatito.py',42),
  ('programa3 -> declaracionFuncion programa3','programa3',2,'p_programa3','yaccPatito.py',49),
  ('programa3 -> principal','programa3',1,'p_programa3','yaccPatito.py',50),
  ('principal -> PRINCIPAL npdeclfunc OPAREN CPAREN OBRACKET estatutos CBRACKET','principal',7,'p_principal','yaccPatito.py',56),
  ('declaracion -> VAR INT defineTipo COLON declaracion2','declaracion',5,'p_declaracion','yaccPatito.py',67),
  ('declaracion -> VAR FLOAT defineTipo COLON declaracion2','declaracion',5,'p_declaracion','yaccPatito.py',68),
  ('declaracion -> VAR CHAR defineTipo COLON declaracion2','declaracion',5,'p_declaracion','yaccPatito.py',69),
  ('defineTipo -> <empty>','defineTipo',0,'p_defineTipo','yaccPatito.py',80),
  ('declaracion2 -> posibleID np_addVariable declaracion3','declaracion2',3,'p_declaracion2','yaccPatito.py',88),
  ('declaracion3 -> SEMICOLON','declaracion3',1,'p_declaracion3_1','yaccPatito.py',95),
  ('declaracion3 -> COMA declaracion2','declaracion3',2,'p_declaracion3_1','yaccPatito.py',96),
  ('declaracion3 -> ASSIGN expresion SEMICOLON','declaracion3',3,'p_declaracion3_1','yaccPatito.py',97),
  ('declaracion3 -> ASSIGN expresion COMA declaracion2','declaracion3',4,'p_declaracion3_1','yaccPatito.py',98),
  ('declaracionFuncion -> FUNCION VOID ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET','declaracionFuncion',11,'p_declaracionFuncion','yaccPatito.py',105),
  ('declaracionFuncion -> FUNCION INT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET','declaracionFuncion',11,'p_declaracionFuncion','yaccPatito.py',106),
  ('declaracionFuncion -> FUNCION FLOAT ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET','declaracionFuncion',11,'p_declaracionFuncion','yaccPatito.py',107),
  ('declaracionFuncion -> FUNCION CHAR ID npdeclfunc OPAREN declaracionFuncionParametros CPAREN declaracionFuncionVariables OBRACKET estatutos CBRACKET','declaracionFuncion',11,'p_declaracionFuncion','yaccPatito.py',108),
  ('declaracionFuncionParametros -> empty','declaracionFuncionParametros',1,'p_declaracionFuncionParametros_1','yaccPatito.py',121),
  ('declaracionFuncionParametros -> INT ID np_addVariableParametro declaracionFuncionParametros2','declaracionFuncionParametros',4,'p_declaracionFuncionParametros_3','yaccPatito.py',127),
  ('declaracionFuncionParametros -> FLOAT ID np_addVariableParametro declaracionFuncionParametros2','declaracionFuncionParametros',4,'p_declaracionFuncionParametros_3','yaccPatito.py',128),
  ('declaracionFuncionParametros -> CHAR ID np_addVariableParametro declaracionFuncionParametros2','declaracionFuncionParametros',4,'p_declaracionFuncionParametros_3','yaccPatito.py',129),
  ('declaracionFuncionParametros2 -> empty','declaracionFuncionParametros2',1,'p_declaracionFuncionParametros2_1','yaccPatito.py',136),
  ('declaracionFuncionParametros2 -> COMA INT ID np_addVariableParametro declaracionFuncionParametros2','declaracionFuncionParametros2',5,'p_declaracionFuncionParametros2_4','yaccPatito.py',142),
  ('declaracionFuncionParametros2 -> COMA FLOAT ID np_addVariableParametro declaracionFuncionParametros2','declaracionFuncionParametros2',5,'p_declaracionFuncionParametros2_4','yaccPatito.py',143),
  ('declaracionFuncionParametros2 -> COMA CHAR ID np_addVariableParametro declaracionFuncionParametros2','declaracionFuncionParametros2',5,'p_declaracionFuncionParametros2_4','yaccPatito.py',144),
  ('declaracionFuncionVariables -> empty','declaracionFuncionVariables',1,'p_declaracionFuncionVariables','yaccPatito.py',152),
  ('declaracionFuncionVariables -> declaracion','declaracionFuncionVariables',1,'p_declaracionFuncionVariables','yaccPatito.py',153),
  ('npdeclfunc -> <empty>','npdeclfunc',0,'p_npdeclfunc','yaccPatito.py',158),
  ('estatutos -> empty','estatutos',1,'p_estatutos_1','yaccPatito.py',166),
  ('estatutos -> return','estatutos',1,'p_estatutos_1','yaccPatito.py',167),
  ('estatutos -> declaracion estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',172),
  ('estatutos -> estatutoRepeticionIncondicional estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',173),
  ('estatutos -> estatutoRepeticionCondicional estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',174),
  ('estatutos -> lectura estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',175),
  ('estatutos -> asignacion estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',176),
  ('estatutos -> escritura estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',177),
  ('estatutos -> decision estatutos','estatutos',2,'p_estatutos_2','yaccPatito.py',178),
  ('estatutos -> llamadaFuncion SEMICOLON estatutos','estatutos',3,'p_estatutos_3','yaccPatito.py',184),
  ('escritura -> ESCRIBE OPAREN escritura2 CPAREN SEMICOLON','escritura',5,'p_escritura','yaccPatito.py',189),
  ('escritura2 -> empty','escritura2',1,'p_escritura2_1','yaccPatito.py',194),
  ('escritura2 -> posibleID escritura3','escritura2',2,'p_escritura2_2','yaccPatito.py',199),
  ('escritura2 -> STRING escritura3','escritura2',2,'p_escritura2_2','yaccPatito.py',200),
  ('escritura3 -> empty','escritura3',1,'p_escritura3_1','yaccPatito.py',206),
  ('escritura3 -> COMA expresion escritura3','escritura3',3,'p_escritura3_3','yaccPatito.py',211),
  ('escritura3 -> COMA STRING escritura3','escritura3',3,'p_escritura3_3','yaccPatito.py',212),
  ('decision -> SI OPAREN expresion CPAREN ENTONCES OBRACKET estatutos CBRACKET decision2','decision',9,'p_decision','yaccPatito.py',218),
  ('decision2 -> SINO OBRACKET estatutos CBRACKET','decision2',4,'p_decision_2','yaccPatito.py',225),
  ('decision2 -> empty','decision2',1,'p_decision_2','yaccPatito.py',226),
  ('llamadaFuncion -> ID OPAREN primerParametro extraParametros CPAREN','llamadaFuncion',5,'p_llamadaFuncion','yaccPatito.py',231),
  ('primerParametro -> expresion','primerParametro',1,'p_primerParametro','yaccPatito.py',241),
  ('primerParametro -> empty','primerParametro',1,'p_primerParametro','yaccPatito.py',242),
  ('extraParametros -> COMA expresion extraParametros','extraParametros',3,'p_extraParametros','yaccPatito.py',249),
  ('extraParametros -> empty','extraParametros',1,'p_extraParametros','yaccPatito.py',250),
  ('lectura -> LEE OPAREN posibleID lectura2 CPAREN SEMICOLON','lectura',6,'p_lectura','yaccPatito.py',257),
  ('lectura2 -> empty','lectura2',1,'p_lectura2_1','yaccPatito.py',262),
  ('lectura2 -> COMA posibleID lectura2','lectura2',3,'p_lectura2_3','yaccPatito.py',267),
  ('asignacion -> posibleID ASSIGN expresion SEMICOLON','asignacion',4,'p_asignacion','yaccPatito.py',272),
  ('expresion -> expresion LOGIC expresion','expresion',3,'p_expresion_3','yaccPatito.py',278),
  ('expresion -> expresion RELOP expresion','expresion',3,'p_expresion_3','yaccPatito.py',279),
  ('expresion -> termino1 OPMATRIZ','expresion',2,'p_expresion_2','yaccPatito.py',285),
  ('expresion -> termino','expresion',1,'p_expresion_1','yaccPatito.py',291),
  ('termino -> termino PLUS termino','termino',3,'p_termino_3','yaccPatito.py',307),
  ('termino -> termino MINUS termino','termino',3,'p_termino_3','yaccPatito.py',308),
  ('termino -> termino MULTIPLY termino','termino',3,'p_termino_3','yaccPatito.py',309),
  ('termino -> termino DIVIDE termino','termino',3,'p_termino_3','yaccPatito.py',310),
  ('termino -> termino1 OPMATRIZ','termino',2,'p_termino_2','yaccPatito.py',337),
  ('termino -> termino1','termino',1,'p_termino_1','yaccPatito.py',343),
  ('termino1 -> posibleID np_ID','termino1',2,'p_termino1_1','yaccPatito.py',349),
  ('termino1 -> ENTERO','termino1',1,'p_termino1_1','yaccPatito.py',350),
  ('termino1 -> FLOTANTE','termino1',1,'p_termino1_1','yaccPatito.py',351),
  ('termino1 -> llamadaFuncion','termino1',1,'p_termino1_1','yaccPatito.py',352),
  ('posibleID -> ID','posibleID',1,'p_posibleID_1','yaccPatito.py',359),
  ('posibleID -> ID OCORCH expresion CCORCH','posibleID',4,'p_posibleID_4','yaccPatito.py',366),
  ('posibleID -> ID OCORCH expresion COMA expresion CCORCH','posibleID',6,'p_posibleID_6','yaccPatito.py',375),
  ('termino1 -> OPAREN expresion CPAREN','termino1',3,'p_termino1_3','yaccPatito.py',383),
  ('termino1 -> QUOT CARACTER QUOT','termino1',3,'p_termino1_3','yaccPatito.py',384),
  ('estatutoRepeticionIncondicional -> DESDE ID np_ID HASTA expresion HAZ OBRACKET estatutos CBRACKET','estatutoRepeticionIncondicional',9,'p_estatutoRepeticionIncondicional','yaccPatito.py',391),
  ('estatutoRepeticionCondicional -> MIENTRAS OPAREN expresion CPAREN HAZ OBRACKET estatutos CBRACKET','estatutoRepeticionCondicional',8,'p_estatutoRepeticionCondicional','yaccPatito.py',397),
  ('return -> REGRESA expresion SEMICOLON','return',3,'p_return','yaccPatito.py',403),
  ('np_ID -> <empty>','np_ID',0,'p_np_ID','yaccPatito.py',411),
  ('np_addVariableParametro -> <empty>','np_addVariableParametro',0,'p_np_addVariableParametro','yaccPatito.py',419),
  ('np_addVariable -> <empty>','np_addVariable',0,'p_np_addVariable','yaccPatito.py',426),
  ('empty -> <empty>','empty',0,'p_empty','yaccPatito.py',438),
]
